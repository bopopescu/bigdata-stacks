version: '3.7'
services:
  spark-master:
    image: quay.io/comp-bio-aging/spark-master:master
    deploy:
      replicas: 1
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      restart_policy:
        condition: on-failure
    ports:
    - 8080:8080
    - 7077:7077
    - 6066:6066
    env_file:
    - conf/bigdata.env
    volumes:
    - ./conf/spark/spark.conf:/spark/conf/spark-defaults.conf
    - /data:/data
  spark-worker:
    image: quay.io/comp-bio-aging/spark-worker:master
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    ports:
    - 8081:8081
    - 8082:8082
    - 8083:8083
    env_file:
    - conf/bigdata.env
    volumes:
    - ./conf/spark/spark.conf:/spark/conf/spark-defaults.conf
    - /data:/data
  zeppelin:
    image: quay.io/comp-bio-aging/zeppelin
    env_file:
    - conf/bigdata.env
    ports:
    - 9002:8080
    volumes:
    - /data/notebooks/zeppelin:/zeppelin/notebook
    - /data:/data
    - ./conf/zeppelin/conf:/zeppelin/conf
    deploy:
      replicas: 1
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      restart_policy:
        condition: on-failure
#  db:
#    image: postgres:10.5
#    deploy:
#      restart_policy:
#        condition: on-failure
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: changeme
#      PGDATA: /data/databases/postgres
#    volumes:
#    - ./conf/geometa/init/sequencing.sql:/docker-entrypoint-initdb.d/sequencing.sql
#    - /data/databases/postgres:/data/databases/postgres
#    ports:
#    - 5432:5432
#
#  adminer:
#    image: adminer:latest
#    deploy:
#      restart_policy:
#        condition: on-failure
#    ports:
#    - 5050:8080
#
#  jupyter:
#    image: quay.io/comp-bio-aging/spark-ml-notebook
#    env_file:
#    - conf/bigdata.env
#    ports:
#    - 9001:8888
#    volumes:
#    - /data/notebooks/jupyter:/home/jovyan/
#    - /data:/data
#    command: start.sh jupyter lab
#    deploy:
#      replicas: 1
#      mode: replicated
#      restart_policy:
#        condition: on-failure
#      placement:
#        constraints:
#        - node.role == manager
#  alluxio-master:
#    image: alluxio/alluxio-community:1.8.0
#    command: master
#    environment:
#      ALLUXIO_RAM_FOLDER: /opt/ramdisk
#    volumes:
#    - /mnt/ramdisk:/opt/ramdisk
#    - ./conf/alluxio/alluxio-site.properties:/opt/alluxio/conf/alluxio-site.properties
#    - ./conf/alluxio/license.json:/opt/alluxio/license.json
#    - /data/underStorage:/underStorage
#    deploy:
#      placement:
#        constraints:
#        - node.role == manager
#      mode: replicated
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#    ports:
#    - 19998:19998
#    - 19999:19999
#    - 29998:29998
#    - 29999:29999
#    - 30000:30000
#  alluxio-worker:
#    image: alluxio/alluxio-community:1.8.0
#    command: worker
#    environment:
#      ALLUXIO_RAM_FOLDER: /opt/ramdisk
#    volumes:
#    - /mnt/ramdisk:/opt/ramdisk
#    - ./conf/alluxio/alluxio-site.properties:/opt/alluxio/conf/alluxio-site.properties
#    - ./conf/alluxio/license.json:/opt/alluxio/license.json
#    - /data/underStorage:/underStorage
#    deploy:
#      mode: global
#      restart_policy:
#        condition: on-failure

networks:
  default:
    driver: overlay
    attachable: true