version: '3.7'
services:
  #spark-master:
  #  image: quay.io/comp-bio-aging/spark-master:master
  #  user: "spark"
  #  deploy:
  #    replicas: 1
  #    mode: replicated
  #    placement:
  #      constraints:
  #      - node.role == manager
  #    restart_policy:
  #      condition: on-failure
  #  ports:
  #  - 8080:8080
  #  - 7077:7077
  #  - 6066:6066
  #  env_file:
  #  - conf/bigdata.env
  #  volumes:
  #  - ./conf/spark/spark.conf:/spark/conf/spark-defaults.conf
  #  - /data:/data
  #spark-worker:
  #  image: quay.io/comp-bio-aging/spark-worker:master
  #  user: "spark"
  #  deploy:
  #    mode: global
  #    restart_policy:
  #      condition: on-failure
  #  ports:
  #  - 8081:8081
  #  - 8082:8082
  #  - 8083:8083
  #  - 7337:7337
  #  env_file:
  #  - conf/bigdata.env
  #  volumes:
  #  - ./conf/spark/spark.conf:/spark/conf/spark-defaults.conf
  #  - /data:/data
  polynote:
    image: quay.io/comp-bio-aging/polynote:master
    #env_file:
    #  - conf/bigdata.env
    ports:
      - "8192:8192"
    volumes:
      - /data:/data
      - /data/notebooks/polynote:/opt/polynote/notebooks
      - ./containers/polynote/config.yml:/opt/polynote/config.yml
  zeppelin:
    image: quay.io/comp-bio-aging/zeppelin:master
    user: "zeppelin"
    env_file:
    - conf/bigdata.env
    ports:
    - 9002:8080
    - 4040:4040
    - 4041:4041
    - 4042:4042
    volumes:
    - /data/notebooks/zeppelin:/zeppelin/notebook
    #- ./conf/alluxio/alluxio-1.8.0-client.jar:/zeppelin/local-repo/org/alluxio/alluxio-core-client/1.8.0/alluxio-1.8.0-client.jar
    - /data:/data
    - ./conf/zeppelin/conf:/zeppelin/conf
    deploy:
      replicas: 1
      mode: replicated
      placement:
        constraints:
        - node.role == manager
      restart_policy:
        condition: on-failure
  db:
    image: postgres:10.5
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: changeme
      PGDATA: /data/databases/postgres
    volumes:
    - ./conf/geometa/init/sequencing.sql:/docker-entrypoint-initdb.d/sequencing.sql
    - /data:/data
    #- /data/databases/postgres:/data/databases/postgres
    ports:
    - 5432:5432
  adminer:
    image: adminer:latest
    deploy:
      restart_policy:
        condition: on-failure
    ports:
    - 5050:8080
  graphdb:
    image: "daschswiss/knora-graphdb-free:v13.0.0-PR1-4-g683a3ed"
    ports:
      - "7200:7200"
    volumes:
      - "/data/databases/graphdb:/opt/graphdb/home"
      - "./conf/graphdb/graphdb.properties:/opt/graphdb/dist/conf/graphdb.properties"
    env_file:
      - conf/bigdata.env
    entrypoint: /opt/graphdb/dist/bin/graphdb
    command:  -Xmx42G -Dgraphdb.home=/opt/graphdb/home -Dgraphdb.global.page.cache=true -Ddefault.min.distinct.threshold=36864M

networks:
  default:
    driver: overlay
    attachable: true
