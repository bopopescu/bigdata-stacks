version: '3.3'

services:

  prometheus:
    image: jesk/prometheus_alpine:1.0
    volumes:
      - ~/monitoring/conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ~/monitoring/volumes/prometheus/data:/var/lib/prometheus
    networks:
      - backend
    ports:
      - 9090:9090
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
          - node.labels.prom == true
      resources:
        limits:
          memory: 384M

  node-exporter:
    image: jesk/node-exporter_alpine:1.0
    hostname: '{{.Node.ID}}'
    volumes:
      - /proc:/usr/proc
      - /sys:/usr/sys
      - /:/rootfs
    networks:
      - backend
    ports:
      - 9100:9100
    deploy:
      mode: global
      resources:
        limits:
          memory: 32M

  netdata:
    image: firehol/netdata:alpine
    hostname: '{{.Node.ID}}'
    volumes:
      - /proc:/host/proc:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys:/host/sys:ro
    networks:
      - backend
    ports:
      - 19999:19999
    deploy:
      mode: global
      resources:
        limits:
          memory: 96M

  alertmanager:
    image: jesk/alertmanager_alpine:1.0
    volumes:
      - ~/monitoring/conf/alertmanager/:/etc/alertmanager/
    networks:
      - backend
    ports:
      - 9093:9093
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.prom == true
      resources:
        limits:
          memory: 32M

  cadvisor:
    image: google/cadvisor:v0.31.0
    hostname: '{{.Node.ID}}'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - backend
    deploy:
      mode: global
      resources:
        limits:
          memory: 96M
    ports:
      - 8080:8080

  grafana:
    image: grafana/grafana:5.1.3
    depends_on:
      - prometheus
    user: "472"
    volumes:
      - ~/monitoring/conf/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ~/monitoring/volumes/grafana/data:/var/lib/grafana
    networks:
      - backend
      - frontend
    ports:
      - 3000:3000
    environment:
      GF_INSTALL_PLUGINS: "grafana-simple-json-datasource,percona-percona-app,grafana-worldmap-panel,vonage-status-panel"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          memory: 128M

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.12.0
    hostname: '{{.Node.ID}}'
    volumes:
      - ~/monitoring/conf/blackbox/config.yml:/etc/blackbox_exporter/config.yml
    networks:
      - backend
    ports:
      - 9115:9115
    deploy:
      mode: global
      resources:
        limits:
          memory: 32M

  # memcached-exporter:
  #   image: jesk/memcached_exporter:1.0
  #   hostname: '{{.Node.ID}}'
  #   networks:
  #     - backend
  #   ports:
  #     - 9150:9150
  #   environment:
  #     MEMCACHED_HOST: "YOUR_MEMCACHED_IP_HERE"
  #     MEMCACHED_PORT: "11211"
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 32M

networks:
  frontend:
  backend:
