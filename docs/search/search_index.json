{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Warp Engine Overview 1 2 3 4 5 6 7 8 9 10 11 12 ___ ____ ____ _____ ____ ___ ______ ___ _ ___ __ ___ ____ ___ | | / / ___ __________ ____ | | /| / / __ `/ ___ / __ \\ __ ___ ___ | |/ |/ / / _ / / / / / _ / / __ ___ _ | __ /| __ / \\ __ , _ / _ / / . ___ / ___ ____ __ ___ ____ / _ / ___ __ __ ____ ___ ____ __ ______ ____ ___ ______ ____ ____ WARP ENGINE - Speeding up ! your development infraestructure Features Nginx PHP MySQL Rabbit MailHog Elasticsearch Varnish Selenium PostgreSQL Sandbox Mode (for developer modules on Magento 2) Requirements Docker community edition docker-compose Installation Run the following command in your root project folder: 1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp Command line update Run the following command in your root project folder: 1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp && ./warp update Getting started After download the warp binary file, you should initialize your dockerized infraestrucutre running the following command: 1 ./warp init Useful warp commands This repo comes with some useful bash command: Command Description warp --help Shows the warp tool help warp [command] --help Shows the specific command help. For instance: warp php --help warp info Shows the configured values and useful information for each services warp init Initialize the warp framework the first time before to start the project warp start Starts the containers warp stop Stops the containers warp reset Reset config to default warp fix fix common problems with permissions Changelog See what has changed: changes","title":"Introduction"},{"location":"index.html#warp-engine","text":"","title":"Warp Engine"},{"location":"index.html#overview","text":"1 2 3 4 5 6 7 8 9 10 11 12 ___ ____ ____ _____ ____ ___ ______ ___ _ ___ __ ___ ____ ___ | | / / ___ __________ ____ | | /| / / __ `/ ___ / __ \\ __ ___ ___ | |/ |/ / / _ / / / / / _ / / __ ___ _ | __ /| __ / \\ __ , _ / _ / / . ___ / ___ ____ __ ___ ____ / _ / ___ __ __ ____ ___ ____ __ ______ ____ ___ ______ ____ ____ WARP ENGINE - Speeding up ! your development infraestructure","title":"Overview"},{"location":"index.html#features","text":"Nginx PHP MySQL Rabbit MailHog Elasticsearch Varnish Selenium PostgreSQL Sandbox Mode (for developer modules on Magento 2)","title":"Features"},{"location":"index.html#requirements","text":"Docker community edition docker-compose","title":"Requirements"},{"location":"index.html#installation","text":"Run the following command in your root project folder: 1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp","title":"Installation"},{"location":"index.html#command-line-update","text":"Run the following command in your root project folder: 1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp && ./warp update","title":"Command line update"},{"location":"index.html#getting-started","text":"After download the warp binary file, you should initialize your dockerized infraestrucutre running the following command: 1 ./warp init","title":"Getting started"},{"location":"index.html#useful-warp-commands","text":"This repo comes with some useful bash command: Command Description warp --help Shows the warp tool help warp [command] --help Shows the specific command help. For instance: warp php --help warp info Shows the configured values and useful information for each services warp init Initialize the warp framework the first time before to start the project warp start Starts the containers warp stop Stops the containers warp reset Reset config to default warp fix fix common problems with permissions","title":"Useful warp commands"},{"location":"index.html#changelog","text":"","title":"Changelog"},{"location":"index.html#see-what-has-changed-changes","text":"","title":"See what has changed: changes"},{"location":"faq/index.html","text":"Requeriments and dependencies Docker docker-compose docker-sync (only macOS) How to install docker-sync on macOS 1 sudo gem install docker-sync -n /usr/local/bin How to install rsync on macOS 1 brew install rsync on Debian 1 apt install rsync How to configure Xdebug Configuring xdebug by Browser 1) The first step is to install the Browser Toolbar and enable listening for PHP Debug Conections 2) After that, the server name must be configured in Nginx. To achieve this, please modify the nginx config file (file ended in .conf) setting the server_name attribute. The file can be located running the command warp info in your root project folder with the \"Nginx configuration file\" flag 3) Now is time to configure the Web Server in PHPStorm IDE Please, go to: File -> Settings->Languages & Frameworks -> PHP -> Servers Add a new Server clicking on the plus (+) button and set the following fields: Name: Must be the same name configured in Nginx server_name field Host: Must be the same value configured in Nginx server_name field Port: Should be 80 if you are using HTTP or 443 if you ar using HTTPS Debbuger: Choose Xdebug After configure those values, check the option Use path mappings and configure the right paths. See the table below File/Directory (Your computer - host) absolute path on the Servers (inside the container) /path/to/current/project/ /var/www/html/ /path/to/current/project/pub/ /var/www/html/pub/ 4) Once that the Web Server has been configured, the PHP Web Aplication must be created, so go to Menu: Run -> Edit Configurations Create a new PHP Web Application clicking on the plus (+) button and select the PHP Web Application option, then set the following fields: Name: Must be the same name configured in Nginx server_name field Server: Select the server created on previous step Configuring xdebug by Console (cli) Using Xdebug by console requires to set PHP_IDE_CONFIG environment var with same Nginx server_name value. Open the .env file located in your root project folder and set the value like this sample: 1 PHP_IDE_CONFIG = serverName = magento2.com Where magento2.com is the server_name set previously in Nginx configuration Configuring the Xdebug php extension (ext-xdebug.ini) Plase located in your root project folder, execute the command: warp php info , you will see the location of ext-xdebug.ini file. Open the file, for example located in .warp/docker/config/php/ext-xdebug.ini Finally, make sure to configure your xdebug correctly, the most important options are: xdebug.remote_enable=1 xdebug.remote_port=9000 xdebug.remote_connect_back=0 xdebug.idekey='PHPSTORM' xdebug.remote_host=172.17.0.1 The field xdebug.remote_host depends of your Operating System and your local configurations: Linux: The IP should be grabbed from Docker network interface, ussually called docker0 You can get it running the command ifconfig for instance: 1 2 3 4 5 6 7 8 docker0: flags = 4099 mtu 1500 inet 172 .17.0.1 netmask 255 .255.0.0 broadcast 172 .17.255.255 inet6 fe80::42:49ff:fec6:dfe7 prefixlen 64 scopeid 0x20 ether 02 :42:49:c6:df:e7 txqueuelen 0 ( Ethernet ) RX packets 72049 bytes 4443463 ( 4 .4 MB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 82000 bytes 435500419 ( 435 .5 MB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Mac OS X: The IP should be xdebug.remote_host=10.254.254.254 added as an alias following the next steps: 1- Create the alias 1 sudo ifconfig lo0 alias 10 .254.254.254 2- Add the network configuration to OS X launch daemons, to create the alias automatically on system boot process. 1 sudo curl -o /Library/LaunchDaemons/net.summasolutions.docker_10254_alias.plist http://ct.summasolutions.net/warp-engine/osx/net.summasolutions.docker_10254_alias.plist How to use Composer 1 warp composer install Setting up the Cron Jobs Editing The Crontab File To check whether you have a crontab file run the following command: 1 warp crontab -l To create or edit a crontab file run the following command: 1 warp crontab -e The file that opens has a lot of information but the key part is the example just before the end of the comments section (comments are denoted by lines beginning with #). 1 # m h dom mon dow command Example: 1 * * * * * www-data echo \"Cron run test\" >> /var/www/html/cron.log Warning a blank line is required at the end of this file! Installing and configuring Grunt features/grunt.html","title":"FAQs"},{"location":"faq/index.html#requeriments-and-dependencies","text":"Docker docker-compose docker-sync (only macOS)","title":"Requeriments and dependencies"},{"location":"faq/index.html#how-to-install-docker-sync-on-macos","text":"1 sudo gem install docker-sync -n /usr/local/bin","title":"How to install docker-sync on macOS"},{"location":"faq/index.html#how-to-install-rsync","text":"on macOS 1 brew install rsync on Debian 1 apt install rsync","title":"How to install rsync"},{"location":"faq/index.html#how-to-configure-xdebug","text":"Configuring xdebug by Browser 1) The first step is to install the Browser Toolbar and enable listening for PHP Debug Conections 2) After that, the server name must be configured in Nginx. To achieve this, please modify the nginx config file (file ended in .conf) setting the server_name attribute. The file can be located running the command warp info in your root project folder with the \"Nginx configuration file\" flag 3) Now is time to configure the Web Server in PHPStorm IDE Please, go to: File -> Settings->Languages & Frameworks -> PHP -> Servers Add a new Server clicking on the plus (+) button and set the following fields: Name: Must be the same name configured in Nginx server_name field Host: Must be the same value configured in Nginx server_name field Port: Should be 80 if you are using HTTP or 443 if you ar using HTTPS Debbuger: Choose Xdebug After configure those values, check the option Use path mappings and configure the right paths. See the table below File/Directory (Your computer - host) absolute path on the Servers (inside the container) /path/to/current/project/ /var/www/html/ /path/to/current/project/pub/ /var/www/html/pub/ 4) Once that the Web Server has been configured, the PHP Web Aplication must be created, so go to Menu: Run -> Edit Configurations Create a new PHP Web Application clicking on the plus (+) button and select the PHP Web Application option, then set the following fields: Name: Must be the same name configured in Nginx server_name field Server: Select the server created on previous step Configuring xdebug by Console (cli) Using Xdebug by console requires to set PHP_IDE_CONFIG environment var with same Nginx server_name value. Open the .env file located in your root project folder and set the value like this sample: 1 PHP_IDE_CONFIG = serverName = magento2.com Where magento2.com is the server_name set previously in Nginx configuration Configuring the Xdebug php extension (ext-xdebug.ini) Plase located in your root project folder, execute the command: warp php info , you will see the location of ext-xdebug.ini file. Open the file, for example located in .warp/docker/config/php/ext-xdebug.ini Finally, make sure to configure your xdebug correctly, the most important options are: xdebug.remote_enable=1 xdebug.remote_port=9000 xdebug.remote_connect_back=0 xdebug.idekey='PHPSTORM' xdebug.remote_host=172.17.0.1 The field xdebug.remote_host depends of your Operating System and your local configurations: Linux: The IP should be grabbed from Docker network interface, ussually called docker0 You can get it running the command ifconfig for instance: 1 2 3 4 5 6 7 8 docker0: flags = 4099 mtu 1500 inet 172 .17.0.1 netmask 255 .255.0.0 broadcast 172 .17.255.255 inet6 fe80::42:49ff:fec6:dfe7 prefixlen 64 scopeid 0x20 ether 02 :42:49:c6:df:e7 txqueuelen 0 ( Ethernet ) RX packets 72049 bytes 4443463 ( 4 .4 MB ) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 82000 bytes 435500419 ( 435 .5 MB ) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 Mac OS X: The IP should be xdebug.remote_host=10.254.254.254 added as an alias following the next steps: 1- Create the alias 1 sudo ifconfig lo0 alias 10 .254.254.254 2- Add the network configuration to OS X launch daemons, to create the alias automatically on system boot process. 1 sudo curl -o /Library/LaunchDaemons/net.summasolutions.docker_10254_alias.plist http://ct.summasolutions.net/warp-engine/osx/net.summasolutions.docker_10254_alias.plist","title":"How to configure Xdebug"},{"location":"faq/index.html#how-to-use-composer","text":"1 warp composer install","title":"How to use Composer"},{"location":"faq/index.html#setting-up-the-cron-jobs","text":"Editing The Crontab File To check whether you have a crontab file run the following command: 1 warp crontab -l To create or edit a crontab file run the following command: 1 warp crontab -e The file that opens has a lot of information but the key part is the example just before the end of the comments section (comments are denoted by lines beginning with #). 1 # m h dom mon dow command Example: 1 * * * * * www-data echo \"Cron run test\" >> /var/www/html/cron.log Warning a blank line is required at the end of this file!","title":"Setting up the Cron Jobs"},{"location":"faq/index.html#installing-and-configuring-grunt","text":"features/grunt.html","title":"Installing and configuring Grunt"},{"location":"features/grunt.html","text":"How to config Grunt on Magento 2 Just 5 steps, you can config Grunt 1) From the Magento_root directory, copy and paste the contents of the following files: 1 2 3 cp package.json.sample package.json cp Gruntfile.js.sample Gruntfile.js cp grunt-config.json.sample grunt-config.json 2) Install Grunt Cli Inside the container, run the following command in a command prompt: 1 warp php ssh --root After that install npm and grunt . 1 2 npm install npm install -g grunt-cli 3) Modify file grunt-config.json like that: 1 2 3 { \"themes\" : \"dev/tools/grunt/configs/themes\" } 4) Config theme in file dev/tools/grunt/configs/themes.js by default you have luma , and you can use example to add warp Example path: app/design/frontend/WarpTheme/default 1 2 3 4 5 6 7 8 9 10 warp: { area: 'frontend', name: 'WarpTheme/default', locale: 'en_US', files: [ 'css/styles-m', 'css/styles-l' ], dsl: 'less' }, 5) Ready!!, every time we need to compile content, we run console: 1 2 warp grunt exec warp grunt less After that, you can see: Grunt commands The following table describes the grunt commands you can use to perform different customization tasks. Run all commands from your Magento installation directory. Grunt task Action warp grunt clean Removes the theme related static files in the pub/static and var directories. warp grunt exec Republishes symlinks to the source files to the pub/static/frontend/ directory. Use warp grunt exec:<theme> to republish symlinks for a specific theme. warp grunt less Compiles CSS files using the symlinks published in the pub/static/frontend/ directory. Use warp grunt less:<theme> to use the symlinks published for a specific theme. warp grunt watch Tracks the changes in the source files, recompiles .css files, and reloads the page in the browser. Ref. Magento Docs:","title":"Grunt"},{"location":"features/grunt.html#how-to-config-grunt-on-magento-2","text":"Just 5 steps, you can config Grunt 1) From the Magento_root directory, copy and paste the contents of the following files: 1 2 3 cp package.json.sample package.json cp Gruntfile.js.sample Gruntfile.js cp grunt-config.json.sample grunt-config.json 2) Install Grunt Cli Inside the container, run the following command in a command prompt: 1 warp php ssh --root After that install npm and grunt . 1 2 npm install npm install -g grunt-cli 3) Modify file grunt-config.json like that: 1 2 3 { \"themes\" : \"dev/tools/grunt/configs/themes\" } 4) Config theme in file dev/tools/grunt/configs/themes.js by default you have luma , and you can use example to add warp Example path: app/design/frontend/WarpTheme/default 1 2 3 4 5 6 7 8 9 10 warp: { area: 'frontend', name: 'WarpTheme/default', locale: 'en_US', files: [ 'css/styles-m', 'css/styles-l' ], dsl: 'less' }, 5) Ready!!, every time we need to compile content, we run console: 1 2 warp grunt exec warp grunt less After that, you can see:","title":"How to config Grunt on Magento 2"},{"location":"features/grunt.html#grunt-commands","text":"The following table describes the grunt commands you can use to perform different customization tasks. Run all commands from your Magento installation directory. Grunt task Action warp grunt clean Removes the theme related static files in the pub/static and var directories. warp grunt exec Republishes symlinks to the source files to the pub/static/frontend/ directory. Use warp grunt exec:<theme> to republish symlinks for a specific theme. warp grunt less Compiles CSS files using the symlinks published in the pub/static/frontend/ directory. Use warp grunt less:<theme> to use the symlinks published for a specific theme. warp grunt watch Tracks the changes in the source files, recompiles .css files, and reloads the page in the browser. Ref. Magento Docs:","title":"Grunt commands"},{"location":"features/magento.html","text":"How to install Magento with WARP Create new folder 1 mkdir magento_demo Download WARP 1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp Configure services 1 2 3 4 5 6 7 8 warp init --mode-gandalf \\ --framework=m2 \\ --vhost=local.magento2.com \\ --php=7.2-fpm \\ --mysql=5.7 \\ --elasticsearch=5.6.8 \\ --redis=3.2.10-alpine \\ --mailhog Download Magento 1 warp magento --download 2.3.2 Start project 1 warp start Install Magento 1 warp magento --install Create access to website 1 echo \"127.0.0.1 local.magento2.com\" | sudo tee -a /etc/hosts > /dev/null Requeriments 1 2 3 4 5 Docker docker - compose docker - sync ( mac only ) rsync ^ 3 . 1 . 1 Access to website or admin/panel parameter value website: https://local.magento2.com Url: https://local.magento2.com/admin User: admin Pass: Password123","title":"Magento"},{"location":"features/magento.html#how-to-install-magento-with-warp","text":"","title":"How to install Magento with WARP"},{"location":"features/magento.html#create-new-folder","text":"1 mkdir magento_demo","title":"Create new folder"},{"location":"features/magento.html#download-warp","text":"1 curl -L -o warp http://ct.summasolutions.net/warp-engine/warp && chmod 755 warp","title":"Download WARP"},{"location":"features/magento.html#configure-services","text":"1 2 3 4 5 6 7 8 warp init --mode-gandalf \\ --framework=m2 \\ --vhost=local.magento2.com \\ --php=7.2-fpm \\ --mysql=5.7 \\ --elasticsearch=5.6.8 \\ --redis=3.2.10-alpine \\ --mailhog","title":"Configure services"},{"location":"features/magento.html#download-magento","text":"1 warp magento --download 2.3.2","title":"Download Magento"},{"location":"features/magento.html#start-project","text":"1 warp start","title":"Start project"},{"location":"features/magento.html#install-magento","text":"1 warp magento --install","title":"Install Magento"},{"location":"features/magento.html#create-access-to-website","text":"1 echo \"127.0.0.1 local.magento2.com\" | sudo tee -a /etc/hosts > /dev/null","title":"Create access to website"},{"location":"features/magento.html#requeriments","text":"1 2 3 4 5 Docker docker - compose docker - sync ( mac only ) rsync ^ 3 . 1 . 1","title":"Requeriments"},{"location":"features/magento.html#access-to-website-or-adminpanel","text":"parameter value website: https://local.magento2.com Url: https://local.magento2.com/admin User: admin Pass: Password123","title":"Access to website or admin/panel"},{"location":"features/oro.html","text":"","title":"Oro"},{"location":"features/services.html","text":"Services Nginx PHP MySQL Rabbit MailHog Elasticsearch Varnish Selenium PostgreSQL Sandbox Mode (for developer modules on Magento 2) warp architecture","title":"Services"},{"location":"features/services.html#services","text":"Nginx PHP MySQL Rabbit MailHog Elasticsearch Varnish Selenium PostgreSQL Sandbox Mode (for developer modules on Magento 2)","title":"Services"},{"location":"features/services.html#warp-architecture","text":"","title":"warp architecture"},{"location":"installation/linux.html","text":"Install Docker and docker-compose on Linux The easiest way is to create a file with name install_docker.sh, paste the script below and give it execute permissions. 1 2 chmod +x install_docker.sh sudo ./install_docker.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/usr/bin/env bash # https://docs.docker.com/install/linux/docker-ce/ubuntu/ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\" sudo apt-get update sudo apt-get install docker-ce # https://docs.docker.com/compose/install/ sudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose- ` uname -s ` - ` uname -m ` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose # https://docs.docker.com/install/linux/linux-postinstall/ sudo groupadd docker sudo usermod -aG docker $USER","title":"Linux"},{"location":"installation/linux.html#install-docker-and-docker-compose-on-linux","text":"The easiest way is to create a file with name install_docker.sh, paste the script below and give it execute permissions. 1 2 chmod +x install_docker.sh sudo ./install_docker.sh 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 #!/usr/bin/env bash # https://docs.docker.com/install/linux/docker-ce/ubuntu/ sudo apt-get install apt-transport-https ca-certificates curl software-properties-common curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable\" sudo apt-get update sudo apt-get install docker-ce # https://docs.docker.com/compose/install/ sudo curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose- ` uname -s ` - ` uname -m ` -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose # https://docs.docker.com/install/linux/linux-postinstall/ sudo groupadd docker sudo usermod -aG docker $USER","title":"Install Docker and docker-compose on Linux"},{"location":"installation/mac.html","text":"About Docker Desktop Configuration Preferences -> Advanced CPU - set minimum 2 CPUs ( default = \"1CPU\" ). MEMORY - set minimum 4 GB ( default = \"2GB\" ).","title":"MacOS"},{"location":"installation/mac.html#about-docker-desktop","text":"","title":"About Docker Desktop"},{"location":"installation/mac.html#configuration","text":"","title":"Configuration"},{"location":"installation/mac.html#preferences-advanced","text":"CPU - set minimum 2 CPUs ( default = \"1CPU\" ). MEMORY - set minimum 4 GB ( default = \"2GB\" ).","title":"Preferences -&gt; Advanced"},{"location":"started/gandalf.html","text":"Mode Gandalf you can set parameters by command-line directly without wizard. Example: 1 2 3 4 5 6 7 8 9 10 11 12 13 warp init --mode-gandalf \\ --namespace = howard \\ --project = gandalf \\ --framework = m2 \\ --vhost = local.magento2.com \\ --php = 7 .2-fpm \\ --mysql = 5 .7 \\ --postgres = 9 .6.15 \\ --elasticsearch = 5 .6.8 \\ --redis = 3 .2.10-alpine \\ --rabbit = 3 .7-management \\ --mailhog \\ --varnish = 5 .2.1 Options availables parameter value --namespace string --project string --private-registry string --framework m1, m2, oro, php --vhost string --php 5.6-fpm, 7.0-fpm, 7.1-fpm, 7.2-fpm, 7.3-fpm, 7.1.17-fpm, 7.1.26-fpm --mysql 5.6, 5.7 --postgres 9.6.15 --elasticsearch 6.4.2, 5.6.8, 2.4.6, 2.4.4, 1.7.6 --redis 3.2.10-alpine, 4.0, 5.0 --rabbit 3.7-management --mailhog empty --varnish 4.0.5, 5.2.1","title":"Gandalf"},{"location":"started/gandalf.html#mode-gandalf","text":"you can set parameters by command-line directly without wizard.","title":"Mode Gandalf"},{"location":"started/gandalf.html#example","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 warp init --mode-gandalf \\ --namespace = howard \\ --project = gandalf \\ --framework = m2 \\ --vhost = local.magento2.com \\ --php = 7 .2-fpm \\ --mysql = 5 .7 \\ --postgres = 9 .6.15 \\ --elasticsearch = 5 .6.8 \\ --redis = 3 .2.10-alpine \\ --rabbit = 3 .7-management \\ --mailhog \\ --varnish = 5 .2.1","title":"Example:"},{"location":"started/gandalf.html#options-availables","text":"parameter value --namespace string --project string --private-registry string --framework m1, m2, oro, php --vhost string --php 5.6-fpm, 7.0-fpm, 7.1-fpm, 7.2-fpm, 7.3-fpm, 7.1.17-fpm, 7.1.26-fpm --mysql 5.6, 5.7 --postgres 9.6.15 --elasticsearch 6.4.2, 5.6.8, 2.4.6, 2.4.4, 1.7.6 --redis 3.2.10-alpine, 4.0, 5.0 --rabbit 3.7-management --mailhog empty --varnish 4.0.5, 5.2.1","title":"Options availables"},{"location":"started/requirements.html","text":"Requirements Docker community edition v17.05 docker-compose v1.21 For macOS only docker-sync v0.5.11 rsync 3.1.1","title":"Requirements"},{"location":"started/requirements.html#requirements","text":"Docker community edition v17.05 docker-compose v1.21","title":"Requirements"},{"location":"started/requirements.html#for-macos-only","text":"docker-sync v0.5.11 rsync 3.1.1","title":"For macOS only"},{"location":"started/usage.html","text":"How to use flag --help ? Important each command has a --help option. example: If you run the following command: 1 warp mysql --help You can see detailed help for each command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Usage: warp mysql command [ options ] [ arguments ] Options: -h, --help display this help message Available commands: info display info available dump allows to make a database dump connect connect to mysql command line ( shell ) import allows to restore a database ssh connect to mysql by ssh Help: warp mysql dump --help And each sub-command has a --help option. example: 1 warp mysql dump --help 1 2 3 4 5 6 7 8 9 10 11 12 13 Usage: warp mysql dump [ db_name ] > [ file ] Help: Create a backup of a database and save it local machine to remove all the security definers of a mysql dump, add this to the command: sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' Example: warp mysql dump warp_db | gzip > /path/to/save/backup/warp_db.sql.gz warp mysql dump warp_db | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' | gzip > /path/to/save/backup/warp_db.sql.gz warp mysql dump warp_db | gzip | pv > /path/to/save/backup/warp_db.sql.gz warp mysql dump warp_db > /path/to/save/backup/warp_db.sql the same option for: 1 warp mysql info --help 1 warp mysql connect --help 1 warp mysql import --help 1 warp mysql ssh --help","title":"Usage"},{"location":"started/usage.html#how-to-use-flag-help","text":"Important each command has a --help option. example: If you run the following command: 1 warp mysql --help You can see detailed help for each command 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 Usage: warp mysql command [ options ] [ arguments ] Options: -h, --help display this help message Available commands: info display info available dump allows to make a database dump connect connect to mysql command line ( shell ) import allows to restore a database ssh connect to mysql by ssh Help: warp mysql dump --help And each sub-command has a --help option. example: 1 warp mysql dump --help 1 2 3 4 5 6 7 8 9 10 11 12 13 Usage: warp mysql dump [ db_name ] > [ file ] Help: Create a backup of a database and save it local machine to remove all the security definers of a mysql dump, add this to the command: sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' Example: warp mysql dump warp_db | gzip > /path/to/save/backup/warp_db.sql.gz warp mysql dump warp_db | sed -e 's/DEFINER[ ]*=[ ]*[^*]*\\*/\\*/' | gzip > /path/to/save/backup/warp_db.sql.gz warp mysql dump warp_db | gzip | pv > /path/to/save/backup/warp_db.sql.gz warp mysql dump warp_db > /path/to/save/backup/warp_db.sql the same option for: 1 warp mysql info --help 1 warp mysql connect --help 1 warp mysql import --help 1 warp mysql ssh --help","title":"How to use flag --help?"},{"location":"troubleshooting/composer.html","text":"command warp composer warp composer install 1 2 3 4 5 6 7 8 9 10 warp composer install --ignore-platform-reqs Cannot create cache directory /var/www/.composer/cache/repo/https---repo.magento.com/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---composerep.stg.aws3.net/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---composerm2.stg.aws3.net/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---repo.onestepcheckout.com-IY2HYKW9UX4N2CWTSHLF/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---composerexternalm2.stg.aws3.net/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---repo.packagist.org/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/files/, or directory is not writable. Proceeding without cache possible solutions warp fix --composer Error chmod() 1 2 [ ErrorException ] chmod () : Operation not permitted possible solutions warp fix --composer","title":"warp composer"},{"location":"troubleshooting/composer.html#command-warp-composer","text":"warp composer install 1 2 3 4 5 6 7 8 9 10 warp composer install --ignore-platform-reqs Cannot create cache directory /var/www/.composer/cache/repo/https---repo.magento.com/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---composerep.stg.aws3.net/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---composerm2.stg.aws3.net/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---repo.onestepcheckout.com-IY2HYKW9UX4N2CWTSHLF/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---composerexternalm2.stg.aws3.net/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/repo/https---repo.packagist.org/, or directory is not writable. Proceeding without cache Cannot create cache directory /var/www/.composer/cache/files/, or directory is not writable. Proceeding without cache","title":"command warp composer"},{"location":"troubleshooting/composer.html#possible-solutions","text":"warp fix --composer","title":"possible solutions"},{"location":"troubleshooting/composer.html#error-chmod","text":"1 2 [ ErrorException ] chmod () : Operation not permitted","title":"Error chmod()"},{"location":"troubleshooting/composer.html#possible-solutions_1","text":"warp fix --composer","title":"possible solutions"},{"location":"troubleshooting/db.html","text":"databases Private DB Registry 1 2 3 ERROR: pull access denied for 123456789 .dkr.ecr.us-east-1.amazonaws.com/sample-site-dbs, repository does not exist or may require\u2018docker login\u2019: denied: Your Authorization Token has expired. Please run \u2018aws ecr get-login --no-include-email\u2019 to fetch a new one. possible solutions login to aws by console Update DB After update images with de following command warp update --images , you dont see changes on db 1 2 Error response from daemon: remove example-volume-db: volume is in use - [ 4dde9b2e67f76760f8531adkjaskldjaklsdjkla 962e735f8d878df24a4fb, 26b101b5cffb70de9asd\u00f1\u00f1lm324sl234506786b1cdc43015a2d799dee08 ] possible solutions 1 2 3 warp stop --hard warp volume --rm mysql warp start","title":"databases"},{"location":"troubleshooting/db.html#databases","text":"","title":"databases"},{"location":"troubleshooting/db.html#private-db-registry","text":"1 2 3 ERROR: pull access denied for 123456789 .dkr.ecr.us-east-1.amazonaws.com/sample-site-dbs, repository does not exist or may require\u2018docker login\u2019: denied: Your Authorization Token has expired. Please run \u2018aws ecr get-login --no-include-email\u2019 to fetch a new one.","title":"Private DB Registry"},{"location":"troubleshooting/db.html#possible-solutions","text":"login to aws by console","title":"possible solutions"},{"location":"troubleshooting/db.html#update-db","text":"After update images with de following command warp update --images , you dont see changes on db 1 2 Error response from daemon: remove example-volume-db: volume is in use - [ 4dde9b2e67f76760f8531adkjaskldjaklsdjkla 962e735f8d878df24a4fb, 26b101b5cffb70de9asd\u00f1\u00f1lm324sl234506786b1cdc43015a2d799dee08 ]","title":"Update DB"},{"location":"troubleshooting/db.html#possible-solutions_1","text":"1 2 3 warp stop --hard warp volume --rm mysql warp start","title":"possible solutions"},{"location":"troubleshooting/elasticsearch.html","text":"Elasticsearch Elasticsearch 6.x 1 2 ERROR: [ 1 ] bootstrap checks failed [ 1 ] : max file descriptors [ 4096 ] for elasticsearch process is too low, increase to at least [ 65536 ] possible solutions Set vm.max_map_count to at least 262144 The vm.max_map_count kernel setting must be set to at least 262144 for production use. How you set vm.max_map_count depends on your platform: Linux The vm.max_map_count setting should be set permanently in /etc/sysctl.conf : 1 2 grep vm.max_map_count /etc/sysctl.conf vm.max_map_count = 262144 To apply the setting on a live system, run: 1 sysctl -w vm.max_map_count = 262144 macOS with Docker for Mac The vm.max_map_count setting must be set within the xhyve virtual machine: From the command line, run: 1 screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty Press enter and use sysctl to configure vm.max_map_count : 1 sysctl -w vm.max_map_count = 262144 Ref. elasticseearch docs.","title":"elasticsearch"},{"location":"troubleshooting/elasticsearch.html#elasticsearch","text":"","title":"Elasticsearch"},{"location":"troubleshooting/elasticsearch.html#elasticsearch-6x","text":"1 2 ERROR: [ 1 ] bootstrap checks failed [ 1 ] : max file descriptors [ 4096 ] for elasticsearch process is too low, increase to at least [ 65536 ]","title":"Elasticsearch 6.x"},{"location":"troubleshooting/elasticsearch.html#possible-solutions","text":"Set vm.max_map_count to at least 262144 The vm.max_map_count kernel setting must be set to at least 262144 for production use. How you set vm.max_map_count depends on your platform:","title":"possible solutions"},{"location":"troubleshooting/elasticsearch.html#linux","text":"The vm.max_map_count setting should be set permanently in /etc/sysctl.conf : 1 2 grep vm.max_map_count /etc/sysctl.conf vm.max_map_count = 262144 To apply the setting on a live system, run: 1 sysctl -w vm.max_map_count = 262144","title":"Linux"},{"location":"troubleshooting/elasticsearch.html#macos-with-docker-for-mac","text":"The vm.max_map_count setting must be set within the xhyve virtual machine: From the command line, run: 1 screen ~/Library/Containers/com.docker.docker/Data/vms/0/tty Press enter and use sysctl to configure vm.max_map_count : 1 sysctl -w vm.max_map_count = 262144","title":"macOS with Docker for Mac"},{"location":"troubleshooting/elasticsearch.html#ref-elasticseearch-docs","text":"","title":"Ref. elasticseearch docs."},{"location":"troubleshooting/gitignore.html","text":".gitignore After running the command warp init files and directories are added in the file .gitignore as you can see below .gitignore 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # WARP FRAMEWORK !/warp !/.warp !/.warp/** /.env /docker-compose-warp.yml /docker-compose-warp-mac.yml /docker-sync.yml !/.env.sample !/docker-compose-warp.yml.sample !/docker-compose-warp-mac.yml.sample !/docker-sync.yml.sample /.self-update-warp /.docker-sync /.warp/docker/volumes /.warp/docker/dumps /.warp/setup /.warp/lib /.warp/bin /.warp/docker/config/php/ext-xdebug.ini /.warp/docker/config/php/ext-ioncube.ini # FRAMEWORK WARP do not commit these folders .warp/bin .warp/lib .warp/setup .warp/docker/dumps .warp/docker/volumes how to solved that? check the .gitignore file and compare with the example run the following commands 1 2 3 4 git rm -r --cached .warp git commit -m \"delete wrong .warp files and folders in git\" git add .warp git commit -m \"add correct .warp files and folders\"","title":".gitignore"},{"location":"troubleshooting/gitignore.html#gitignore","text":"After running the command warp init files and directories are added in the file .gitignore as you can see below .gitignore 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 # WARP FRAMEWORK !/warp !/.warp !/.warp/** /.env /docker-compose-warp.yml /docker-compose-warp-mac.yml /docker-sync.yml !/.env.sample !/docker-compose-warp.yml.sample !/docker-compose-warp-mac.yml.sample !/docker-sync.yml.sample /.self-update-warp /.docker-sync /.warp/docker/volumes /.warp/docker/dumps /.warp/setup /.warp/lib /.warp/bin /.warp/docker/config/php/ext-xdebug.ini /.warp/docker/config/php/ext-ioncube.ini # FRAMEWORK WARP do not commit these folders .warp/bin .warp/lib .warp/setup .warp/docker/dumps .warp/docker/volumes","title":".gitignore"},{"location":"troubleshooting/gitignore.html#how-to-solved-that","text":"check the .gitignore file and compare with the example run the following commands 1 2 3 4 git rm -r --cached .warp git commit -m \"delete wrong .warp files and folders in git\" git add .warp git commit -m \"add correct .warp files and folders\"","title":"how to solved that?"},{"location":"troubleshooting/rsync.html","text":"warp rsync command rsync warp rsync push --all 1 2 3 rsync: --chown = 501 :33: unknown option rsync error: syntax or usage error ( code 1 ) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52.200.1/rsync/main.c ( 1337 ) [ client = 2 .6.9 ] Completed copying all files from host to container possible solutions update rsync minimum required version 3.1.1 command rsync warp rsync push <file> 1 2 3 4 Template parsing error: template: :1:3: executing \"\" at <index ( index .NetworkSettings.Ports \"873/tcp\" ) 0 >: error calling index: index of untyped nil rsync: failed to connect to localhost ( ::1 ) : Connection refused ( 61 ) rsync: failed to connect to localhost ( 127 .0.0.1 ) : Connection refused ( 61 ) rsync error: error in socket IO ( code 10 ) at clientserver.c ( 127 ) [ sender = 3 .1.3 ] possible solutions Check the file docker-compose-warp.yml , if you have the container appdata like this: 1 2 appdata : image : alpine:latest Run the following command to restart all configuration, after that you will have correctly configured container appdata Warning You are going to delete all project settings If you go ahead you must reconfigure the entire project 1 2 3 4 warp stop --hard warp reset --hard war init warp start","title":"warp rsync"},{"location":"troubleshooting/rsync.html#warp-rsync","text":"","title":"warp rsync"},{"location":"troubleshooting/rsync.html#command-rsync","text":"warp rsync push --all 1 2 3 rsync: --chown = 501 :33: unknown option rsync error: syntax or usage error ( code 1 ) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-52.200.1/rsync/main.c ( 1337 ) [ client = 2 .6.9 ] Completed copying all files from host to container","title":"command rsync"},{"location":"troubleshooting/rsync.html#possible-solutions","text":"update rsync minimum required version 3.1.1","title":"possible solutions"},{"location":"troubleshooting/rsync.html#command-rsync_1","text":"warp rsync push <file> 1 2 3 4 Template parsing error: template: :1:3: executing \"\" at <index ( index .NetworkSettings.Ports \"873/tcp\" ) 0 >: error calling index: index of untyped nil rsync: failed to connect to localhost ( ::1 ) : Connection refused ( 61 ) rsync: failed to connect to localhost ( 127 .0.0.1 ) : Connection refused ( 61 ) rsync error: error in socket IO ( code 10 ) at clientserver.c ( 127 ) [ sender = 3 .1.3 ]","title":"command rsync"},{"location":"troubleshooting/rsync.html#possible-solutions_1","text":"Check the file docker-compose-warp.yml , if you have the container appdata like this: 1 2 appdata : image : alpine:latest Run the following command to restart all configuration, after that you will have correctly configured container appdata Warning You are going to delete all project settings If you go ahead you must reconfigure the entire project 1 2 3 4 warp stop --hard warp reset --hard war init warp start","title":"possible solutions"},{"location":"troubleshooting/start.html","text":"command start warp start 1 2 3 4 5 6 7 8 9 10 ERROR: for test_php_1 Cannot start service php: OCI runtime create failed: container_linux.go:346: starting container process caused \"process_linux.go:449: container init caused \\\"rootfs_linux.go:58: mounting \\\\\\\"/Users/matias/Desktop/test/.warp/docker/config/php/ext-ioncube.ini\\\\\\\" to rootfs \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged\\\\\\\" at \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged/usr/local/etc/php/conf.d/10-php-ext-ioncube.ini\\\\\\\" caused \\\\\\\"not a directory\\\\\\\"\\\"\" : unknown: Are you trying to mount a directory onto a file ( or vice-versa ) ? Check if the specified host path exists and is the expected type ERROR: for php Cannot start service php: OCI runtime create failed: container_linux.go:346: starting container process caused \"process_linux.go:449: container init caused \\\"rootfs_linux.go:58: mounting \\\\\\\"/Users/matias/Desktop/test/.warp/docker/config/php/ext-ioncube.ini\\\\\\\" to rootfs \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged\\\\\\\" at \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged/usr/local/etc/php/conf.d/10-php-ext-ioncube.ini\\\\\\\" caused \\\\\\\"not a directory\\\\\\\"\\\"\" : unknown: Are you trying to mount a directory onto a file ( or vice-versa ) ? Check if the specified host path exists and is the expected type ERROR: Encountered errors while bringing up the project. ERROR: No container found for php_1 Error response from daemon: mount /Users/matias/Desktop/test/.warp/docker/config/php/ext-ioncube.ini:/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged/usr/local/etc/php/conf.d/10-php-ext-ioncube.ini, flags: 0x5000: not a directory ERROR: No container found for php_1 possible solutions Are you trying to mount a directory onto a file (or vice-versa) Check the mapped files in docker-compose-warp.yml , if the files do not exist, they are created as directories. In this case, run the following commands: 1 2 3 4 warp stop --hard warp reset warp init warp start some configuration files are created from .samples files command start warp start 1 2 ERROR : for web Cannot start service web : b 'driver failed programming external connectivity on endpoint somesite-m2_web_1 (a24e3b084b74c2bfed4452eae4d1d837be4644565041c76ba4941899336ecf85): Error starting userland proxy: Bind for 0.0.0.0:80: unexpected error (Failure EADDRINUSE)' ERROR : Encountered errors while bringing up the project . possible solutions check apache or nginx is working on port 80/443","title":"warp start"},{"location":"troubleshooting/start.html#command-start","text":"warp start 1 2 3 4 5 6 7 8 9 10 ERROR: for test_php_1 Cannot start service php: OCI runtime create failed: container_linux.go:346: starting container process caused \"process_linux.go:449: container init caused \\\"rootfs_linux.go:58: mounting \\\\\\\"/Users/matias/Desktop/test/.warp/docker/config/php/ext-ioncube.ini\\\\\\\" to rootfs \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged\\\\\\\" at \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged/usr/local/etc/php/conf.d/10-php-ext-ioncube.ini\\\\\\\" caused \\\\\\\"not a directory\\\\\\\"\\\"\" : unknown: Are you trying to mount a directory onto a file ( or vice-versa ) ? Check if the specified host path exists and is the expected type ERROR: for php Cannot start service php: OCI runtime create failed: container_linux.go:346: starting container process caused \"process_linux.go:449: container init caused \\\"rootfs_linux.go:58: mounting \\\\\\\"/Users/matias/Desktop/test/.warp/docker/config/php/ext-ioncube.ini\\\\\\\" to rootfs \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged\\\\\\\" at \\\\\\\"/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged/usr/local/etc/php/conf.d/10-php-ext-ioncube.ini\\\\\\\" caused \\\\\\\"not a directory\\\\\\\"\\\"\" : unknown: Are you trying to mount a directory onto a file ( or vice-versa ) ? Check if the specified host path exists and is the expected type ERROR: Encountered errors while bringing up the project. ERROR: No container found for php_1 Error response from daemon: mount /Users/matias/Desktop/test/.warp/docker/config/php/ext-ioncube.ini:/var/lib/docker/overlay2/4f3d14d1f3d7755705914496fd518389d2510081d6d1f0e1e41155da236c638b/merged/usr/local/etc/php/conf.d/10-php-ext-ioncube.ini, flags: 0x5000: not a directory ERROR: No container found for php_1","title":"command start"},{"location":"troubleshooting/start.html#possible-solutions","text":"Are you trying to mount a directory onto a file (or vice-versa) Check the mapped files in docker-compose-warp.yml , if the files do not exist, they are created as directories. In this case, run the following commands: 1 2 3 4 warp stop --hard warp reset warp init warp start some configuration files are created from .samples files","title":"possible solutions"},{"location":"troubleshooting/start.html#command-start_1","text":"warp start 1 2 ERROR : for web Cannot start service web : b 'driver failed programming external connectivity on endpoint somesite-m2_web_1 (a24e3b084b74c2bfed4452eae4d1d837be4644565041c76ba4941899336ecf85): Error starting userland proxy: Bind for 0.0.0.0:80: unexpected error (Failure EADDRINUSE)' ERROR : Encountered errors while bringing up the project .","title":"command start"},{"location":"troubleshooting/start.html#possible-solutions_1","text":"check apache or nginx is working on port 80/443","title":"possible solutions"},{"location":"workshop/workshop.html","text":"Workshop video","title":"Workshop video"}]}