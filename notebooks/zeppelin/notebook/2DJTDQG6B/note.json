{
  "paragraphs": [
    {
      "text": "%spark.dep\n\n//azure libs\nz.load(\"org.apache.hadoop:hadoop-azure:2.7.6\")\nz.load(\"com.microsoft.azure:azure-storage:2.0.0\")\n\n//adam libs\nz.load(\"org.bdgenomics.adam:adam-core-spark2_2.11:0.24.0\")\n\n//my libs\nz.addRepo(\"combioaging\").url(\"https://dl.bintray.com/comp-bio-aging/main\")\nz.load(\"group.research.aging:spark-extensions_2.11:0.0.2\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 20:49:28.248",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:1: error: illegal start of definition\n.where%spark.dep\n^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872820_1438999586",
      "id": "20180712-033538_338979594",
      "dateCreated": "2018-07-19 17:21:12.820",
      "dateStarted": "2018-08-15 19:50:05.937",
      "dateFinished": "2018-08-15 19:50:06.000",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nGeneral imports and functions\n-----------------------------",
      "user": "anonymous",
      "dateUpdated": "2018-07-19 17:21:12.821",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eGeneral imports and functions\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872820_274330219",
      "id": "20180718-124047_2034062829",
      "dateCreated": "2018-07-19 17:21:12.820",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark._\nimport org.apache.spark.sql.{DataFrame, Encoders, SparkSession}\nimport org.apache.spark.sql.types.StructType\nimport scala.reflect.runtime.universe._\nimport org.apache.spark.storage.StorageLevel\nimport org.apache.spark.rdd._\nimport org.apache.spark.sql.functions._\nimport org.bdgenomics.adam.rdd.ADAMContext._\nimport group.research.aging.spark.extensions._",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:07.915",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark._\nimport org.apache.spark.sql.{DataFrame, Encoders, SparkSession}\nimport org.apache.spark.sql.types.StructType\nimport scala.reflect.runtime.universe._\nimport org.apache.spark.storage.StorageLevel\nimport org.apache.spark.rdd._\nimport org.apache.spark.sql.functions._\nimport org.bdgenomics.adam.rdd.ADAMContext._\nimport group.research.aging.spark.extensions._\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872821_-306013344",
      "id": "20180712-031911_1877788783",
      "dateCreated": "2018-07-19 17:21:12.821",
      "dateStarted": "2018-08-15 19:50:08.631",
      "dateFinished": "2018-08-15 19:50:39.788",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def azurize(container: String, accountName: String, blobFile: String): String \u003d \"wasbs://\"+container+\"@\"+accountName+\".blob.core.windows.net/\"+blobFile ",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:22.874",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "azurize: (container: String, accountName: String, blobFile: String)String\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872821_-1997168736",
      "id": "20180712-032652_1600748057",
      "dateCreated": "2018-07-19 17:21:12.821",
      "dateStarted": "2018-08-15 19:50:24.760",
      "dateFinished": "2018-08-15 19:50:51.549",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val account \u003d \"pipelines1\"\nval key \u003d \"JHVfH9TNAcLhbIjVmIzT387Z2eAOFz1T0xvzJBb7z3jbWtMXspZD+E87OBDIvOyvnd8OWMdyPfKYSboGMKfIxQ\u003d\u003d\"\nval connString \u003d s\"DefaultEndpointsProtocol\u003dhttps;AccountName\u003dpipelines1;AccountKey\u003d${key};EndpointSuffix\u003dcore.windows.net\"\ndef az(path: String): String \u003d azurize(\"storage\", account, path)\n\ndef sparkHadoopConf(sc: SparkContext, acountName: String, accountKey: String) \u003d {\n  sc.hadoopConfiguration.set(\"fs.azure\", \"org.apache.hadoop.fs.azure.NativeAzureFileSystem\")\n  sc.hadoopConfiguration.set(\"fs.azure.account.key.\" + acountName + \".blob.core.windows.net\", accountKey)\n  sc\n}",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:25.172",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "account: String \u003d pipelines1\nkey: String \u003d JHVfH9TNAcLhbIjVmIzT387Z2eAOFz1T0xvzJBb7z3jbWtMXspZD+E87OBDIvOyvnd8OWMdyPfKYSboGMKfIxQ\u003d\u003d\nconnString: String \u003d DefaultEndpointsProtocol\u003dhttps;AccountName\u003dpipelines1;AccountKey\u003dJHVfH9TNAcLhbIjVmIzT387Z2eAOFz1T0xvzJBb7z3jbWtMXspZD+E87OBDIvOyvnd8OWMdyPfKYSboGMKfIxQ\u003d\u003d;EndpointSuffix\u003dcore.windows.net\naz: (path: String)String\nsparkHadoopConf: (sc: org.apache.spark.SparkContext, acountName: String, accountKey: String)org.apache.spark.SparkContext\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872821_432929091",
      "id": "20180712-034012_227342694",
      "dateCreated": "2018-07-19 17:21:12.821",
      "dateStarted": "2018-08-15 19:50:40.356",
      "dateFinished": "2018-08-15 19:51:26.872",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val sparkContext \u003d sc\nsparkHadoopConf(sparkContext, account, key)\nval spark \u003d SparkSession.builder().appName(\"lags\").config(\"spark.serializer\",\"org.apache.spark.serializer.KryoSerializer\").config(\"spark.kryo.registrator\",\"org.bdgenomics.adam.serialization.ADAMKryoRegistrator\").config(\"spark.kryo.referenceTracking\", true).getOrCreate()",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:28.689",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "sparkContext: org.apache.spark.SparkContext \u003d org.apache.spark.SparkContext@1ecd2c27\nres158: org.apache.spark.SparkContext \u003d org.apache.spark.SparkContext@1ecd2c27\nspark: org.apache.spark.sql.SparkSession \u003d org.apache.spark.sql.SparkSession@68d9f4ea\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872822_-1387675997",
      "id": "20180712-034159_1932110434",
      "dateCreated": "2018-07-19 17:21:12.822",
      "dateStarted": "2018-08-15 19:50:51.956",
      "dateFinished": "2018-08-15 19:51:53.001",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val expressionsPath \u003d \"expressions\"\nval byGoPath \u003d expressionsPath + \"/go\"\nval comparison \u003d byGoPath + \"/gray_whale_with_bowhead_with_minke_with_NMR_with_human_with_mouse_with_cow_full_outer_counts_extended.tsv\"\nval grouped \u003d byGoPath + \"/grouped\"\nval ranked \u003d byGoPath + \"/grouped/ranked\"\nval transcriptsPath \u003d expressionsPath + \"/transcripts\"\nval indexesPath \u003d \"indexes\"\nval reactomePath \u003d indexesPath + \"/reactome\"\nval unirefPath \u003d expressionsPath + \"/\" + \"uniref90\"\nval genagePath \u003d indexesPath + \"/\" + \"genage\"",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:31.843",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "expressionsPath: String \u003d expressions\nbyGoPath: String \u003d expressions/go\ncomparison: String \u003d expressions/go/gray_whale_with_bowhead_with_minke_with_NMR_with_human_with_mouse_with_cow_full_outer_counts_extended.tsv\ngrouped: String \u003d expressions/go/grouped\nranked: String \u003d expressions/go/grouped/ranked\ntranscriptsPath: String \u003d expressions/transcripts\nindexesPath: String \u003d indexes\nreactomePath: String \u003d indexes/reactome\nunirefPath: String \u003d expressions/uniref90\ngenagePath: String \u003d indexes/genage\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872822_-1320582648",
      "id": "20180712-034443_569586237",
      "dateCreated": "2018-07-19 17:21:12.822",
      "dateStarted": "2018-08-15 19:51:27.465",
      "dateFinished": "2018-08-15 19:52:51.103",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mousePath \u003d indexesPath + \"/MOUSE/M17\"\nval flyPath \u003d indexesPath + \"/FLY/r6.22\"\nval wormPath \u003d indexesPath + \"/WORM/WS265\"",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:34.890",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mousePath: String \u003d indexes/MOUSE/M17\nflyPath: String \u003d indexes/FLY/r6.22\nwormPath: String \u003d indexes/WORM/WS265\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872822_-1070123763",
      "id": "20180713-140607_1155782070",
      "dateCreated": "2018-07-19 17:21:12.822",
      "dateStarted": "2018-08-15 19:51:53.497",
      "dateFinished": "2018-08-15 19:53:08.609",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nLoading GenAge info\n-------------------",
      "user": "anonymous",
      "dateUpdated": "2018-07-20 22:45:15.396",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9.0,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eLoading GenAge info\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872823_-344811161",
      "id": "20180718-124142_33375600",
      "dateCreated": "2018-07-19 17:21:12.823",
      "dateStarted": "2018-07-20 22:45:15.396",
      "dateFinished": "2018-07-20 22:45:15.404",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:42.456",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1534362642455_-1230726115",
      "id": "20180815-195042_376246544",
      "dateCreated": "2018-08-15 19:50:42.455",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val models \u003d spark.readTSV(az(genagePath +\"/genage_models.tsv\"), headers\u003dtrue)\nz.show(models)",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:50:53.474",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Gene ID": "string",
                      "Entrez Gene ID": "string",
                      "Gene Symbol": "string",
                      "Gene Name": "string",
                      "Organism": "string",
                      "Unigene ID": "string",
                      "Ensembl ID": "string",
                      "UniProt ID": "string",
                      "Alias": "string",
                      "Lifespan Effect": "string",
                      "Phenotype Description": "string",
                      "Longevity Influence": "string",
                      "Max Lifespan Change": "string",
                      "Avg Lifespan Change": "string",
                      "Method": "string",
                      "Bibliographic reference": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "models: org.apache.spark.sql.DataFrame \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\n"
          },
          {
            "type": "TABLE",
            "data": "Gene ID\tEntrez Gene ID\tGene Symbol\tGene Name\tOrganism\tUnigene ID\tEnsembl ID\tUniProt ID\tAlias\tLifespan Effect\tPhenotype Description\tLongevity Influence\tMax Lifespan Change\tAvg Lifespan Change\tMethod\tBibliographic reference\n831\t42186\t14-3-3epsilon\tCG31196 gene product from transcript CG31196-RA\tDrosophila melanogaster\tnull\tFBgn0020238\tnull\t14-3-3 14-3-3 epsilon 14-3-3-e 14-3-3-epsilon 14-3\tincrease\tLoss of 14-3-3e results in increased stress-induced apoptosis, growth repression and extended lifespan of flies, in a dFoxO dependent manner. Increased expression of 14-3-3e also reverts FoxO-induced growth defects. No effect on lifespan was observed when overexpressing 14-3-3e in adipose tissue, suggesting that endogenous FoxO activity in this tissue is low under normal conditions.\tanti\tnull\t49.0\tMutations\t2384: Nielsen et al. (2008) \"14-3-3 Epsilon antagonizes FoxO to control growth, apoptosis and longevity in Drosophila.\"  Aging Cell 7(5):688-699 (18665908)\n2089\t40575\t5-HT2A\t5-hydroxytryptamine (serotonin) receptor 2A\tDrosophila melanogaster\tnull\tnull\tnull\tnull\tincrease\tFlies were subjected to several control diets: sucrose only, yeast only and fixed diet. Flies were also subjected to a choice diet. When 5-HT2A mutant animals were aged in a choice environment there was a 90% increase in mean lifespan.\tanti\tnull\t90.0\tDeletion\t4393: Ro et al. (2016) \"Serotonin signaling mediates protein valuation and aging.\"  Elife 5: (27572262)\n1553\t852380\tAAC3\tADP/ATP Carrier\tSaccharomyces cerevisiae\tnull\tYBR085W\tnull\tANC3\tincrease\tReplicative lifespan increased by 15% in the alpha strain\tanti\tnull\t15.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1393\t855581\tAAH1\tAdenine AminoHydrolase\tSaccharomyces cerevisiae\tnull\tYNL141W\tnull\tnull\tincrease\tMean chronological lifespan increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1\t181727\taak-2\tAMP-Activated Kinase\tCaenorhabditis elegans\tCel.17479\tT01C8.1\tnull\tnull\tdecrease\tCould be a sensor that couples energy levels and insulin-like signals to lifespan. Knockout mutants have a 12% shorter lifespan.\tpro\tnull\t12.0\tKnockout\t2232: Apfeld et al. (2004) \"The AMP-activated protein kinase AAK-2 links energy levels and insulin-like signals to lifespan in C. elegans.\"  Genes Dev. 18(24):3004-3009 (15574588)\n1\t181727\taak-2\tAMP-Activated Kinase\tCaenorhabditis elegans\tCel.17479\tT01C8.1\tnull\tnull\tdecrease\t37% decrease in median lifespna in daf-2 background and 54% decrease in lifespan in a wild-type background\tpro\tnull\t54.0\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n1\t181727\taak-2\tAMP-Activated Kinase\tCaenorhabditis elegans\tCel.17479\tT01C8.1\tnull\tnull\tincrease\tTransgenic animals with a higher aak-2 gene dose live on average 13% longer than controls.\tpro\tnull\t13.0\tOverexpression\t2232: Apfeld et al. (2004) \"The AMP-activated protein kinase AAK-2 links energy levels and insulin-like signals to lifespan in C. elegans.\"  Genes Dev. 18(24):3004-3009 (15574588)\n1\t181727\taak-2\tAMP-Activated Kinase\tCaenorhabditis elegans\tCel.17479\tT01C8.1\tnull\tnull\tincreases\tConstitutively activated aak-2 increased worm lifespan however induced detrimental pleiotropic side effects including small body size and a reduced reproductive capacity. Worms also showed increased heat resistance, demonstrating a 125% increase in median lifespan at 33 degrees Celsius compared to wild type animals. The lifespan extension effect was dependent on crtc-1 at low temperatures but not high ones.\tpro\tnull\tnull\tOverexpression\t4423: Burkewitz et al. (2015) \"Neuronal CRTC-1 governs systemic mitochondrial metabolism and lifespan via a catecholamine signal.\"  Cell 160(5):842-855 (25723162)\n269\t181492\taakb-1\tAMP-Activated Kinase Beta subunit\tCaenorhabditis elegans\tCel.860\tF55F3.1\tnull\tnull\tdecrease\tRNA interference resulted in decreased lifespan and earlier accumulation of lipofuscin.\tpro\tnull\tnull\tRNA interference\t2290: Ha et al. (2006) \"Caenorhabditis elegans as a screening tool for the endothelial cell-derived putative aging-related proteins detected by proteomic analysis.\"  Proteomics 6(11):3339-3351 (16673436)\n752\t176552\taakb-2\tAMP-Activated Kinase Beta subunit\tCaenorhabditis elegans\tCel.9773\tY47D3A.15\tnull\tnull\tdecrease\tRNA interference resulted in decreased lifespan and earlier accumulation of lipofuscin.\tpro\tnull\tnull\tRNA interference\t2290: Ha et al. (2006) \"Caenorhabditis elegans as a screening tool for the endothelial cell-derived putative aging-related proteins detected by proteomic analysis.\"  Proteomics 6(11):3339-3351 (16673436)\n1849\t181736\taakg-2\tProtein AAKG-2\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\taakg-2 overexpression extends mean, median, and maximum lifespan by 47, 45, and 35%.\tpro\t35\t47.0\tOverexpression\t2588: Sagi and Kim (2012) \"An engineering approach to extending lifespan in C. elegans.\"  PLoS Genet. 8(6):e1002780 (22737090)\n2\t185079\taat-8\tAmino Acid Transporter\tCaenorhabditis elegans\tCel.13054\tF28F9.4\tnull\tnull\tincrease\tRNA interference increased mean lifespan by 30%.\tanti\tnull\t30.0\tRNA interference\t2233: Kim and Sun (2007) \"Functional genomic approach to identify novel genes involved in the regulation of oxidative stress resistance and animal lifespan.\"  Aging Cell 6(4):489-503 (17608836)\n1612\t853755\tAAT1\tAspartate AminoTransferase\tSaccharomyces cerevisiae\tnull\tYKL106W\tnull\tnull\tincrease\tReplicative lifespan increased by 25%\tpro\tnull\t25.0\tOverexpression\t2511: Easlon et al. (2008) \"The malate-aspartate NADH shuttle components are novel metabolic longevity regulators required for calorie restriction-mediated life span extension in yeast.\"  Genes Dev. 22(7):931-944 (18381895)\n1613\t850714\tAAT2\tAspartate AminoTransferase\tSaccharomyces cerevisiae\tnull\tYLR027C\tnull\tASP5\tincrease\tReplicative lifespan increased by 15%\tpro\tnull\t15.0\tOverexpression\t2511: Easlon et al. (2008) \"The malate-aspartate NADH shuttle components are novel metabolic longevity regulators required for calorie restriction-mediated life span extension in yeast.\"  Genes Dev. 22(7):931-944 (18381895)\n657\t183860\tabcx-1\tABC transporter, eXtended\tCaenorhabditis elegans\tCel.24987\tC56E6.1\tnull\tnull\tincrease\tRNA interference in adulthood extended mean lifespan by 16%.\tanti\tnull\t16.0\tRNA interference\t2246: Chen et al. (2007) \"Longevity determined by developmental arrest genes in Caenorhabditis elegans.\"  Aging Cell 6(4):525-533 (17521386)\n1683\t850450\tABP1\tActin Binding Protein\tSaccharomyces cerevisiae\tnull\tYCR088W\tnull\tnull\tincrease\tReplicative lifespan increased by 20% in the alpha strain\tanti\tnull\t20.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n1683\t850450\tABP1\tActin Binding Protein\tSaccharomyces cerevisiae\tnull\tYCR088W\tnull\tnull\tdecrease\tReplicative lifespan decreased by 20% in the a strain\tfitness\tnull\t20.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n1683\t850450\tABP1\tActin Binding Protein\tSaccharomyces cerevisiae\tnull\tYCR088W\tnull\tnull\tincrease\tReplicative lifespan increased by 30% in the alpha strain\tanti\tnull\t30.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1683\t850450\tABP1\tActin Binding Protein\tSaccharomyces cerevisiae\tnull\tYCR088W\tnull\tnull\tdecrease\tReplicative lifespan decreased by 20% in the a strain\tfitness\tnull\t20.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n3\t173404\tabu-11\tActivated in Blocked Unfolded protein response\tCaenorhabditis elegans\tCel.14499\tT01D1.6\tnull\tnull\tincrease\tOverexpression extends mean lifespan by 9% to 28%.\tpro\tnull\t28.0\tOverexpression\t2234: Viswanathan et al. (2005) \"A role for SIR-2.1 regulation of ER stress response genes in determining C. elegans life span.\"  Dev. Cell 9(5):605-615 (16256736)\n1507\t852925\tACB1\tAcyl-CoA-Binding\tSaccharomyces cerevisiae\tnull\tYGR037C\tnull\tnull\tincrease\tMean replicative lifespan increased in the alpha and a strain\tanti\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n300\t177654\tacdh-13\tAcyl CoA DeHydrogenase\tCaenorhabditis elegans\tCel.7888\tC28C12.9\tnull\tnull\tincrease\tRNA interference increased mean lifespan by 57%.\tanti\tnull\t57.0\tRNA interference\t2233: Kim and Sun (2007) \"Functional genomic approach to identify novel genes involved in the regulation of oxidative stress resistance and animal lifespan.\"  Aging Cell 6(4):489-503 (17608836)\n884\t181706\tace-1\tabnormal ACEtylcholinesterase\tCaenorhabditis elegans\tnull\tW09B12.1\tnull\tnull\tincrease\t8% mean lifespan extension\tanti\tnull\t8.0\tRNA interference\t2418: Xue et al. (2007) \"A modular network model of aging.\"  Mol. Syst. Biol. 3:147 (18059442)\n1914\t852266\tACH1\tAch1p\tSaccharomyces cerevisiae\tnull\tnull\tnull\tnull\tdecrease\tDeletion of ACH1 reduces chronological lifespan.\tfitness\tnull\tnull\tDeletion\t3522: Eisenberg et al. (2014) \"Nucleocytosolic depletion of the energy metabolite acetyl-coenzyme a stimulates autophagy and prolongs lifespan.\"  Cell Metab. 19(3):431-444 (24606900)\n4\t185044\tacl-11\tACyLtransferase-like\tCaenorhabditis elegans\tCel.24997\tF28B3.9\tnull\tnull\tincrease\tRNA interference leads to lifespan extension.\tanti\tnull\tnull\tRNA interference\t2235: Lee et al. (2003) \"A systematic RNAi screen identifies a critical role for mitochondria in C. elegans longevity.\"  Nat. Genet. 33(1):40-48 (12447374)\n2101\t180780\tacn-1\tInactive angiotensin-converting enzyme-related protein\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tWhen acn-1, a worm homologue of ACE, was downregulated mean lifespan was increased 21% and maximum lifespan increased 18%. Similar results were shown when acn-1 was downregulated from adulthood. In addition, lifespan was increased at higher temperatures, age-related degenerative changes were delayed and stress resistance was increased.\tanti\t18\t21.0\tRNA interference\t4404: Kumar et al. (2016) \"Angiotensin Converting Enzyme (ACE) Inhibitor Extends Caenorhabditis elegans Life Span.\"  PLoS Genet. 12(2):e1005866 (26918946)\n5\t176121\taco-2\tACOnitase\tCaenorhabditis elegans\tCel.17858\tF54H12.1\tnull\tnull\tincrease\tRNA interference leads to lifespan extension.\tanti\tnull\tnull\tRNA interference\t2236: Hamilton et al. (2005) \"A systematic RNAi screen for longevity genes in C. elegans.\"  Genes Dev. 19(13):1544-1555 (15998808)\n5\t176121\taco-2\tACOnitase\tCaenorhabditis elegans\tCel.17858\tF54H12.1\tnull\tnull\tincrease\t30% mean lifespan extension in daf2 background; no lifespan measurement in wt background\tanti\tnull\tnull\tRNA interference\t2268: Dong et al. (2007) \"Quantitative mass spectrometry identifies insulin signaling targets in C. elegans.\"  Science 317(5838):660-663 (17673661)\n5\t176121\taco-2\tACOnitase\tCaenorhabditis elegans\tCel.17858\tF54H12.1\tnull\tnull\tincrease\tRNA interference of aco-2 results in an increased lifespan.\tanti\tnull\t20.5\tRNA interference\t3567: Reis-Rodrigues et al. (2012) \"Proteomic analysis of age-dependent changes in protein solubility identifies genes that modulate lifespan.\"  Aging Cell 11(1):120-127 (22103665)\n1648\t853230\tACO2\tACOnitase\tSaccharomyces cerevisiae\tnull\tYJL200C\tnull\tnull\tincrease\tReplicative lifespan increased by 20% in the alpha strain\tanti\tnull\t20.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1648\t853230\tACO2\tACOnitase\tSaccharomyces cerevisiae\tnull\tYJL200C\tnull\tnull\tdecrease\tReplicative lifespan decreased by 10% in the a strain\tfitness\tnull\t10.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n245\t178190\tacs-20\tProtein ACS-20\tCaenorhabditis elegans\tCel.5847\tF28D1.9\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 50% in wild type animals and 70% in daf-2 mutants.\tpro\tnull\t50.0\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n2051\t176005\tacs-4\tfatty Acid CoA Synthetase family\tCaenorhabditis elegans\t5646\tnull\tnull\tnull\tincrease\tRNA interference of acs-4 results in an increased lifespan.\tanti\tnull\t6.1\tRNA interference\t3567: Reis-Rodrigues et al. (2012) \"Proteomic analysis of age-dependent changes in protein solubility identifies genes that modulate lifespan.\"  Aging Cell 11(1):120-127 (22103665)\n772\t176785\tacs-5\tfatty Acid CoA Synthetase family\tCaenorhabditis elegans\tCel.33\tY76A2B.3\tnull\tnull\tincrease\tRNA interference increased mean lifespan by 52%.\tanti\tnull\t52.0\tRNA interference\t2233: Kim and Sun (2007) \"Functional genomic approach to identify novel genes involved in the regulation of oxidative stress resistance and animal lifespan.\"  Aging Cell 6(4):489-503 (17608836)\n901\t174472\tacs-7\thypothetical protein\tCaenorhabditis elegans\tnull\tC01G6.7\tnull\tnull\tincrease\t20% mean lifespan extension\tanti\tnull\t20.0\tRNA interference post development\t2421: Oliveira et al. (2009) \"Condition-adapted stress and longevity gene regulation by Caenorhabditis elegans SKN-1/Nrf.\"  Aging Cell 8(5):524-541 (19575768)\n1600\t850846\tACS2\tAcetyl CoA Synthetase\tSaccharomyces cerevisiae\tnull\tYLR153C\tnull\tnull\tdecrease\tReplicative lifespan decreased by 70% in the alpha strain\tpro\tnull\t70.0\tDeletion\t2509: Falcón et al. (2010) \"Acetyl-coenzyme A synthetase 2 is a nuclear protein required for replicative longevity in Saccharomyces cerevisiae.\"  Mol. Cell. Biochem. 333(1-2):99-9108 (19618123)\n1299\t852059\tADA2\ttranscriptional ADAptor\tSaccharomyces cerevisiae\tnull\tYDR448W\tnull\tSWI8\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1299\t852059\tADA2\ttranscriptional ADAptor\tSaccharomyces cerevisiae\tnull\tYDR448W\tnull\tSWI8\tdecrease\tReplicative lifespan decreased by 50% in the alpha strain\tfitness\tnull\t50.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n6\t224129\tAdcy5\tadenylate cyclase 5\tMus musculus\tMm.41137\tENSMUSG00000022840\tP84309\tAc5 AW121902\tincrease\tKnock out mice are resistant to cardiac stress, have an increased median lifespan of 30% and an increased maximal lifespan of 12%. They are also protected from age-related reduced bone density and susceptibility to fractures, and reduced cardiac function.\tanti\t12\t30.0\tKnockout\t1845: Yan et al. (2007) \"Type 5 adenylyl cyclase disruption increases longevity and protects against stress.\"  Cell 130(2):247-258 (17662940)\n1016\t855222\tADD37\tAlpha1-proteinase inhibitor-Degradation Deficient\tSaccharomyces cerevisiae\tnull\tYMR184W\tnull\tnull\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1016\t855222\tADD37\tAlpha1-proteinase inhibitor-Degradation Deficient\tSaccharomyces cerevisiae\tnull\tYMR184W\tnull\tnull\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1017\t853629\tADD66\tAlpha1-proteinase inhibitor-Degradation Deficient\tSaccharomyces cerevisiae\tnull\tYKL206C\tnull\tPBA2 POC2\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1332\t851272\tADE1\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYAR015W\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1333\t855501\tADE12\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYNL220W\tnull\tBRA9\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1209\t855149\tADE17\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYMR120C\tnull\tnull\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1334\t854295\tADE2\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYOR128C\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1018\t853118\tADE3\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYGR204W\tnull\tnull\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1018\t853118\tADE3\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYGR204W\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1335\t855346\tADE4\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYMR300C\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1336\t852617\tADE5,7\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYGL234W\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1336\t852617\tADE5,7\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYGL234W\tnull\tnull\tno change\tDeletion of ADE5,7 does not affect chronological lifespan.\tnull\tnull\tnull\tDeletion\t3506: Garay et al. (2014) \"High-resolution profiling of stationary-phase survival reveals yeast longevity factors and their genetic interactions.\"  PLoS Genet. 10(2):e1004168 (24586198)\n1337\t852952\tADE6\tADEnine requiring\tSaccharomyces cerevisiae\tnull\tYGR061C\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1649\t854068\tADH1\tAlcohol DeHydrogenase\tSaccharomyces cerevisiae\tnull\tYOL086C\tnull\tADC1\tincrease\tReplicative lifespan increased by 20% in the alpha strain and 15% in the a strain\tanti\tnull\t20.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1019\t855349\tADH2\tAlcohol DeHydrogenase\tSaccharomyces cerevisiae\tnull\tYMR303C\tnull\tADR2\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1019\t855349\tADH2\tAlcohol DeHydrogenase\tSaccharomyces cerevisiae\tnull\tYMR303C\tnull\tADR2\tincrease\tKnockout of ADH2 results in an extended chronological median lifespan.\tanti\tnull\t60.0\tKnockout\t3519: Yizhak et al. (2013) \"Model-based identification of drug targets that revert disrupted metabolism and its application to ageing.\"  Nat Commun 4:2632 (24153335)\n1210\t851812\tADK1\tADenylate Kinase\tSaccharomyces cerevisiae\tnull\tYDR226W\tnull\tAKY1 AKY2\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n885\t172542\tadr-1\tAdenosine Deaminase that acts on RNA\tCaenorhabditis elegans\tnull\tH15N14.1\tnull\tnull\tdecrease\tMedian lifespan reduced by 50%.\tpro\tnull\t50.0\tRNA interference post development\t2548: Sebastiani et al. (2009) \"RNA editing genes associated with extreme old age in humans and with lifespan in C. elegans.\"  PLoS ONE 4(12):e8210 (20011587)\n886\t176022\tadr-2\tAdenosine Deaminase that acts on RNA\tCaenorhabditis elegans\tnull\tT20H4.4\tnull\tnull\tdecrease\tMedian lifespan reduced by 50%.\tpro\tnull\t50.0\tRNA interference post development\t2548: Sebastiani et al. (2009) \"RNA editing genes associated with extreme old age in humans and with lifespan in C. elegans.\"  PLoS ONE 4(12):e8210 (20011587)\n1576\t851802\tADR1\tAlcohol Dehydrogenase Regulator\tSaccharomyces cerevisiae\tnull\tYDR216W\tnull\tnull\tdecrease\tReplicative lifespan decreased by 35% in the alpha strain\tfitness\tnull\t35.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n1953\t11549\tAdra1a\tadrenergic receptor, alpha 1a\tMus musculus\tnull\tnull\tnull\tnull\tincrease\tTransgenic mice overexpressing a CAM form of the adrenergic receptor, alpha 1a (Adra1a), display an extended lifespan. Median lifespan taken for both sexes together is 10% higher than that of WT mice. While median lifespan increases for both sexes, this is significant for males only. Maximum lifespan also increases by 8% compared with WT mice.\tpro\t8\t10.0\tOverexpression\t3541: Doze et al. (2011) \"Long-term α1A-adrenergic receptor stimulation improves synaptic plasticity, cognitive function, mood, and longevity.\"  Mol. Pharmacol. 80(4):747-758 (21791575)\n1954\t11548\tAdra1b\tadrenergic receptor, alpha 1b\tMus musculus\tnull\tnull\tnull\tnull\tdecrease\tTransgenic mice overexpressing a CAM form of the adrenergic receptor, alpha 1b (Adra1b), display a shorter lifespan (mean 11% shorter) when compared to wild-type mice. When comparing each sex separately, the mean lifespan difference was significant only for female mice. Maximal lifespan of mutant mice was significantly shorter than that of WT mice. Female mutants had a significantly shorter maximal lifespan than female WT animals, however, the maximal lifespan of male mutants was significantly increased when compared with that of male WT mice.\tanti\tnull\t11.0\tOverexpression\t3542: Collette et al. (2014) \"Long-term α1B-adrenergic receptor activation shortens lifespan, while α1A-adrenergic receptor stimulation prolongs lifespan in association with decreased cancer incidence.\"  Age (Dordr) 36(4):9675 (24994537)\n1020\t855086\tAEP1\tATPase ExPression\tSaccharomyces cerevisiae\tnull\tYMR064W\tnull\tNCA1\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1020\t855086\tAEP1\tATPase ExPression\tSaccharomyces cerevisiae\tnull\tYMR064W\tnull\tNCA1\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1020\t855086\tAEP1\tATPase ExPression\tSaccharomyces cerevisiae\tnull\tYMR064W\tnull\tNCA1\tincrease\tThe life span of cbs1D, cbp6D, suv3D, dss1D, pet122D, pet309D, and aep1D mutants was examined to check if the absence of members of the MTC module other than Sov1p leads to life span extension. Indeed, all those mutants were long-lived.\tanti\tnull\t30.0\tMutation\t3272: Caballero et al. (2011) \"Absence of mitochondrial translation control proteins extends life span by activating sirtuin-dependent silencing.\"  Mol. Cell 42(3):390-400 (21549315)\n1650\t856737\tAFG3\tATPase Family Gene\tSaccharomyces cerevisiae\tnull\tYER017C\tnull\tYTA10\tincrease\tReplicative lifespan increased by 20% in the alpha and a strains\tanti\tnull\t20.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1524\t856132\tAGC1\tAspartate-Glutamate Carrier\tSaccharomyces cerevisiae\tnull\tYPR021C\tnull\tnull\tincrease\tReplicative lifespan increased by 30% in the alpha strain\tanti\tnull\t30.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n7\t174762\tage-1\tAGEing alteration AGE-1, abnormal DAuer Formation DAF-23\tCaenorhabditis elegans\tCel.18292\tB0334.8\tnull\tnull\tincrease\tKnockout mutants have a 40-65% increase in mean lifespan and a 65-110% increase in maximum lifespan.\tanti\t110\t65.0\tKnockout\t2237: Friedman and Johnson (1988) \"A mutation in the age-1 gene in Caenorhabditis elegans lengthens life and reduces hermaphrodite fertility.\"  Genetics 118(1):75-86 (8608934)\n7\t174762\tage-1\tAGEing alteration AGE-1, abnormal DAuer Formation DAF-23\tCaenorhabditis elegans\tCel.18292\tB0334.8\tnull\tnull\tincrease\tC. elegans strains bearing homozygous nonsense mutations in the age-1 gene, which encodes the class-I phosphatidylinositol 3-kinase catalytic subunit (PI3KCS), produce progeny that were thought to undergo obligatory developmental arrest. After prolonged developmental times at 15 - 20 C, they mature into extremely long-lived adults with near-normal feeding rates and motility. They survive to a median of 145-190 days at 20 C, with nearly 10-fold extension of both median and maximum adult lifespan relative to N2DRM, a long-lived wild-type stock into which the null mutant was outcrossed. PI3K-null adults, although a little less thermotolerant, are considerably more resistant to oxidative and electrophilic stresses than worms bearing normal or less long-lived alleles. Their unprecedented factorial gains in survival, under both normal and toxic environments, are attributed to elimination of residual and maternally-contributed PI3KCS or its products, and consequent modification of kinase signaling cascades.\tanti\t1000\t1000.0\tMutation\t2482: Ayyadevara et al. (2008) \"Remarkable longevity and stress resistance of nematode PI3K-null mutants.\"  Aging Cell 7(1):13-22 (17996009)\n7\t174762\tage-1\tAGEing alteration AGE-1, abnormal DAuer Formation DAF-23\tCaenorhabditis elegans\tCel.18292\tB0334.8\tnull\tnull\tincrease\t170% mean lifespan extension\tanti\tnull\t170.0\tRNA interference\t2236: Hamilton et al. (2005) \"A systematic RNAi screen for longevity genes in C. elegans.\"  Genes Dev. 19(13):1544-1555 (15998808)\n7\t174762\tage-1\tAGEing alteration AGE-1, abnormal DAuer Formation DAF-23\tCaenorhabditis elegans\tCel.18292\tB0334.8\tnull\tnull\tincrease\t65 % increase in mean lifespan and a 110 % increase in maximum lifespan at 25 degrees. age-1 mutant hermaphrodites show a 50% slower rate of mortality acceleration than wild-type.\tanti\t110\t65.0\tMutation\t2483: Johnson (1990) \"Increased life-span of age-1 mutants in Caenorhabditis elegans and lower Gompertz rate of aging.\"  Science 249(4971):908-912 (2392681)\n7\t174762\tage-1\tAGEing alteration AGE-1, abnormal DAuer Formation DAF-23\tCaenorhabditis elegans\tCel.18292\tB0334.8\tnull\tnull\tincrease\tMutants presented a double adult lifespan.\tanti\tnull\t100.0\tMutation\t2275: Larsen et al. (1995) \"Genes that regulate both development and longevity in Caenorhabditis elegans.\"  Genetics 139(4):1567-1583 (7789761)\n43\t176695\tagmo-1\tProtein AGMO-1\tCaenorhabditis elegans\tCel.19986\tBE10.2\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 30% in wild type animals and 60% in daf-2 mutants.\tpro\tnull\t30.0\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n8\t850333\tAGP1\thigh-Affinity Glutamine Permease\tSaccharomyces cerevisiae\tnull\tYCL025C\tnull\tYCC5\tincrease\tDeletion extends chronological lifespan.\tanti\tnull\tnull\tDeletion\t2238: Powers et al. (2006) \"Extension of chronological life span in yeast by decreased TOR pathway signaling.\"  Genes Dev. 20(2):174-184 (16418483)\n811\t11607\tAgtr1a\tAngiotensin II receptor, type 1a\tMus musculus\tnull\tENSMUSG00000049115\tnull\tAT1 AG2S AT1a AT2R1 Agtr1 AT2R1A Agtr-1a AI551199\tincrease\tKO mice showed a significant prolongation of average and maximal lifespan compared to wt.\tanti\t24\t26.0\tKnockout\t2148: Benigni et al. (2009) \"Disruption of the Ang II type 1 receptor promotes longevity in mice.\"  J. Clin. Invest. 119(3):524-530 (19197138)\n1826\t172889\taha-1\tProtein AHA-1\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tdecrease\tSeveral of the RNAi candidates (dve-1; lin-40; nhr-49; ceh-20; lin-11; and nhr-77) appeared to non-discriminately shorten lifespan in all strains tested, suggesting that the corresponding transcription factors are broadly required for survival. Interestingly, four RNAi clones (ZC123.3; nhr-119; ceh-37; and aha-1) affected wild-type and isp-1;ctb-1 mutant worms\u0027 lifespan to the same extent but exerted only a moderate or no effect on daf-16 and age-1 mutant longevity.\tpro\tnull\t10.0\tRNA interference\t3265: Walter et al. (2011) \"The homeobox protein CEH-23 mediates prolonged longevity in response to impaired mitochondrial electron transport chain in C. elegans.\"  PLoS Biol. 9(6):e1001084 (21713031)\n2084\t38342\tAhcyL1\tAdenosylhomocysteinase like 1\tDrosophila melanogaster\tnull\tnull\tnull\tnull\tincrease\tDownregulation of two out of three of Drosophila homologs of AHCY significantly extended life span in adult males and females, median lifespan was 13% higher when CG9977 was downregulated. Brain and intestine specific downregulation of CG9977 resulted in increased lifespan and health span.\tanti\tnull\t13.0\tRNA interference\t4390: Parkhitko et al. (2016) \"Tissue-specific down-regulation of S-adenosyl-homocysteine via suppression of dAhcyL1/dAhcyL2 extends health span and life span in Drosophila.\"  Genes Dev. 30(12):1409-1422 (27313316)\n2085\t42043\tAhcyL2\tAdenosylhomocysteinase like 2\tDrosophila melanogaster\tnull\tnull\tnull\tnull\tincrease\tDownregulation of two out of three of Drosophila homologs of AHCY significantly extended life span in adult males and females, median lifespan was 21% higher when Ahcy89E was downregulated. Intestine specific downregulation of Ahcy89E resulted in increased lifespan and health span.\tanti\tnull\t21.0\tRNA interference\t4390: Parkhitko et al. (2016) \"Tissue-specific down-regulation of S-adenosyl-homocysteine via suppression of dAhcyL1/dAhcyL2 extends health span and life span in Drosophila.\"  Genes Dev. 30(12):1409-1422 (27313316)\n1021\t853543\tAIM24\tAltered Inheritance rate of Mitochondria\tSaccharomyces cerevisiae\tnull\tYJR080C\tnull\tFMP26\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1211\t855189\tAIM36\tAltered Inheritance rate of Mitochondria\tSaccharomyces cerevisiae\tnull\tYMR157C\tnull\tFMP39\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n9\t181719\tain-1\tALG-1 INteracting protein\tCaenorhabditis elegans\tCel.6838\tC06G1.4\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 10% in wild type animals, 20% in a daf-2 background and 44% in daf-2/daf-16 double mutants.\tpro\tnull\t10.0\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n887\t179898\taip-1\tArsenite Inducible Protein\tCaenorhabditis elegans\tnull\tF58E10.4\tnull\tnull\tdecrease\tRNAi led to 30% decrease in mean lifespan\tpro\tnull\t50.0\tRNA interference\t2419: Yun et al. (2008) \"Proteasomal adaptation to environmental stress links resistance to proteotoxicity with longevity in Caenorhabditis elegans.\"  Proc. Natl. Acad. Sci. U.S.A. 105(19):7094-7099 (18467495)\n1452\t852351\tAKL1\tArk family Kinase-Like protein\tSaccharomyces cerevisiae\tnull\tYBR059C\tnull\tnull\tincrease\tReplicative lifespan increased by 20% in the alpha strain\tanti\tnull\t20.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1471\t851857\tAKR1\tAnKyrin Repeat-containing protein\tSaccharomyces cerevisiae\tnull\tYDR264C\tnull\tnull\tdecrease\tReplicative lifespan decreased by 50% in the alpha strain\tfitness\tnull\t50.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n1471\t851857\tAKR1\tAnKyrin Repeat-containing protein\tSaccharomyces cerevisiae\tnull\tYDR264C\tnull\tnull\tdecrease\tReplicative lifespan decreased by 40% in the alpha strain\tfitness\tnull\t40.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n10\t179424\takt-1\tAKT kinase family\tCaenorhabditis elegans\tCel.5036\tC12D8.10\tnull\tnull\tincrease\tRNA interference leads to lifespan extension.\tanti\tnull\tnull\tRNA interference\t2236: Hamilton et al. (2005) \"A systematic RNAi screen for longevity genes in C. elegans.\"  Genes Dev. 19(13):1544-1555 (15998808)\n10\t179424\takt-1\tAKT kinase family\tCaenorhabditis elegans\tCel.5036\tC12D8.10\tnull\tnull\tincrease\tKnockdown of akt-1 increased lifespan.\tanti\tnull\tnull\tRNA interference\t3259: Nojima et al. (2013) \"Haploinsufficiency of akt1 prolongs the lifespan of mice.\"  PLoS ONE 8(7):e69178 (23935948)\n832\t41957\tAkt1\tCG4006 gene product from transcript CG4006-RA\tDrosophila melanogaster\tnull\tFBgn0010379\tnull\takt Akt AKT Akt/PKB AKT/PKB akt1 AKT1 Akt1|PKB CG4\tdecrease\tRNA interference of Akt in intestinal stem cells, results in impaired regeneration of theintestinal epithelium and are shorten lifespan.\tpro\tnull\t11.0\tRNA interference\t2385: Biteau et al. (2010) \"Lifespan extension by preserving proliferative homeostasis in Drosophila.\"  PLoS Genet. 6(10):e1001159 (20976250)\n1810\t11651\tAkt1\tthymoma viral proto-oncogene 1\tMus musculus\tnull\tnull\tnull\tAkt PKB Rac PKB/Akt PKBalpha\tincrease\tHaploinsufficient mice had a lower body weight and a longer lifespan. Mean lifespan was 8% longer in males and 15% longer in females when compared to wild-type.\tanti\tnull\t11.5\tGenetic reduction\t3259: Nojima et al. (2013) \"Haploinsufficiency of akt1 prolongs the lifespan of mice.\"  PLoS ONE 8(7):e69178 (23935948)\n1300\t855205\tALD3\tALdehyde Dehydrogenase\tSaccharomyces cerevisiae\tnull\tYMR169C\tnull\tnull\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1570\t854556\tALD4\tALdehyde Dehydrogenase\tSaccharomyces cerevisiae\tnull\tYOR374W\tnull\tALD7\tincrease\tMean chronological lifespan increased in the a strain by more than 50%\tanti\tnull\t50.0\tDeletion\t2502: Laschober et al. (2010) \"Identification of evolutionarily conserved genetic regulators of cellular aging.\"  Aging Cell 9(6):1084-1097 (20883526)\n1885\t856044\tALD6\taldehyde dehydrogenase (NADP(+)) ALD6\tSaccharomyces cerevisiae\tnull\tnull\tnull\tALD1\tincrease\tDeletion of ALD6 increases yeast chronological lifespan.\tanti\tnull\tnull\tDeletion\t3506: Garay et al. (2014) \"High-resolution profiling of stationary-phase survival reveals yeast longevity factors and their genetic interactions.\"  PLoS Genet. 10(2):e1004168 (24586198)\n11\t173468\talg-2\tArgonaute (plant)-Like Gene\tCaenorhabditis elegans\tCel.22639\tT07D3.7\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 24% in wild type animals and 50% in a daf-2 background.\tpro\tnull\t24.0\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n1698\t855764\tALG12\tAsparagine-Linked Glycosylation\tSaccharomyces cerevisiae\tnull\tYNR030W\tnull\tECM39\tincrease\tReplicative lifespan increased by 25% in both the alpha strain and the a strain\tanti\tnull\t25.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1698\t855764\tALG12\tAsparagine-Linked Glycosylation\tSaccharomyces cerevisiae\tnull\tYNR030W\tnull\tECM39\tincrease\tDeletion of alg12, a target of the unfolded protein response signaling, increases replicative lifespan. This increase is dependant on Ire1p, a functional ER stress sensor protein.\tanti\tnull\t16.0\tDeletion\t3493: Labunskyy et al. (2014) \"Lifespan extension conferred by endoplasmic reticulum secretory pathway deficiency requires induction of the unfolded protein response.\"  PLoS Genet. 10(1):e1004019 (24391512)\n1867\t852196\tALG3\tdolichyl-P-Man:Man(5)GlcNAc(2)-PP-dolichol alpha-1,3-mannosyltransferase\tSaccharomyces cerevisiae\tnull\tnull\tnull\tRHK1\tincrease\tDeletion of alg3, a target of the unfolded protein response signaling, increases replicative lifespan.\tanti\tnull\t10.0\tDeletion\t3493: Labunskyy et al. (2014) \"Lifespan extension conferred by endoplasmic reticulum secretory pathway deficiency requires induction of the unfolded protein response.\"  PLoS Genet. 10(1):e1004019 (24391512)\n1531\t855874\tALG5\tAsparagine-Linked Glycosylation\tSaccharomyces cerevisiae\tnull\tYPL227C\tnull\tnull\tincrease\tMean chronological lifespan increased in the a strain by less than 50% but more than 15%\tanti\tnull\t50.0\tDeletion\t2502: Laschober et al. (2010) \"Identification of evolutionarily conserved genetic regulators of cellular aging.\"  Aging Cell 9(6):1084-1097 (20883526)\n2137\t854163\tALG6\tdolichyl-P-Glc:Man(9)GlcNAc(2)-PP-dolichol alpha-1,3-glucosyltransferase\tSaccharomyces cerevisiae\tnull\tnull\tnull\tnull\tincrease\tDeletion of ALG6 in yeast increased mean replicative lifespan.\tanti\tnull\t15.0\tDeletion\t4414: McCormick et al. (2015) \"A Comprehensive Analysis of Replicative Lifespan in 4,698 Single-Gene Deletion Strains Uncovers Conserved Mechanisms of Aging.\"  Cell Metab. 22(5):895-906 (26456335)\n1977\t173510\talh-6\tALdehyde deHydrogenase\tCaenorhabditis elegans\t7988\tnull\tnull\tnull\tdecrease\tRNA interference or mutations in ALH-6 results in a shortened lifespan by up to 40%. This effect is however diet-specific and can be observed when animals are raised on the standard laboratory E. coli OP50 diet or when fed BL21, but not when fed HT115 or HMS174 (with an intermediate effect on a HB101 diet). The observed progeroid phenotype does not seem to be due to general sickness or developmental defects, and other signs of premature ageing are observed (reproductive decline, smaller total brood, lipofuscin accumulation, pharyngeal muscle degeneration, decrease in pharyngeal pumping and movement).\tpro\tnull\t40.0\tMutation\t3480: Pang and Curran (2014) \"Adaptive capacity to bacterial diet modulates aging in C. elegans.\"  Cell Metab. 19(2):221-231 (24440036)\n1977\t173510\talh-6\tALdehyde deHydrogenase\tCaenorhabditis elegans\t7988\tnull\tnull\tnull\tincrease\tTransgenic overexpression of ALH-6 extends lifespan in worms fed a standard E. coli OP50 diet, but not when fed HT115. A diet-dependent effect can also be seen when ALH-6 is inpaired through mutations, suggesting that ALH-6 offers an adaptive response promoting survival on particular diets.\tpro\t20\t20.0\tOverexpression\t3480: Pang and Curran (2014) \"Adaptive capacity to bacterial diet modulates aging in C. elegans.\"  Cell Metab. 19(2):221-231 (24440036)\n833\t31957\talpha-Man-I\tAlpha Mannosidase I\tDrosophila melanogaster\tnull\tFBgn0259170\tnull\talpha-Man-l CG17809 CG18799 CG32682 CG32684 CG4227\tincrease\tMutant flies showed enhanced resistance to paraquat and starvation and a 60% increase in mean lifespan for both sexes. After outcrossing, the mutant showed, under normal conditions, an increase in mean lifespan of 22% for females and 38% for males . The increase in maximum lifespan was 15%. RNAi knock-downs resulted in a 39% increase in mean lifespan.\tanti\t15\t39.0\tRNA interference, Mutations\t2386: Liu et al. (2009) \"Reduced expression of alpha-1,2-mannosidase I extends lifespan in Drosophila melanogaster and Caenorhabditis elegans.\"  Aging Cell 8(4):370-379 (19302370)\n1357\t851690\tALT2\tALanine Transaminase\tSaccharomyces cerevisiae\tnull\tYDR111C\tnull\tnull\tdecrease\tMean chronological lifespan decreased in the a strain by less than 50% but more than 15%\tfitness\tnull\t50.0\tDeletion\t2502: Laschober et al. (2010) \"Identification of evolutionarily conserved genetic regulators of cellular aging.\"  Aging Cell 9(6):1084-1097 (20883526)\n1338\t854973\tAMD1\tAMP Deaminase\tSaccharomyces cerevisiae\tnull\tYML035C\tnull\tAMD3\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1022\t852455\tAMN1\tAntagonist of Mitotic exit Network\tSaccharomyces cerevisiae\tnull\tYBR158W\tnull\tCST13 ICS4\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n12\t186047\tamt-2\tAMmonium Transporter homolog\tCaenorhabditis elegans\tCel.2458\tF49E11.3\tnull\tnull\tincrease\tRNA interference increased mean lifespan by 20%.\tanti\tnull\t20.0\tRNA interference\t2233: Kim and Sun (2007) \"Functional genomic approach to identify novel genes involved in the regulation of oxidative stress resistance and animal lifespan.\"  Aging Cell 6(4):489-503 (17608836)\n1484\t856527\tANS1\tAns1p\tSaccharomyces cerevisiae\tnull\tYHR126C\tnull\tnull\tdecrease\tReplicative lifespan decreased by 25% in the alpha strain\tfitness\tnull\t25.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n666\t176773\tant-1.1\tAdenine Nucleotide Translocator\tCaenorhabditis elegans\tCel.17955\tT27E9.1\tnull\tnull\tincrease\tRNA interference increased mean lifespan by 40%.\tanti\tnull\t40.0\tRNA interference\t2233: Kim and Sun (2007) \"Functional genomic approach to identify novel genes involved in the regulation of oxidative stress resistance and animal lifespan.\"  Aging Cell 6(4):489-503 (17608836)\n2075\t3640787\tAPC10\tpotential anaphase-promoting complex processivity factor Apc10\tSaccharomyces cerevisiae\tnull\tnull\tnull\tnull\tdecrease\tDeletion of APC10 results in a drecreased lifespan.\tpro\tnull\tnull\tDeletion\t3578: Harkness et al. (2004) \"A functional analysis reveals dependence on the anaphase-promoting complex for prolonged life span in yeast.\"  Genetics 168(2):759-774 (15514051)\n2075\t3640787\tAPC10\tpotential anaphase-promoting complex processivity factor Apc10\tSaccharomyces cerevisiae\tnull\tnull\tnull\tnull\tincrease\tOverexpression of APC10 increases maximum lifespan by over 50%.\tpro\t50\tnull\tOverexpression\t3578: Harkness et al. (2004) \"A functional analysis reveals dependence on the anaphase-promoting complex for prolonged life span in yeast.\"  Genetics 168(2):759-774 (15514051)\n2076\t854423\tAPC5\tanaphase promoting complex subunit 5\tSaccharomyces cerevisiae\tnull\tnull\tnull\tRMC1\tdecrease\tAPC mutants display a decreased lifespan.\tpro\tnull\tnull\tMutation\t3578: Harkness et al. (2004) \"A functional analysis reveals dependence on the anaphase-promoting complex for prolonged life span in yeast.\"  Genetics 168(2):759-774 (15514051)\n2076\t854423\tAPC5\tanaphase promoting complex subunit 5\tSaccharomyces cerevisiae\tnull\tnull\tnull\tRMC1\tdecrease\tOverexpression of APC5 decreases lifespan.\tanti\tnull\tnull\tOverexpression\t3578: Harkness et al. (2004) \"A functional analysis reveals dependence on the anaphase-promoting complex for prolonged life span in yeast.\"  Genetics 168(2):759-774 (15514051)\n2074\t850792\tAPC9\tanaphase promoting complex subunit 9\tSaccharomyces cerevisiae\tnull\tnull\tnull\tnull\tdecrease\tDeletion of APC9 results in a drecreased lifespan.\tpro\tnull\tnull\tDeletion\t3578: Harkness et al. (2004) \"A functional analysis reveals dependence on the anaphase-promoting complex for prolonged life span in yeast.\"  Genetics 168(2):759-774 (15514051)\n1212\t852589\tAPE3\tAminoPEptidase\tSaccharomyces cerevisiae\tnull\tYBR286W\tnull\tAPY1\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n2093\t180783\tapl-1\tBeta-amyloid-like protein\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tApl-1 expression was induced in adult worms via heat shock. A single induction in day one adults mildly increased lifespan (5%) whereas regular apl-1 expression robustly increased lifespan (12-30%). Tissue specific expression had differing effects, neuron specific expression resulted in a decrease in lifespan whereas hypodermis specific expression resulted in lifespan extension.\tpro\tnull\t30.0\tOverexpression\t4396: Ewald et al. (2016) \"Alzheimer-related protein APL-1 modulates lifespan through heterochronic gene regulation in Caenorhabditis elegans.\"  Aging Cell (27557896)\n1485\t853723\tAPL2\tclathrin Adaptor Protein complex Large chain\tSaccharomyces cerevisiae\tnull\tYKL135C\tnull\tnull\tdecrease\tReplicative lifespan decreased by 25% in the alpha strain\tfitness\tnull\t25.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n1358\t855869\tAPM1\tclathrin Adaptor Protein complex Medium chain\tSaccharomyces cerevisiae\tnull\tYPL259C\tnull\tYAP54\tdecrease\tMean chronological lifespan decreased in the a strain by less than 50% but more than 15%\tfitness\tnull\t50.0\tDeletion\t2502: Laschober et al. (2010) \"Identification of evolutionarily conserved genetic regulators of cellular aging.\"  Aging Cell 9(6):1084-1097 (20883526)\n812\t11816\tApoe\tApolipoprotein E\tMus musculus\tnull\tENSMUSG00000002985\tnull\tAI255918\tdecrease\tThe mutant mice show dysregulations in lipid metabolism, severe atherosclerosis and cutaneous xanthomatosis, and and have a shorter lifespan than the wild-type strain.\tpro\tnull\tnull\tKnockout\t2138: Moghadasian et al. (2001) \"Pathophysiology of apolipoprotein E deficiency in mice: relevance to apo E-related disorders in humans.\"  FASEB J. 15(14):2623-2630 (11726538)\n1770\t178989\taps-1\tProtein APS-1\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tPost-developmental RNAi of aps-1 extends lifespan of wild type worms.\tanti\t0\t7.9\tPost-developmental RNA interference\t3241: Tacutu et al. (2012) \"Prediction of C. elegans longevity genes by human and worm longevity networks.\"  PLoS ONE 7(10):e48282 (23144747)\n888\t171691\taps-3\tdaPtin, Small chain (clathrin associated complex)\tCaenorhabditis elegans\tnull\tY48G8AL.14\tnull\tnull\tincrease\tExtended mean life span (20-40% in different backgrounds) .\tanti\tnull\t40.0\tRNA interference post development\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n1339\t854986\tAPT1\tAdenine PhosphoribosylTransferase\tSaccharomyces cerevisiae\tnull\tYML022W\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n889\t181019\tapy-1\tAPYrase\tCaenorhabditis elegans\tnull\tF08C6.6\tnull\tnull\tdecrease\tSome of the apy-1 (RNAi) phenotypes are suggestive of premature aging, since these animals also showed accumulation of lipofuscin and reduced  maximal lifespan (by 30%)\tpro\t30\tnull\tRNA interference post development\t2420: Uccelletti et al. (2008) \"APY-1, a novel Caenorhabditis elegans apyrase involved in unfolded protein response signalling and stress responses.\"  Mol. Biol. Cell 19(4):1337-1345 (18216284)\n1890\t855660\tAQR1\tAqr1p\tSaccharomyces cerevisiae\tnull\tnull\tnull\tnull\tnull\tDeletion of AQR1 does not affect chronological lifespan.\tnull\tnull\tnull\tDeletion\t3506: Garay et al. (2014) \"High-resolution profiling of stationary-phase survival reveals yeast longevity factors and their genetic interactions.\"  PLoS Genet. 10(2):e1004168 (24586198)\n1301\t856404\tARD1\tARrest Defective\tSaccharomyces cerevisiae\tnull\tYHR013C\tnull\tNAA10\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n890\t191609\tarf-1.1\tADP-Ribosylation Factor related\tCaenorhabditis elegans\tnull\tF45E4.1\tnull\tnull\tincrease\t10% mean lifespan extension\tanti\tnull\t10.0\tRNA interference post development\t2421: Oliveira et al. (2009) \"Condition-adapted stress and longevity gene regulation by Caenorhabditis elegans SKN-1/Nrf.\"  Aging Cell 8(5):524-541 (19575768)\n1359\t851335\tARF1\tADP-Ribosylation Factor\tSaccharomyces cerevisiae\tnull\tYDL192W\tnull\tnull\tdecrease\tMean chronological lifespan decreased in the a strain by less than 50% but more than 15%\tfitness\tnull\t50.0\tDeletion\t2502: Laschober et al. (2010) \"Identification of evolutionarily conserved genetic regulators of cellular aging.\"  Aging Cell 9(6):1084-1097 (20883526)\n1023\t853374\tARG2\tARGinine requiring\tSaccharomyces cerevisiae\tnull\tYJL071W\tnull\tHRB574\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n2107\t180080\targk-1\tARGinine Kinase\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tWorms overexpressing argk-1 lived up to 25% longer at  25 and 20 degrees Celsius when compared tp the wild type. Argk-1 was found to be required for the reduced body size and increased stress resistance observed in rsks-1/S6K mutants.\tpro\tnull\t25.0\tOverexpression\t4408: McQuary et al. (2016) \"C. elegans S6K Mutants Require a Creatine-Kinase-like Effector for Lifespan Extension.\"  Cell Rep 14(9):2059-2067 (26923601)\n13\t228359\tArhgap1\tRho GTPase activating protein 1\tMus musculus\tMm.463444\tENSMUSG00000027247\tQ5FWK3\tC76222 Cdc42GAP p50rhoGAP RP23-12H6.2 B230365D05Ri\tdecrease\tMost knockout mice were weak and died during the neonatal period. Animals that survived had a shorter lifespan (median lifespan was 12 months) and showed premature ageing-like phenotypes, including a reduction in body mass, a loss of subdermal adipose tissue, lordokyphosis, and osteoporosis.\tpro\tnull\tnull\tKnockout\t1840: Wang et al. (2007) \"Cdc42 GTPase-activating protein deficiency promotes genomic instability and premature aging-like phenotypes.\"  Proc. Natl. Acad. Sci. U.S.A. 104(4):1248-1253 (17227869)\n1651\t855711\tARK1\tActin Regulating Kinase\tSaccharomyces cerevisiae\tnull\tYNL020C\tnull\tnull\tincrease\tReplicative lifespan increased by 15% in the alpha strain\tanti\tnull\t15.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1651\t855711\tARK1\tActin Regulating Kinase\tSaccharomyces cerevisiae\tnull\tYNL020C\tnull\tnull\tdecrease\tReplicative lifespan decreased by 15% in the a strain\tfitness\tnull\t15.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n14\t178405\tarl-8\tARF-Like\tCaenorhabditis elegans\tCel.6950\tY57G11C.13\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 35% in a daf-2 background and 9% in daf-2/daf-16 double mutants.\tpro\tnull\tnull\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n15\t11865\tArntl\taryl hydrocarbon receptor nuclear translocator-like\tMus musculus\tMm.440371\tENSMUSG00000055116\tQ9WTL8\tMOP3 Arnt3 Bmal1 BMAL1b bHLHe5 bmal1b\u0027\tdecrease\tKnockout mice display symptoms of premature ageing including a shorter lifespan, sarcopenia, cataracts, less subcutaneous fat, and organ shrinkage.\tpro\tnull\tnull\tKnockout\t1841: Kondratov et al. (2006) \"Early aging and age-related pathologies in mice deficient in BMAL1, the core componentof the circadian clock.\"  Genes Dev. 20(14):1868-1873 (16847346)\n1024\t856173\tARO7\tAROmatic amino acid requiring\tSaccharomyces cerevisiae\tnull\tYPR060C\tnull\tHGS1 OSM2 TYR7\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1486\t856530\tARP1\tActin-Related Protein\tSaccharomyces cerevisiae\tnull\tYHR129C\tnull\tACT5\tdecrease\tReplicative lifespan decreased by 40% in the alpha strain\tfitness\tnull\t40.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n1486\t856530\tARP1\tActin-Related Protein\tSaccharomyces cerevisiae\tnull\tYHR129C\tnull\tACT5\tdecrease\tReplicative lifespan decreased by 40% in the alpha strain\tfitness\tnull\t40.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n891\t180446\tarr-1\tARRestin family\tCaenorhabditis elegans\tnull\tF53H8.2\tnull\tnull\tincrease\tMean lifespan was increased by 35% and maximal lifespan by 27%.\tanti\t27\t35.0\tMutations\t2422: Palmitessa and Benovic (2010) \"Arrestin and the multi-PDZ domain-containing protein MPZ-1 interact with phosphatase and tensin homolog (PTEN) and regulate Caenorhabditis elegans longevity.\"  J. Biol. Chem. 285(20):15187-15200 (20207731)\n16\t175247\tarx-4\tARp2/3 compleX component\tCaenorhabditis elegans\tCel.6078\tY6D11A.2\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 61% in a daf-2 background and 51% in daf-2/daf-16 double mutants.\tpro\tnull\tnull\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n1774\t175605\tasb-1\tProtein ASB-1\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tPost-developmental RNAi of asb-1 extends lifespan of wild type worms.\tanti\t0\t6.4\tPost-developmental RNA interference\t3241: Tacutu et al. (2012) \"Prediction of C. elegans longevity genes by human and worm longevity networks.\"  PLoS ONE 7(10):e48282 (23144747)\n17\t180718\tasb-2\tATP Synthase B homolog\tCaenorhabditis elegans\tCel.17624\tF02E8.1\tnull\tnull\tincrease\tRNA interference leads to lifespan extension.\tanti\tnull\tnull\tRNA interference\t2240: Hansen et al. (2005) \"New genes tied to endocrine, metabolic, and dietary regulation of lifespan from a Caenorhabditis elegans genomic RNAi screen.\"  PLoS Genet. 1(1):119-128 (16103914)\n1699\t853327\tASF1\tAnti-Silencing Function\tSaccharomyces cerevisiae\tnull\tYJL115W\tnull\tCIA1\tdecrease\tReplicative lifespan decreased by 65% in the alpha strain\tfitness\tnull\t65.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1699\t853327\tASF1\tAnti-Silencing Function\tSaccharomyces cerevisiae\tnull\tYJL115W\tnull\tCIA1\tdecrease\tYeast lacking Asf1 are short lived, having a median replicative life span of about 7 generations in comparison to the median life span of about 27 generations for wild-type yeast in multiple yeast backgrounds. Asf1 mutants also exhibit some phenotypes characteristic of aging.\tfitness\tnull\t74.0\tDeletion\tnull\n18\t172673\tasg-1\tATP Synthase G homolog\tCaenorhabditis elegans\tCel.20532\tK07A12.3\tnull\tnull\tincrease\tRNA interference leads to lifespan extension.\tanti\tnull\tnull\tRNA interference\t2236: Hamilton et al. (2005) \"A systematic RNAi screen for longevity genes in C. elegans.\"  Genes Dev. 19(13):1544-1555 (15998808)\n19\t180956\tasg-2\tATP synthase subunit\tCaenorhabditis elegans\tCel.11144\tC53B7.4\tnull\tnull\tincrease\tKnockout mutations result in developmental arrest and increased lifespan.\tanti\tnull\tnull\tKnockout\t2241: Tsang et al. (2001) \"Mitochondrial respiratory chain deficiency in Caenorhabditis elegans results in developmental arrest and increased life span.\"  J. Biol. Chem. 276(34):32240-32246 (11410594)\n1025\t854676\tASG1\tActivator of Stress Genes\tSaccharomyces cerevisiae\tnull\tYIL130W\tnull\tnull\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n892\t174838\tash-2\tASH histone methyltransferase complex subunit (Drosophila absent, small or homeotic discs)\tCaenorhabditis elegans\tnull\tY17G7B.2\tnull\tnull\tincrease\t30% mean lifespan extension\tanti\tnull\t30.0\tRNA interference\t2423: Greer et al. (2010) \"Members of the H3K4 trimethylation complex regulate lifespan in a germline-dependent manner in C. elegans.\"  Nature 466(7304):383-387 (20555324)\n892\t174838\tash-2\tASH histone methyltransferase complex subunit (Drosophila absent, small or homeotic discs)\tCaenorhabditis elegans\tnull\tY17G7B.2\tnull\tnull\tincrease\tAsh-2 deficiency in the parental generation extend the lifespan of descendants up until thethird generation.\tanti\tnull\t27.0\tMutation\t2544: Greer et al. (2011) \"Transgenerational epigenetic inheritance of longevity in Caenorhabditis elegans.\"  Nature 479(7373):365-371 (22012258)\n20\t176879\tasm-3\tAcid SphingoMyelinase\tCaenorhabditis elegans\tCel.20210\tW03G1.7\tnull\tnull\tincrease\tRNA interference increased mean lifespan by 50%.\tanti\tnull\t50.0\tRNA interference\t2233: Kim and Sun (2007) \"Functional genomic approach to identify novel genes involved in the regulation of oxidative stress resistance and animal lifespan.\"  Aging Cell 6(4):489-503 (17608836)\n2012\t174590\tatad-3\tATPase family AAA domain-containing protein 3\tCaenorhabditis elegans\t.7679\tnull\tnull\tnull\tincrease\tRNA interference of mics-1 results in mutants with enhanced longevity when compated to HT115 wild-type controls (mean lifespan is 29% higher). Mutants are however highly sensitive to stress, displaying significantly higher levels of reactive oxygen species.\tanti\tnull\t29.0\tRNA interference\t3561: Hoffmann et al. (2012) \"MICS-1 interacts with mitochondrial ATAD-3 and modulates lifespan in C. elegans.\"  Exp. Gerontol. 47(3):270-275 (22245785)\n1879\t181405\tatf-6\tATF (cAMP-dependent transcription factor) family\tCaenorhabditis elegans\t.5338\tnull\tnull\tnull\tincrease\tRNA interference of ATF-6 results in enhanced longevity (by ~18%).\tanti\tnull\t18.0\tRNA interference\t3503: Wang et al. (2015) \"miR-124/ATF-6, a novel lifespan extension pathway of Astragalus polysaccharide in Caenorhabditis elegans.\"  J. Cell. Biochem. 116(2):242-251 (25186652)\n1938\t179922\tatfs-1\tActivating Transcription Factor associated with Stress\tCaenorhabditis elegans\t.17407\tnull\tnull\tnull\tdecrease\tConstitutive atfs-1 mutations shorten lifespan by up to 26%.\tanti\tnull\t26.0\tOverexpression\t3539: Bennett et al. (2014) \"Activation of the mitochondrial unfolded protein response does not predict longevity in Caenorhabditis elegans.\"  Nat Commun 5:3483 (24662282)\n893\t179246\tatg-18\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tF41E6.13\tnull\tnull\tdecrease\t20% reduction in mean LS\tpro\tnull\t20.0\tRNA interference\t2387: Tóth et al. (2008) \"Longevity pathways converge on autophagy genes to regulate life span in Caenorhabditis elegans.\"  Autophagy 4(3):330-338 (18219227)\n893\t179246\tatg-18\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tF41E6.13\tnull\tnull\tdecrease\t47% maximal lifespan reduction by postdevelopmental RNAi while RNAi fron the beginning of life had no effect.\tanti\t47\tnull\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n894\t176921\tatg-3\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tY55F3AM.4\tnull\tnull\tdecrease\t19% maximal lifespan reduction in wild type worms. 15% lifespan extension in the daf-2 mutant.\tpro\t19\tnull\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n895\t190777\tatg-4.1\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tY87G2A.3\tnull\tnull\tdecrease\t20% maximal lifespan reduction in wild type worms. 10% lifespan extension in the daf-2 mutant.\tpro\t20\tnull\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n896\t3565022\tatg-4.2\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tZK792.8\tnull\tnull\tdecrease\t7% (wild type) maximal lifespan reduction. 10%(daf-2 mutant) lifespan extension.\tpro\t7\tnull\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n897\t171735\tatg-5\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tY71G12B.12\tnull\tnull\tdecrease\t19%(wild type) maximal lifespan reduction. 26%(daf-2 mutant) lifespan extension.\tpro\t19\tnull\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n23\t178005\tatg-7\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tM7.5\tQ21591_CAEEL\tnull\tnull\tRNA interference shortened mean lifespan by 23% and maximum lifespan by 30% in a eat-2 mutant background but not in wild type animals.\tpro\tnull\tnull\tRNA interference\t2244: Jia and Levine (2007) \"Autophagy is required for dietary restriction-mediated life span extension in C. elegans.\"  Autophagy 3(6):597-599 (17912023)\n23\t178005\tatg-7\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tM7.5\tQ21591_CAEEL\tnull\tincrease\tPost developmental RNAi resulted in a 10-15% maxumal lifespan extension compared to wild type. No lifespan extension by RNAi from the beginning of life.\tanti\t15\tnull\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n898\t178561\tatg-9\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tT22H9.2\tnull\tnull\tdecrease\t35% mean lifespan reduction\tpro\tnull\t35.0\tRNA interference\t2387: Tóth et al. (2008) \"Longevity pathways converge on autophagy genes to regulate life span in Caenorhabditis elegans.\"  Autophagy 4(3):330-338 (18219227)\n898\t178561\tatg-9\tAuTophaGy (yeast Atg homolog)\tCaenorhabditis elegans\tnull\tT22H9.2\tnull\tnull\tincrease\t21% (daf-2 mutant) lifespan extension. For postdevelopmental RNAi (wt) maximum lifespan was extended by 10-15% .\tpro\t15\tnull\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n1413\t852695\tATG1\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYGL180W\tnull\tAPG1 AUT3 CVT10\tdecrease\tReplicative lifespan decreased by 20% in the alpha strain\tfitness\tnull\t20.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1413\t852695\tATG1\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYGL180W\tnull\tAPG1 AUT3 CVT10\tdecrease\tReduced chronological lifespan by 70%\tfitness\tnull\t70.0\tDeletion\t2515: Alvers et al. (2009) \"Autophagy and amino acid homeostasis are required for chronological longevity in Saccharomyces cerevisiae.\"  Aging Cell 8(4):353-369 (19302372)\n1908\t39454\tAtg1\tAutophagy-specific gene 1\tDrosophila melanogaster\tnull\tnull\tnull\tnull\tincrease\tAdult-onset, neuronal-specific upregulation of Atg1 results in increased median and maximum lifespan in female flies.\tpro\tnull\t25.0\tOverexpression\t3516: Ulgherait et al. (2014) \"AMPK modulates tissue and organismal aging in a non-cell-autonomous manner.\"  Cell Rep 8(6):1767-1780 (25199830)\n1213\t850684\tATG10\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYLL042C\tnull\tAPG10\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1302\t852518\tATG12\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYBR217W\tnull\tAPG12\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1214\t856315\tATG13\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYPR185W\tnull\tAPG13\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1215\t852425\tATG14\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYBR128C\tnull\tAPG14 CVT12\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1026\t850432\tATG15\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYCR068W\tnull\tAUT5 CVT17\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1026\t850432\tATG15\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYCR068W\tnull\tAUT5 CVT17\tdecrease\tReplicative lifespan decreased by 40% on CR medium\tfitness\tnull\t40.0\tDeletion\t2514: Tang et al. (2008) \"A life-span extending form of autophagy employs the vacuole-vacuole fusion machinery.\"  Autophagy 4(7):874-886 (18690010)\n1303\t855194\tATG16\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYMR159C\tnull\tAPG15 APG16 CVT11 SAP18\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1664\t851142\tATG17\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYLR423C\tnull\tAPG17\tdecrease\tReplicative lifespan decreased by 70% on CR medium\tfitness\tnull\t70.0\tDeletion\t2514: Tang et al. (2008) \"A life-span extending form of autophagy employs the vacuole-vacuole fusion machinery.\"  Autophagy 4(7):874-886 (18690010)\n1304\t850577\tATG18\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYFR021W\tnull\tAUT10 CVT18 NMR1 SVP1\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1304\t850577\tATG18\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYFR021W\tnull\tAUT10 CVT18 NMR1 SVP1\tdecrease\tMean chronological lifespan decreased in the a strain by more than 50%\tfitness\tnull\t50.0\tDeletion\t2502: Laschober et al. (2010) \"Identification of evolutionarily conserved genetic regulators of cellular aging.\"  Aging Cell 9(6):1084-1097 (20883526)\n834\t38344\tAtg2\tAutophagy-specific gene 2\tDrosophila melanogaster\tnull\tFBgn0044452\tnull\tatg2 ATG2 CG1241 Dmel\\CG1241 EP3697\tincrease\tOverexpression of Atg2 increased average female lifespan.\tpro\tnull\t28.0\tOverexpression\t2243: Simonsen et al. (2008) \"Promoting basal levels of autophagy in the nervous system enhances longevity and oxidant resistance in adult Drosophila.\"  Autophagy 4(2):176-184 (18059160)\n1216\t855479\tATG2\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYNL242W\tnull\tAPG2 AUT8 SPO72\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1995\t2539317\tatg20\tsorting nexin Atg20 (predicted)\tSchizosaccharomyces pombe\tnull\tnull\tnull\tnull\tincrease\tDeletion of Atg20 increases chronological lifespan.\tanti\tnull\tnull\tDeletion\t3555: Rallis et al. (2014) \"Systematic screen for mutants resistant to TORC1 inhibition in fission yeast reveals genes involved in cellular ageing and growth.\"  Biol Open 3(2):161-171 (24463365)\n1027\t856004\tATG21\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYPL100W\tnull\tHSV1 MAI1\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1217\t855937\tATG29\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYPL166W\tnull\tnull\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1305\t855954\tATG5\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYPL149W\tnull\tAPG5\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1862\t11793\tAtg5\tautophagy related 5\tMus musculus\tnull\tnull\tnull\tnull\tincrease\tOverexpression of Atg5 extends median lifespan of mice by 17.2%. Additionally, it enhances autophagy, and Atg5 transgenic mice show anti-ageing phenotypes, including leanness, increased insulin sensitivity and improved motor function.\tpro\tnull\t17.0\tOverexpression\t3492: Pyo et al. (2013) \"Overexpression of Atg5 in mice activates autophagy and extends lifespan.\"  Nat Commun 4:2300 (23939249)\n21\t37141\tAtg7\tAutophagy-specific gene 7\tDrosophila melanogaster\tDm.5217\tFBgn0034366\tnull\tatg-7 atg7 CG5489 Dmel\\CG5489\tdecrease\tKnockouts are short-lived and hypersensitive to nutrient and oxidative stress. There is a 30% reduction in maximal lifespan.\tpro\t30\tnull\tKnockout\t2242: Juhász et al. (2007) \"Atg7-dependent autophagy promotes neuronal health, stress tolerance, and longevity but is dispensable for metamorphosis in Drosophila.\"  Genes Dev. 21(23):3061-3066 (18056421)\n21\t37141\tAtg7\tAutophagy-specific gene 7\tDrosophila melanogaster\tDm.5217\tFBgn0034366\tnull\tatg-7 atg7 CG5489 Dmel\\CG5489\tdecrease\tMutants are hypersensitive to oxidative stress and short lived.\tpro\tnull\tnull\tMutation\t2383: Park et al. (2009) \"Autophagic degradation of nuclear components in mammalian cells.\"  Autophagy 5(6):795-804 (19550147)\n1218\t856576\tATG7\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYHR171W\tnull\tAPG11 APG7 CVT2\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1218\t856576\tATG7\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYHR171W\tnull\tAPG11 APG7 CVT2\tdecrease\tReduced chronological lifespan by 70%\tfitness\tnull\t70.0\tDeletion\t2515: Alvers et al. (2009) \"Autophagy and amino acid homeostasis are required for chronological longevity in Saccharomyces cerevisiae.\"  Aging Cell 8(4):353-369 (19302372)\n1306\t852200\tATG8\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYBL078C\tnull\tAPG8 AUT7 CVT5\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n22\t32001\tAtg8a\tAutophagy-related 8a\tDrosophila melanogaster\tDm.20907\tFBgn0052672\tnull\tatg8 Atg8 Atg8/LC3 atg8a Atg8A ATG8a BcDNA:LD05816\tincrease\tMutations resulted in reduced lifespan and increased sensitivity to oxidative stress while enhanced expression in older fly brains extended average adult lifespan by 56% and promoted resistance to oxidative stress.\tpro\tnull\t56.0\tOverexpression\t2243: Simonsen et al. (2008) \"Promoting basal levels of autophagy in the nervous system enhances longevity and oxidant resistance in adult Drosophila.\"  Autophagy 4(2):176-184 (18059160)\n22\t32001\tAtg8a\tAutophagy-related 8a\tDrosophila melanogaster\tDm.20907\tFBgn0052672\tnull\tatg8 Atg8 Atg8/LC3 atg8a Atg8A ATG8a BcDNA:LD05816\tincrease\tIncreases the resistance to oxidative stress and extends the average lifespan up to 56%.\tpro\tnull\t50.0\tOverexpression\t2383: Park et al. (2009) \"Autophagic degradation of nuclear components in mammalian cells.\"  Autophagy 5(6):795-804 (19550147)\n22\t32001\tAtg8a\tAutophagy-related 8a\tDrosophila melanogaster\tDm.20907\tFBgn0052672\tnull\tatg8 Atg8 Atg8/LC3 atg8a Atg8A ATG8a BcDNA:LD05816\tdecrease\t15% maximum lifespan reduction at 25 C, 20% maximum lifespan reduction at 29 C.\tpro\t20\tnull\tMutation\t2472: Simonsen et al. (2007) \"Linking lysosomal trafficking defects with changes in aging and stress response in Drosophila.\"  Autophagy 3(5):499-501 (17617737)\n1219\t851406\tATG9\tAuTophaGy related\tSaccharomyces cerevisiae\tnull\tYDL149W\tnull\tAPG9 AUT9 CVT7\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1028\t856137\tATH1\tAcid TreHalase\tSaccharomyces cerevisiae\tnull\tYPR026W\tnull\tnull\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n24\t11920\tAtm\tAtaxia telangiectasia mutated homolog (human)\tMus musculus\tMm.5088\tENSMUSG00000034218\tQ62388\tAI256621 C030026E19Rik\tdecrease\tMice mutant for Atm and Terc displayed progressive multi-organ system compromise and features of accelerated ageing.\tpro\tnull\tnull\tMutations\t12: Wong et al. (2003) \"Telomere dysfunction and Atm deficiency compromises organ homeostasis and accelerates ageing.\"  Nature 421(6923):643-648 (12540856)\n24\t11920\tAtm\tAtaxia telangiectasia mutated homolog (human)\tMus musculus\tMm.5088\tENSMUSG00000034218\tQ62388\tAI256621 C030026E19Rik\tnull\tCells show slow growth in culture and premature senescence, telomeres are extensively shortened in multiple tissues of ATM(-/-) mice. There is increased tumor incidence in ATM(-/-) mice.\tnull\tnull\tnull\tMutation\t2460: Barlow et al. (1996) \"Atm-deficient mice: a paradigm of ataxia telangiectasia.\"  Cell 86(1):159-171 (8689683)\n24\t11920\tAtm\tAtaxia telangiectasia mutated homolog (human)\tMus musculus\tMm.5088\tENSMUSG00000034218\tQ62388\tAI256621 C030026E19Rik\tdecrease\tMice homozygous for the disrupted Atm allele displayed growth retardation, neurologic dysfunction, male and female infertility secondary to the absence of mature gametes, defects in T lymphocyte maturation, and extreme sensitivity to gamma-irradiation. The majority of animals developed malignant thymic lymphomas between 2 and 4 months of age.\tpro\tnull\tnull\tDeletion\t2461: Elson et al. (1996) \"Pleiotropic defects in ataxia-telangiectasia protein-deficient mice.\"  Proc. Natl. Acad. Sci. U.S.A. 93(23):13084-13089 (8917548)\n24\t11920\tAtm\tAtaxia telangiectasia mutated homolog (human)\tMus musculus\tMm.5088\tENSMUSG00000034218\tQ62388\tAI256621 C030026E19Rik\tdecrease\tAtm-deficient mice are retarded in growth, do not produce mature sperm, and exhibit severe defects in T cell maturation while going on to develop thymomas.\tpro\tnull\tnull\tDeletion\t1563: Xu et al. (1996) \"Targeted disruption of ATM leads to growth retardation, chromosomal fragmentation during meiosis, immune defects, and thymic lymphoma.\"  Genes Dev. 10(19):2411-2422 (8843194)\n25\t175716\tatp-2\tATP synthase F1 subunit gamma\tCaenorhabditis elegans\tCel.37995\tC34E10.6\tnull\tnull\tincrease\tRNA interference results in extended lifespan.\tanti\tnull\tnull\tRNA interference\t183: Dillin et al. (2002) \"Rates of behavior and aging specified by mitochondrial function during development.\"  Science 298(5602):2398-2401 (12471266)\n25\t175716\tatp-2\tATP synthase F1 subunit gamma\tCaenorhabditis elegans\tCel.37995\tC34E10.6\tnull\tnull\tincrease\tPost developmental RNAi resulted in a 43% increase in mean lifespan.\tanti\tnull\t43.0\tRNA interference\t2247: Curran and Ruvkun (2007) \"Lifespan regulation by evolutionarily conserved genes essential for viability.\"  PLoS Genet. 3(4):e56 (17411345)\n25\t175716\tatp-2\tATP synthase F1 subunit gamma\tCaenorhabditis elegans\tCel.37995\tC34E10.6\tnull\tnull\tincrease\tatp-2 mutation significantly lengthen (by 20%) the lifespan of the arrested animals.\tanti\tnull\t20.0\tMutation\t2241: Tsang et al. (2001) \"Mitochondrial respiratory chain deficiency in Caenorhabditis elegans results in developmental arrest and increased life span.\"  J. Biol. Chem. 276(34):32240-32246 (11410594)\n25\t175716\tatp-2\tATP synthase F1 subunit gamma\tCaenorhabditis elegans\tCel.37995\tC34E10.6\tnull\tnull\tincrease\tRNA interference of atp-2 results in an increased lifespan.\tanti\tnull\t14.8\tRNA interference\t3567: Reis-Rodrigues et al. (2012) \"Proteomic analysis of age-dependent changes in protein solubility identifies genes that modulate lifespan.\"  Aging Cell 11(1):120-127 (22103665)\n26\t172195\tatp-3\tATP synthase subunit\tCaenorhabditis elegans\tCel.9091\tF27C1.7\tnull\tnull\tincrease\tRNA interference results in lifespan extension.\tanti\tnull\tnull\tRNA interference\t2240: Hansen et al. (2005) \"New genes tied to endocrine, metabolic, and dietary regulation of lifespan from a Caenorhabditis elegans genomic RNAi screen.\"  PLoS Genet. 1(1):119-128 (16103914)\n26\t172195\tatp-3\tATP synthase subunit\tCaenorhabditis elegans\tCel.9091\tF27C1.7\tnull\tnull\tincrease\tPost developmental RNAi resulted in a increase in mean lifespan.\tanti\tnull\tnull\tRNA interference\t2246: Chen et al. (2007) \"Longevity determined by developmental arrest genes in Caenorhabditis elegans.\"  Aging Cell 6(4):525-533 (17521386)\n26\t172195\tatp-3\tATP synthase subunit\tCaenorhabditis elegans\tCel.9091\tF27C1.7\tnull\tnull\tincrease\tPost developmental RNAi resulted in a 21% increase in mean lifespan.\tanti\tnull\t21.0\tRNA interference\t2247: Curran and Ruvkun (2007) \"Lifespan regulation by evolutionarily conserved genes essential for viability.\"  PLoS Genet. 3(4):e56 (17411345)\n27\t179025\tatp-4\tATP synthase subunit\tCaenorhabditis elegans\tCel.7035\tT05H4.12\tnull\tnull\tincrease\tRNA interference results in lifespan extension.\tanti\tnull\tnull\tRNA interference\t2240: Hansen et al. (2005) \"New genes tied to endocrine, metabolic, and dietary regulation of lifespan from a Caenorhabditis elegans genomic RNAi screen.\"  PLoS Genet. 1(1):119-128 (16103914)\n28\t179541\tatp-5\tATP synthase subunit\tCaenorhabditis elegans\tCel.6524\tC06H2.1\tnull\tnull\tincrease\tRNA interference results extended lifespan.\tanti\tnull\tnull\tRNA interference\t2240: Hansen et al. (2005) \"New genes tied to endocrine, metabolic, and dietary regulation of lifespan from a Caenorhabditis elegans genomic RNAi screen.\"  PLoS Genet. 1(1):119-128 (16103914)\n1604\t852177\tATP1\tATP synthase\tSaccharomyces cerevisiae\tnull\tYBL099W\tnull\tnull\tdecrease\tReplicative lifespan decreased by 70% in the alpha strain\tfitness\tnull\t70.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1604\t852177\tATP1\tATP synthase\tSaccharomyces cerevisiae\tnull\tYBL099W\tnull\tnull\tincrease\tChronological lifespan increased up to 50%\tanti\tnull\t50.0\tDeletion\t2516: Francis et al. (2007) \"Mutations in the Atp1p and Atp3p subunits of yeast ATP synthase differentially affect respiration and fermentation in Saccharomyces cerevisiae.\"  J. Bioenerg. Biomembr. 39(2):127-144 (17492370)\n1487\t854893\tATP18\tATP synthase\tSaccharomyces cerevisiae\tnull\tYML081C-A\tnull\tnull\tdecrease\tReplicative lifespan decreased by 40% in the alpha strain\tfitness\tnull\t40.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n29\t853585\tATP2\tATP synthase F1 subunit gamma\tSaccharomyces cerevisiae\tnull\tYJR121W\tnull\tnull\tdecrease\tA mutation causes a clonal senescence phenotype resulting from the disruption of the age asymmetry between mother and daughter cells in that that daughter cells are born old.\tpro\tnull\tnull\tMutation\t2245: Lai et al. (2002) \"A mutation in the ATP2 gene abrogates the age asymmetry between mother and daughter cells of the yeast Saccharomyces cerevisiae.\"  Genetics 162(1):73-87 (12242224)\n29\t853585\tATP2\tATP synthase F1 subunit gamma\tSaccharomyces cerevisiae\tnull\tYJR121W\tnull\tnull\tdecrease\tReplicative lifespan decreased by 50% in the alpha strain\tfitness\tnull\t50.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n1640\t852327\tATP3\tATP synthase\tSaccharomyces cerevisiae\tnull\tYBR039W\tnull\tnull\tincrease\tChronological lifespan increased up to 50%\tanti\tnull\t50.0\tDeletion\t2516: Francis et al. (2007) \"Mutations in the Atp1p and Atp3p subunits of yeast ATP synthase differentially affect respiration and fermentation in Saccharomyces cerevisiae.\"  J. Bioenerg. Biomembr. 39(2):127-144 (17492370)\n1652\t856027\tATP4\tATP synthase\tSaccharomyces cerevisiae\tnull\tYPL078C\tnull\tLPF7\tdecrease\tReplicative lifespan decreased by 10% in the alpha strain\tfitness\tnull\t10.0\tDeletion\t2504: Smith et al. (2008) \"Quantitative evidence for conserved longevity pathways between divergent eukaryotic species.\"  Genome Res. 18(4):564-570 (18340043)\n2105\t36760\tATPCL\tATP citrate lyase\tDrosophila melanogaster\tnull\tnull\tnull\tnull\tincrease\tReduced ATPCL activity extended male fly lifepsan by 32%.\tanti\tnull\t32.0\tMutation\t4407: Peleg et al. (2016) \"Life span extension by targeting a link between metabolism and histone acetylation in Drosophila.\"  EMBO Rep. 17(3):455-469 (26781291)\n30\t245000\tAtr\tAtaxia telangiectasia and Rad3 related\tMus musculus\tMm.212462\tENSMUSG00000032409\tQ9JKK8\tnull\tdecrease\tDeletion in young adults eliminates 80-90% of proliferating cells and results in several age-related phenotypes accompanied by a depletion of stem and progenitor cells and exhaustion of tissue renewal and homeostatic capacity.\tpro\tnull\tnull\tDeletion\t1864: Ruzankina et al. (2007) \"Deletion of the developmentally essential gene ATR in adult mice leads to age-related phenotypes and stem cell loss.\"  Cell Stem Cell 1(1):113-126 (18371340)\n30\t245000\tAtr\tAtaxia telangiectasia and Rad3 related\tMus musculus\tMm.212462\tENSMUSG00000032409\tQ9JKK8\tnull\tdecrease\tMutant mice show high levels of replicative stress during embryogenesis, when proliferation is widespread, but this is reduced to marginal amounts in postnatal life. In spite of this decrease, adult Seckel mice show accelerated aging, which is further aggravated in the absence of p53. Seckel mice died in less than half a year, showing pancytopenia, cachexia and signs of premature ageing, including hair graying, kyphosis, osteoporosis, accumulation of fat in the bone marrow, decreased density of hair follicles and thinner epidermis.\tpro\tnull\tnull\tMutations\t2095: Murga et al. (2009) \"A mouse model of ATR-Seckel shows embryonic replicative stress and accelerated aging.\"  Nat. Genet. 41(8):891-898 (19620979)\n1758\t180049\tatx-3\tProtein ATX-3\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tIn contrast to single deletions, worms deficient for both cdc-48.1 (p97) and atx-3 have an extended lifespan, modulated through the insulin/IGF-1 signalling pathway.\tanti\tnull\t50.0\tMutation\t3238: Kuhlbrodt et al. (2011) \"The Machado-Joseph disease deubiquitylase ATX-3 couples longevity and proteostasis.\"  Nat. Cell Biol. 13(3):273-281 (21317884)\n835\t40044\tAut1\tAut1 -CG6877 gene product from transcript CG6877-RA\tDrosophila melanogaster\tnull\tFBgn0036813\tnull\tatg3 Atg3 CG6877 Dmel\\CG6877 Draut1\tdecrease\tDepletion of Atg3 from the first day of imaginal stage shortens life span in Drosophila and causes morphological and behavioral features of premature aging.\tpro\tnull\t28.0\tRNA interference\t2387: Tóth et al. (2008) \"Longevity pathways converge on autophagy genes to regulate life span in Caenorhabditis elegans.\"  Autophagy 4(3):330-338 (18219227)\n1029\t853457\tAVT1\tAmino acid Vacuolar Transport\tSaccharomyces cerevisiae\tnull\tYJR001W\tnull\tnull\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n899\t179432\tB0024.4\thypothetical protein\tCaenorhabditis elegans\tnull\tB0024.4\tnull\tnull\tincrease\t15% mean lifespan extension\tanti\tnull\t15.0\tRNA interference post development\t2421: Oliveira et al. (2009) \"Condition-adapted stress and longevity gene regulation by Caenorhabditis elegans SKN-1/Nrf.\"  Aging Cell 8(5):524-541 (19575768)\n2045\t180344\tB0250.5\tProbable 3-hydroxyisobutyrate dehydrogenase, mitochondrial\tCaenorhabditis elegans\t9442\tnull\tnull\tnull\tincrease\tRNA interference of B0250.5 results in an increased lifespan.\tanti\tnull\t10.2\tRNA interference\t3567: Reis-Rodrigues et al. (2012) \"Proteomic analysis of age-dependent changes in protein solubility identifies genes that modulate lifespan.\"  Aging Cell 11(1):120-127 (22103665)\n1845\t176217\tB0303.2\tProtein B0303.2\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tMutatation led to increased longevity as compared to the wild type controls.\tanti\t7\t5.0\tMutation\t3277: Schmeisser et al. (2013) \"Role of sirtuins in lifespan regulation is linked to methylation of nicotinamide.\"  Nat. Chem. Biol. 9(11):693-700 (24077178)\n35\t174734\tB0491.5\tProtein B0491.5\tCaenorhabditis elegans\tCel.6372\tB0491.5\tnull\tnull\tincrease\tRNA interference in adulthood resulted in a 16% increase in mean lifespan.\tanti\tnull\t16.0\tRNA interference\t2246: Chen et al. (2007) \"Longevity determined by developmental arrest genes in Caenorhabditis elegans.\"  Aging Cell 6(4):525-533 (17521386)\n35\t174734\tB0491.5\tProtein B0491.5\tCaenorhabditis elegans\tCel.6372\tB0491.5\tnull\tnull\tincrease\tPost developmental RNAi resulted in a extended mean life span (30-60% in different backgrounds).\tanti\tnull\t60.0\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n36\t172954\tB0511.6\tProtein B0511.6\tCaenorhabditis elegans\tCel.18351\tB0511.6\tnull\tnull\tincrease\tRNA interference in adulthood extended mean lifespan by 50%.\tanti\tnull\t50.0\tRNA interference\t2247: Curran and Ruvkun (2007) \"Lifespan regulation by evolutionarily conserved genes essential for viability.\"  PLoS Genet. 3(4):e56 (17411345)\n37\t182030\tB0546.3\tProtein B0546.3\tCaenorhabditis elegans\tCel.25636\tB0546.3\tnull\tnull\tincrease\tRNA interference increased mean lifespan by 27%.\tanti\tnull\t27.0\tRNA interference\t2233: Kim and Sun (2007) \"Functional genomic approach to identify novel genes involved in the regulation of oxidative stress resistance and animal lifespan.\"  Aging Cell 6(4):489-503 (17608836)\n1905\t35900\tbabo\tbaboon\tDrosophila melanogaster\tnull\tnull\tnull\tnull\tincrease\tPost developmental RNA interference of Babo increases lifespan in muscle (16%) but not in adipose tissue.\tanti\tnull\t16.39\tPost developmental RNA interference\t3513: Bai et al. (2013) \"Activin signaling targeted by insulin/dFOXO regulates aging and muscle proteostasis in Drosophila.\"  PLoS Genet. 9(11):e1003941 (24244197)\n38\t176330\tbaf-1\tBarrier to Autointegration Factor\tCaenorhabditis elegans\tCel.19409\tB0464.7\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 28% in daf-2 mutants.\tpro\tnull\t28.0\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n836\t43038\tbam\tbag of marbles\tDrosophila melanogaster\tnull\tFBgn0000158\tnull\talpha Bam BAM Bam-C BamC BamF CG10422 Dmel\\CG10422\tincrease\tDrosophila Bam overexpressing mutants have an extended lifespan due to germ cell loss.\tpro\tnull\t50.0\tMutations\t2388: Flatt et al. (2008) \"Drosophila germ-line modulation of insulin signaling and lifespan.\"  Proc. Natl. Acad. Sci. U.S.A. 105(17):6368-6373 (18434551)\n1030\t852360\tBAP2\tBranched-chain Amino acid Permease\tSaccharomyces cerevisiae\tnull\tYBR068C\tnull\tnull\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n39\t180982\tbar-1\tbeta-catenin\tCaenorhabditis elegans\tCel.5480\tC54D1.6\tnull\tnull\tdecrease\tMay play a role in regulating daf-16 during dauer formation, particularly in conditions of oxidative stress. Deletion of bar-1 reduces mean (45%) and maximal (35%) lifespan.\tpro\t35\t45.0\tDeletion\t1358: Essers et al. (2005) \"Functional interaction between beta-catenin and FOXO in oxidative stress signaling.\"  Science 308(5725):1181-1184 (15905404)\n1340\t853974\tBAS1\tBASal\tSaccharomyces cerevisiae\tnull\tYKR099W\tnull\tnull\tincrease\tMean chronological lifespan strongly increased in the a strain\tanti\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1340\t853974\tBAS1\tBASal\tSaccharomyces cerevisiae\tnull\tYKR099W\tnull\tnull\tincrease\tReplicative lifespan increased by 30% in the alpha strain\tanti\tnull\t30.0\tDeletion\t1570: Kaeberlein et al. (2005) \"Regulation of yeast replicative life span by TOR and Sch9 in response to nutrients.\"  Science 310(5751):1193-1196 (16293764)\n1340\t853974\tBAS1\tBASal\tSaccharomyces cerevisiae\tnull\tYKR099W\tnull\tnull\tincrease\tReplicative lifespan increased by 30% in the alpha strain\tanti\tnull\t30.0\tDeletion\t2503: Managbanag et al. (2008) \"Shortest-path network analysis is a useful approach toward identifying genetic determinants of longevity.\"  PLoS ONE 3(11):e3802 (19030232)\n40\t12028\tBax\tBcl2-associated X protein\tMus musculus\tMm.19904\tENSMUSG00000003873\tQ07813\tnull\tincrease\tInactivation extended fertile potential and minimized age-related health problems, including bone and muscle loss, excess fat deposition, alopecia, cataracts, deafness, increased anxiety, and selective attention deficit. It did not extend lifespan.\tnull\tnull\tnull\tKnockout\t1927: Perez et al. (2007) \"Absence of the proapoptotic Bax protein extends fertility and alleviates age-related health complications in female mice.\"  Proc. Natl. Acad. Sci. U.S.A. 104(12):5229-5234 (17360389)\n2112\t181423\tbcat-1\tBranched-chain-amino-acid aminotransferase, cytosolic\tCaenorhabditis elegans\tnull\tnull\tnull\tnull\tincrease\tDownregulation of bcat-1 in worms increased mean lifespan by 25% and maximum lifespan by 19%. In addition to extending lifespan bcat-1 downregulation also increased health span.\tanti\t19\t25.0\tRNA interference\t4413: Mansfeld et al. (2015) \"Branched-chain amino acid catabolism is a conserved regulator of physiological ageing.\"  Nat Commun 6:10043 (26620638)\n41\t33819\tbchs\tblue cheese\tDrosophila melanogaster\tDm.12933\tFBgn0043362\tnull\talfy BcDNA:SD12984 bchd Bchs Beach1 CG14001 CG9011\tdecrease\tMean lifespan is decreased 40-45% in bchs mutant adults. No pronounced developmental defects were observed and young adults have normal behaviors, indicating that the bchs gene is essential for normal adult survival and longevity.\tpro\tnull\t45.0\tMutation\t2248: Finley et al. (2003) \"blue cheese mutations define a novel, conserved gene involved in progressive neural degeneration.\"  J. Neurosci. 23(4):1254-1264 (12598614)\n41\t33819\tbchs\tblue cheese\tDrosophila melanogaster\tDm.12933\tFBgn0043362\tnull\talfy BcDNA:SD12984 bchd Bchs Beach1 CG14001 CG9011\tdecrease\tMutants showed a 40% reduction in maximum lifespan.\tpro\t40\tnull\tMutation\t2472: Simonsen et al. (2007) \"Linking lysosomal trafficking defects with changes in aging and stress response in Drosophila.\"  Autophagy 3(5):499-501 (17617737)\n41\t33819\tbchs\tblue cheese\tDrosophila melanogaster\tDm.12933\tFBgn0043362\tnull\talfy BcDNA:SD12984 bchd Bchs Beach1 CG14001 CG9011\tdecrease\tMutants showed a 13% reduction in maximum lifespan.\tpro\t13\tnull\tMutations\t2254: Simonsen et al. (2007) \"Genetic modifiers of the Drosophila blue cheese gene link defects in lysosomal transport with decreased life span and altered ubiquitinated-protein profiles.\"  Genetics 176(2):1283-1297 (17435236)\n1031\t853350\tBCK1\tBypass of C Kinase\tSaccharomyces cerevisiae\tnull\tYJL095W\tnull\tLAS3 SAP3 SLK1 SSP31\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1031\t853350\tBCK1\tBypass of C Kinase\tSaccharomyces cerevisiae\tnull\tYJL095W\tnull\tLAS3 SAP3 SLK1 SSP31\tdecrease\tMean chronological lifespan decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n1032\t851981\tBCS1\tubiquinol-cytochrome c reductase (bc1) Synthesis\tSaccharomyces cerevisiae\tnull\tYDR375C\tnull\tnull\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n42\t854778\tBCY1\tBypass of CYclase mutations\tSaccharomyces cerevisiae\tnull\tYIL033C\tnull\tSRA1\tdecrease\tDeletion of BCY1 results in a decrease in lifespan.\tfitness\tnull\tnull\tDeletion\t2249: D\u0027mello et al. (1994) \"Cloning and characterization of LAG1, a longevity-assurance gene in yeast.\"  J. Biol. Chem. 269(22):15451-15459 (8195187)\n42\t854778\tBCY1\tBypass of CYclase mutations\tSaccharomyces cerevisiae\tnull\tYIL033C\tnull\tSRA1\tdecrease\tMean chronological lifespan strongly decreased in the a strain\tfitness\tnull\tnull\tDeletion\t2501: Matecic et al. (2010) \"A microarray-based genetic screen for yeast chronological aging factors.\"  PLoS Genet. 6(4):e1000921 (20421943)\n44\t177345\tbec-1\tBEClin (human autophagy) homolog\tCaenorhabditis elegans\tCel.12317\tT19E7.3\tnull\tnull\tdecrease\tRequired for normal dauer morphogenesis and lifespan extension. RNA interference results in a shortened lifespan.\tpro\tnull\tnull\tRNA interference\t2250: Meléndez et al. (2003) \"Autophagy genes are essential for dauer development and life-span extension in C. elegans.\"  Science 301(5638):1387-1391 (12958363)\n44\t177345\tbec-1\tBEClin (human autophagy) homolog\tCaenorhabditis elegans\tCel.12317\tT19E7.3\tnull\tnull\tdecrease\tShortened mean lifespan in eat-2 mutant background (24%) but not in wild-type.\tpro\tnull\tnull\tRNA interference\t2484: Jia et al. (2007) \"Autophagy genes protect against disease caused by polyglutamine expansion proteins in Caenorhabditis elegans.\"  Autophagy 3(1):21-25 (17172799)\n44\t177345\tbec-1\tBEClin (human autophagy) homolog\tCaenorhabditis elegans\tCel.12317\tT19E7.3\tnull\tnull\tdecrease\t16% lifespan reduction (compared to wild type) and 25% lifespan reduction (in a daf-2 mutant) for RNAi from beginning of life. For post developmental RNAi maximum lifespan was extended by 10-15% both in wild-type and daf2 mutants.\tpro\tnull\t16.0\tRNA interference\t2424: Hashimoto et al. (2009) \"Lifespan extension by suppression of autophagy genes in Caenorhabditis elegans.\"  Genes Cells 14(6):717-726 (19469880)\n44\t177345\tbec-1\tBEClin (human autophagy) homolog\tCaenorhabditis elegans\tCel.12317\tT19E7.3\tnull\tnull\tdecrease\tRNAi resulted in a 10-40% reduction in mean lifespan.\tpro\tnull\t40.0\tRNA interference\t2387: Tóth et al. (2008) \"Longevity pathways converge on autophagy genes to regulate life span in Caenorhabditis elegans.\"  Autophagy 4(3):330-338 (18219227)\n1680\t852499\tBEM1\tBud EMergence\tSaccharomyces cerevisiae\tnull\tYBR200W\tnull\tSRO1\tdecrease\tReplicative lifespan decreased by 75% in the alpha strain\tfitness\tnull\t75.0\tDeletion\t2527: Liu et al. (2010) \"The polarisome is required for segregation and retrograde transport of protein aggregates.\"  Cell 140(2):257-267 (20141839)\n664\t172054\tbet-1\tBET-1\tCaenorhabditis elegans\tCel.17209\tY119C1B.8\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 20% in daf-2 mutants.\tpro\tnull\tnull\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n1668\t853551\tBIR1\tBaculoviral IAP Repeat-containing protein\tSaccharomyces cerevisiae\tnull\tYJR089W\tnull\tnull\tincrease\tIncreased chronological lifespan\tpro\tnull\tnull\tOverexpression\t2517: Walter et al. (2006) \"The inhibitor-of-apoptosis protein Bir1p protects against apoptosis in S. cerevisiae and is a substrate for the yeast homologue of Omi/HtrA2.\"  J. Cell. Sci. 119(Pt 9):1843-1851 (16608876)\n45\t172917\tblmp-1\tBlimp1 (B Lymphocyte-induced Maturation Protein-1) homolog\tCaenorhabditis elegans\tCel.18891\tF25D7.3\tnull\tnull\tdecrease\tRNA interference decreased median lifespan by 17% in a daf-2 background and 20% in daf-2/daf-16 double mutants.\tpro\tnull\tnull\tRNA interference\t2239: Samuelson et al. (2007) \"Gene activities that mediate increased life span of C. elegans insulin-like signaling mutants.\"  Genes Dev. 21(22):2976-2994 (18006689)\n45\t172917\tblmp-1\tBlimp1 (B Lymphocyte-induced Maturation Protein-1) homolog\tCaenorhabditis elegans\tCel.18891\tF25D7.3\tnull\tnull\tdecrease\tRNAi resulted in a 20% mean lifespan decrease.\tpro\tnull\t20.0\tRNA interference\t2423: Greer et al. (2010) \"Members of the H3K4 trimethylation complex regulate lifespan in a germline-dependent manner in C. elegans.\"  Nature 466(7304):383-387 (20555324)\n46\t39322\tBmcp\tBmcp\tDrosophila melanogaster\tDm.4611\tFBgn0036199\tnull\tbmcp CG7314 DmBMCP Dmel\\CG7314 dmUCP5 DmUCP5 ucp5\tincrease\tKnockout flies live longer on low-calorie diets, have a decreased fertility, and gain less weight on high-calorie diets.\tanti\tnull\tnull\tKnockout\t2251: Sánchez-Blanco et al. (2006) \"Involvement of Drosophila uncoupling protein 5 in metabolism and aging.\"  Genetics 172(3):1699-1710 (16387864)\n1033\t856924\tBMH1\tBrain Modulosignalin Homologue\tSaccharomyces cerevisiae\tnull\tYER177W\tnull\tAPR6\tdecrease\tMean replicative lifespan decreased in the alpha and a strain\tfitness\tnull\tnull\tDeletion\t2500: Fabrizio et al. (2010) \"Genome-wide screen in Saccharomyces cerevisiae identifies vacuolar protein sorting, autophagy, biosynthetic, and tRNA methylation genes involved in life span regulation.\"  PLoS Genet. 6(7):e1001024 (20657825)\n1033\t856924\tBMH1\tBrain Modulosignalin Homologue\tSaccharomyces cerevisiae\tnull\tYER177W\tnull\tAPR6\tincrease\tExtends chronological life span (CLS) by activating stress response\tpro\tnull\tnull\tOverexpression\t2518: Wang et al. (2009) \"Deleting the 14-3-3 protein Bmh1 extends life span in Saccharomyces cerevisiae by increasing stress response.\"  Genetics 183(4):1373-1384 (19805817)\n1033\t856924\tBMH1\tBrain Modulosignalin Homologue\tSaccharomyces cerevisiae\tnull\tYER177W\tnull\tAPR6\tincrease\tExtends chronological lifespan by 25% by activating stress response\tanti\tnull\t25.0\tDeletion\t2518: Wang et al. (2009) \"Deleting the 14-3-3 protein Bmh1 extends life span in Saccharomyces cerevisiae by increasing stress response.\"  Genetics 183(4):1373-1384 (19805817)"
          },
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"result-alert alert-warning\" role\u003d\"alert\"\u003e\u003cbutton type\u003d\"button\" class\u003d\"close\" data-dismiss\u003d\"alert\" aria-label\u003d\"Close\"\u003e\u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e\u003c/button\u003e\u003cstrong\u003eOutput is truncated\u003c/strong\u003e to 102400 bytes. Learn more about \u003cstrong\u003eZEPPELIN_INTERPRETER_OUTPUT_LIMIT\u003c/strong\u003e\u003c/div\u003e"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d579",
            "http://e198eb82c686:4040/jobs/job?id\u003d580",
            "http://e198eb82c686:4040/jobs/job?id\u003d581"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532020872823_-1705067189",
      "id": "20180712-053123_1705019321",
      "dateCreated": "2018-07-19 17:21:12.823",
      "dateStarted": "2018-08-15 19:52:51.301",
      "dateFinished": "2018-08-15 19:53:55.255",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val (mouse, fly, worm) \u003d (\"Mus musculus\",\"Drosophila melanogaster\",\"Caenorhabditis elegans\")\nval mouse_genes \u003d models.where($\"organism\" \u003d\u003d\u003d mouse)\nval fly_genes\u003d models.where($\"organism\" \u003d\u003d\u003d fly)\nval worm_genes \u003d models.where($\"organism\" \u003d\u003d\u003d worm)\nval good_models_genes \u003d models.where($\"organism\".isin(mouse, fly, worm))\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:01.952",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mouse: String \u003d Mus musculus\nfly: String \u003d Drosophila melanogaster\nworm: String \u003d Caenorhabditis elegans\nmouse_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nfly_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nworm_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\ngood_models_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872825_1996765745",
      "id": "20180712-034509_1562304990",
      "dateCreated": "2018-07-19 17:21:12.825",
      "dateStarted": "2018-08-15 19:53:08.924",
      "dateFinished": "2018-08-15 19:54:32.420",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val influence \u003d $\"Longevity Influence\"\nval mouse_fly_worm_pro_longevity \u003d good_models_genes.where(influence \u003d\u003d\u003d \"pro\")\nval mouse_fly_worm_anti_longevity \u003d good_models_genes.where(influence \u003d\u003d\u003d \"anti\")\n\nval mouse_pro_longevity \u003d mouse_genes.where(influence \u003d\u003d\u003d \"pro\")\nval mouse_anti_longevity \u003d mouse_genes.where(influence \u003d\u003d\u003d \"anti\")\n\nval fly_pro_longevity \u003d fly_genes.where(influence \u003d\u003d\u003d \"pro\")\nval fly_anti_longevity \u003d fly_genes.where(influence \u003d\u003d\u003d \"anti\")\n\nval worm_pro_longevity \u003d worm_genes.where(influence \u003d\u003d\u003d \"pro\")\nval worm_anti_longevity \u003d worm_genes.where(influence \u003d\u003d\u003d \"anti\")\n\nval longevity \u003d Map(\n    \"pro\" -\u003e Map(\"mouse\"-\u003e mouse_pro_longevity, \"fly\" -\u003e fly_pro_longevity, \"worm\" -\u003e worm_pro_longevity),\n    \"anti\" -\u003e Map(\"mouse\"-\u003e mouse_anti_longevity, \"fly\" -\u003e fly_anti_longevity, \"worm\" -\u003e worm_anti_longevity)\n    )",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:05.045",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "influence: org.apache.spark.sql.ColumnName \u003d Longevity Influence\nmouse_fly_worm_pro_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nmouse_fly_worm_anti_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nmouse_pro_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nmouse_anti_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nfly_pro_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nfly_anti_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nworm_pro_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nworm_anti_longevity: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 14 more fields]\nlongevity: scala.collection.immutable.Map[String,scala.collection.immutable.Map[String,org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]]] \u003d Map(pro -\u003e Map(mouse -\u003e [Gene ID: int, Entrez Gene ID: int ... 14 more fields], fly -\u003e [Gene ID: int, Entrez Gene ID: int ... 14 more fields], worm -\u003e [Gene ID: int, Entrez Gene ID: int ... 14 more fields]), anti -\u003e Map(mouse -\u003e [Gene ID: int, Entrez Gene ID: int ... 14 more fields], fly -\u003e [Gene ID: int, Entrez Gene ID: int ... 14 more fields], worm -\u003e [Gene ID: int, Entrez Gene ID: int ... 14 more fields]))\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872826_-173578539",
      "id": "20180713-003220_2099121217",
      "dateCreated": "2018-07-19 17:21:12.826",
      "dateStarted": "2018-08-15 19:53:56.086",
      "dateFinished": "2018-08-15 19:55:49.437",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nLoading raw data\n----------------",
      "user": "anonymous",
      "dateUpdated": "2018-07-19 22:24:34.753",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eLoading raw data\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532020872921_19063268",
      "id": "20180719-171559_1117978875",
      "dateCreated": "2018-07-19 17:21:12.922",
      "dateStarted": "2018-07-19 22:24:34.774",
      "dateFinished": "2018-07-19 22:24:34.838",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val rawPath \u003d \"lags/raw\"\nval rawMousePath \u003d rawPath + \"/mouse\"\nval rawFlyPath \u003d rawPath + \"/fly\"\nval rawWormPath \u003d rawPath + \"/worm\"",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:09.754",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "rawPath: String \u003d lags/raw\nrawMousePath: String \u003d lags/raw/mouse\nrawFlyPath: String \u003d lags/raw/fly\nrawWormPath: String \u003d lags/raw/worm\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532021362731_1937607933",
      "id": "20180719-172922_1751807436",
      "dateCreated": "2018-07-19 17:29:22.731",
      "dateStarted": "2018-08-15 19:54:33.099",
      "dateFinished": "2018-08-15 19:56:19.352",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transcriptomes \u003d Seq(\"bowhead_liver\", \"bowhead_kidney\", \"cow\", \"gray_whale\", \"human\", \"minke_whale\", \"mouse\", \"naked_mole_rat\", \"naked_mole_rat_ensembl\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:15:08.340",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "transcriptomes: Seq[String] \u003d List(bowhead_liver, bowhead_kidney, cow, gray_whale, human, minke_whale, mouse, naked_mole_rat, naked_mole_rat_ensembl)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532106576085_813244049",
      "id": "20180720-170936_312526794",
      "dateCreated": "2018-07-20 17:09:36.085",
      "dateStarted": "2018-08-13 17:15:08.400",
      "dateFinished": "2018-08-13 17:15:08.708",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//val m \u003d \"bowhead  cow  gray_whale  human  minke_whale  mouse  NMR  NMR_ensembl_female\".split(\"  \").flatMap(v\u003d\u003e Seq( \"quant/\" + v + \"/liver/transcripts_quant/quant.sf\", \"quant/\" +v + \"/kidney/transcripts_quant/quant.sf\")).map(\"\\\"\" + _ + \"\\\"\")\n\nval quantsPathes \u003d List(\n    \"bowhead_liver\" -\u003e (\"liver\",\"quant/bowhead/liver/transcripts_quant/quant.sf\"), \n    \"bowhead_kidney\" -\u003e (\"kidney\",\"quant/bowhead/kidney/transcripts_quant/quant.sf\"), \n    \"cow\" -\u003e (\"liver\",\"quant/cow/liver/transcripts_quant/quant.sf\"), \n    \"cow\" -\u003e (\"kidney\",\"quant/cow/kidney/transcripts_quant/quant.sf\"), \n    \"gray_whale\" -\u003e (\"liver\",\"quant/gray_whale/liver/transcripts_quant/quant.sf\"), \n    \"gray_whale\" -\u003e (\"kidney\",\"quant/gray_whale/kidney/transcripts_quant/quant.sf\"), \n    \"human\" -\u003e (\"liver\",\"quant/human/liver/transcripts_quant/quant.sf\"), \n    \"human\" -\u003e (\"kidney\",\"quant/human/kidney/transcripts_quant/quant.sf\"), \n    \"minke_whale\" -\u003e (\"liver\",\"quant/minke_whale/liver/transcripts_quant/quant.sf\"), \n    \"minke_whale\" -\u003e (\"kidney\",\"quant/minke_whale/kidney/transcripts_quant/quant.sf\"), \n    \"mouse\" -\u003e (\"liver\",\"quant/mouse/liver/transcripts_quant/quant.sf\"), \n    \"mouse\" -\u003e (\"kidney\",\"quant/mouse/kidney/transcripts_quant/quant.sf\"), \n    \"naked_mole_rat\" -\u003e (\"liver\",\"quant/NMR/liver/transcripts_quant/quant.sf\"), \n    \"naked_mole_rat\" -\u003e (\"kidney\",\"quant/NMR/kidney/transcripts_quant/quant.sf\"), \n    \"naked_mole_rat_ensembl\" -\u003e (\"liver\",\"quant/NMR_ensembl_female/liver/transcripts_quant/quant.sf\"), \n    \"naked_mole_rat_ensembl\" -\u003e (\"kidney\",\"quant/NMR_ensembl_female/kidney/transcripts_quant/quant.sf\")\n    )\n    quantsPathes",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:13.125",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "quantsPathes: List[(String, (String, String))] \u003d List((bowhead_liver,(liver,quant/bowhead/liver/transcripts_quant/quant.sf)), (bowhead_kidney,(kidney,quant/bowhead/kidney/transcripts_quant/quant.sf)), (cow,(liver,quant/cow/liver/transcripts_quant/quant.sf)), (cow,(kidney,quant/cow/kidney/transcripts_quant/quant.sf)), (gray_whale,(liver,quant/gray_whale/liver/transcripts_quant/quant.sf)), (gray_whale,(kidney,quant/gray_whale/kidney/transcripts_quant/quant.sf)), (human,(liver,quant/human/liver/transcripts_quant/quant.sf)), (human,(kidney,quant/human/kidney/transcripts_quant/quant.sf)), (minke_whale,(liver,quant/minke_whale/liver/transcripts_quant/quant.sf)), (minke_whale,(kidney,quant/minke_whale/kidney/transcripts_quant/quant.sf)), (mouse,(liver,quant/mouse/liver/transcripts_quant/quant....res168: List[(String, (String, String))] \u003d List((bowhead_liver,(liver,quant/bowhead/liver/transcripts_quant/quant.sf)), (bowhead_kidney,(kidney,quant/bowhead/kidney/transcripts_quant/quant.sf)), (cow,(liver,quant/cow/liver/transcripts_quant/quant.sf)), (cow,(kidney,quant/cow/kidney/transcripts_quant/quant.sf)), (gray_whale,(liver,quant/gray_whale/liver/transcripts_quant/quant.sf)), (gray_whale,(kidney,quant/gray_whale/kidney/transcripts_quant/quant.sf)), (human,(liver,quant/human/liver/transcripts_quant/quant.sf)), (human,(kidney,quant/human/kidney/transcripts_quant/quant.sf)), (minke_whale,(liver,quant/minke_whale/liver/transcripts_quant/quant.sf)), (minke_whale,(kidney,quant/minke_whale/kidney/transcripts_quant/quant.sf)), (mouse,(liver,quant/mouse/liver/transcripts_quant/quant.sf)), ..."
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532129291492_639067023",
      "id": "20180720-232811_1679177564",
      "dateCreated": "2018-07-20 23:28:11.492",
      "dateStarted": "2018-08-15 19:55:49.854",
      "dateFinished": "2018-08-15 19:56:40.441",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def simplify \u003d udf[String, String]{ str \u003d\u003e (str.indexOf(\"|\"), str.indexOf(\".\")) match {\n    case (-1, -1) \u003d\u003e str\n    case (-1, j) \u003d\u003e str.substring(0, j)\n    case (i, -1) \u003d\u003e str.substring(0, i)\n    case (i, j) \u003d\u003e str.substring(0, j).substring(0, i)\n    \n}}\n\ndef stabilize \u003d udf[String, String]{ str \u003d\u003e str.indexOf(\".\") match {\n    case -1 \u003d\u003e str\n    case i \u003d\u003e str.substring(0, i)\n}}\n\ndef identity \u003d udf[String, String]{ str\u003d\u003e str }",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:15.946",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "simplify: org.apache.spark.sql.expressions.UserDefinedFunction\nstabilize: org.apache.spark.sql.expressions.UserDefinedFunction\nidentity: org.apache.spark.sql.expressions.UserDefinedFunction\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532132220615_-601093404",
      "id": "20180721-001700_3997581",
      "dateCreated": "2018-07-21 00:17:00.615",
      "dateStarted": "2018-08-15 19:56:19.999",
      "dateFinished": "2018-08-15 19:57:17.172",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val quants \u003d quantsPathes.map{ case (k, (o, v)) \u003d\u003e k-\u003e spark.readTSV(az(v), true).select(\"Name\", \"TPM\").withColumnRenamed(\"Name\", s\"transcript_${k}\").withColumnRenamed(\"TPM\", s\"TPM_${k}_${o}\")}\nval quantMap \u003d quants.foldLeft(Map.empty[String, DataFrame]){\n  case (acc, (k, d)) \u003d\u003e acc.get(k) match {\n    case Some(a) \u003d\u003e\n      val m \u003d a.join(d, Seq(s\"transcript_${k}\"))\n      acc.updated(k, m)\n    case None \u003d\u003e acc.updated(k, d)\n  }\n}",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:18.643",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "quants: List[(String, org.apache.spark.sql.DataFrame)] \u003d List((bowhead_liver,[transcript_bowhead_liver: string, TPM_bowhead_liver_liver: double]), (bowhead_kidney,[transcript_bowhead_kidney: string, TPM_bowhead_kidney_kidney: double]), (cow,[transcript_cow: string, TPM_cow_liver: double]), (cow,[transcript_cow: string, TPM_cow_kidney: double]), (gray_whale,[transcript_gray_whale: string, TPM_gray_whale_liver: double]), (gray_whale,[transcript_gray_whale: string, TPM_gray_whale_kidney: double]), (human,[transcript_human: string, TPM_human_liver: double]), (human,[transcript_human: string, TPM_human_kidney: double]), (minke_whale,[transcript_minke_whale: string, TPM_minke_whale_liver: double]), (minke_whale,[transcript_minke_whale: string, TPM_minke_whale_kidney: double]), (mouse,[transcr...quantMap: scala.collection.immutable.Map[String,org.apache.spark.sql.DataFrame] \u003d Map(cow -\u003e [transcript_cow: string, TPM_cow_liver: double ... 1 more field], minke_whale -\u003e [transcript_minke_whale: string, TPM_minke_whale_liver: double ... 1 more field], human -\u003e [transcript_human: string, TPM_human_liver: double ... 1 more field], naked_mole_rat -\u003e [transcript_naked_mole_rat: string, TPM_naked_mole_rat_liver: double ... 1 more field], bowhead_liver -\u003e [transcript_bowhead_liver: string, TPM_bowhead_liver_liver: double], mouse -\u003e [transcript_mouse: string, TPM_mouse_liver: double ... 1 more field], naked_mole_rat_ensembl -\u003e [transcript_naked_mole_rat_ensembl: string, TPM_naked_mole_rat_ensembl_liver: double ... 1 more field], gray_whale -\u003e [transcript_gray_whale: string, TPM_gray_whale_..."
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d582",
            "http://e198eb82c686:4040/jobs/job?id\u003d583",
            "http://e198eb82c686:4040/jobs/job?id\u003d584",
            "http://e198eb82c686:4040/jobs/job?id\u003d585",
            "http://e198eb82c686:4040/jobs/job?id\u003d586",
            "http://e198eb82c686:4040/jobs/job?id\u003d587",
            "http://e198eb82c686:4040/jobs/job?id\u003d588",
            "http://e198eb82c686:4040/jobs/job?id\u003d589",
            "http://e198eb82c686:4040/jobs/job?id\u003d590",
            "http://e198eb82c686:4040/jobs/job?id\u003d591",
            "http://e198eb82c686:4040/jobs/job?id\u003d592",
            "http://e198eb82c686:4040/jobs/job?id\u003d593",
            "http://e198eb82c686:4040/jobs/job?id\u003d594",
            "http://e198eb82c686:4040/jobs/job?id\u003d595",
            "http://e198eb82c686:4040/jobs/job?id\u003d596",
            "http://e198eb82c686:4040/jobs/job?id\u003d597",
            "http://e198eb82c686:4040/jobs/job?id\u003d598",
            "http://e198eb82c686:4040/jobs/job?id\u003d599",
            "http://e198eb82c686:4040/jobs/job?id\u003d600",
            "http://e198eb82c686:4040/jobs/job?id\u003d601",
            "http://e198eb82c686:4040/jobs/job?id\u003d602",
            "http://e198eb82c686:4040/jobs/job?id\u003d603",
            "http://e198eb82c686:4040/jobs/job?id\u003d604",
            "http://e198eb82c686:4040/jobs/job?id\u003d605",
            "http://e198eb82c686:4040/jobs/job?id\u003d606",
            "http://e198eb82c686:4040/jobs/job?id\u003d607",
            "http://e198eb82c686:4040/jobs/job?id\u003d608",
            "http://e198eb82c686:4040/jobs/job?id\u003d609",
            "http://e198eb82c686:4040/jobs/job?id\u003d610",
            "http://e198eb82c686:4040/jobs/job?id\u003d611",
            "http://e198eb82c686:4040/jobs/job?id\u003d612",
            "http://e198eb82c686:4040/jobs/job?id\u003d613"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532132380803_1202925363",
      "id": "20180721-001940_406437846",
      "dateCreated": "2018-07-21 00:19:40.803",
      "dateStarted": "2018-08-15 19:56:41.066",
      "dateFinished": "2018-08-15 20:01:03.593",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def getPathes(species: String, sufix: String) \u003d {\n\tMap(\n\t\"bowhead_liver\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_bowhead_alaska_liver.blast6\",\n\t\"bowhead_kidney\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_bowhead_greenland_kidney.blast6\",\n\t\"cow\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_cow.blast6\",\n\t\"gray_whale\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_gray_whale.blast6\",\n\t\"human\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_human.blast6\",\n\t\"minke_whale\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_minky_whale.blast6\",\n\t\"mouse\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_mouse.blast6\",\n\t\"naked_mole_rat\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_naked_mole_rat.blast6\",\n\t\"naked_mole_rat_ensembl\" -\u003e s\"${rawPath}/${species}/${sufix}/${species}_${sufix}_longevity_naked_mole_rat_ensembl.blast6\"\n\t)\n}",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:20.623",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "getPathes: (species: String, sufix: String)scala.collection.immutable.Map[String,String]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532039269706_1475360128",
      "id": "20180719-222749_1394269934",
      "dateCreated": "2018-07-19 22:27:49.706",
      "dateStarted": "2018-08-15 19:57:17.639",
      "dateFinished": "2018-08-15 20:01:06.569",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val pro_mouse_pathes \u003d getPathes(\"mouse\", \"pro\")\nval pro_fly_pathes \u003d getPathes(\"fly\", \"pro\")\nval pro_worm_pathes \u003d getPathes(\"worm\", \"pro\")\n\nval anti_mouse_pathes \u003d getPathes(\"mouse\", \"anti\")\nval anti_fly_pathes \u003d getPathes(\"fly\", \"anti\")\nval anti_worm_pathes \u003d getPathes(\"worm\", \"anti\")\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:24.029",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "pro_mouse_pathes: scala.collection.immutable.Map[String,String] \u003d Map(cow -\u003e lags/raw/mouse/pro/mouse_pro_longevity_cow.blast6, minke_whale -\u003e lags/raw/mouse/pro/mouse_pro_longevity_minky_whale.blast6, human -\u003e lags/raw/mouse/pro/mouse_pro_longevity_human.blast6, naked_mole_rat -\u003e lags/raw/mouse/pro/mouse_pro_longevity_naked_mole_rat.blast6, bowhead_liver -\u003e lags/raw/mouse/pro/mouse_pro_longevity_bowhead_alaska_liver.blast6, mouse -\u003e lags/raw/mouse/pro/mouse_pro_longevity_mouse.blast6, naked_mole_rat_ensembl -\u003e lags/raw/mouse/pro/mouse_pro_longevity_naked_mole_rat_ensembl.blast6, gray_whale -\u003e lags/raw/mouse/pro/mouse_pro_longevity_gray_whale.blast6, bowhead_kidney -\u003e lags/raw/mouse/pro/mouse_pro_longevity_bowhead_greenland_kidney.blast6)\npro_fly_pathes: scala.collection.immutable.Map[String,String] \u003d Map(cow -\u003e lags/raw/fly/pro/fly_pro_longevity_cow.blast6, minke_whale -\u003e lags/raw/fly/pro/fly_pro_longevity_minky_whale.blast6, human -\u003e lags/raw/fly/pro/fly_pro_longevity_human.blast6, naked_mole_rat -\u003e lags/raw/fly/pro/fly_pro_longevity_naked_mole_rat.blast6, bowhead_liver -\u003e lags/raw/fly/pro/fly_pro_longevity_bowhead_alaska_liver.blast6, mouse -\u003e lags/raw/fly/pro/fly_pro_longevity_mouse.blast6, naked_mole_rat_ensembl -\u003e lags/raw/fly/pro/fly_pro_longevity_naked_mole_rat_ensembl.blast6, gray_whale -\u003e lags/raw/fly/pro/fly_pro_longevity_gray_whale.blast6, bowhead_kidney -\u003e lags/raw/fly/pro/fly_pro_longevity_bowhead_greenland_kidney.blast6)\npro_worm_pathes: scala.collection.immutable.Map[String,String] \u003d Map(cow -\u003e lags/raw/worm/pro/worm_pro_longevity_cow.blast6, minke_whale -\u003e lags/raw/worm/pro/worm_pro_longevity_minky_whale.blast6, human -\u003e lags/raw/worm/pro/worm_pro_longevity_human.blast6, naked_mole_rat -\u003e lags/raw/worm/pro/worm_pro_longevity_naked_mole_rat.blast6, bowhead_liver -\u003e lags/raw/worm/pro/worm_pro_longevity_bowhead_alaska_liver.blast6, mouse -\u003e lags/raw/worm/pro/worm_pro_longevity_mouse.blast6, naked_mole_rat_ensembl -\u003e lags/raw/worm/pro/worm_pro_longevity_naked_mole_rat_ensembl.blast6, gray_whale -\u003e lags/raw/worm/pro/worm_pro_longevity_gray_whale.blast6, bowhead_kidney -\u003e lags/raw/worm/pro/worm_pro_longevity_bowhead_greenland_kidney.blast6)\nanti_mouse_pathes: scala.collection.immutable.Map[String,String] \u003d Map(cow -\u003e lags/raw/mouse/anti/mouse_anti_longevity_cow.blast6, minke_whale -\u003e lags/raw/mouse/anti/mouse_anti_longevity_minky_whale.blast6, human -\u003e lags/raw/mouse/anti/mouse_anti_longevity_human.blast6, naked_mole_rat -\u003e lags/raw/mouse/anti/mouse_anti_longevity_naked_mole_rat.blast6, bowhead_liver -\u003e lags/raw/mouse/anti/mouse_anti_longevity_bowhead_alaska_liver.blast6, mouse -\u003e lags/raw/mouse/anti/mouse_anti_longevity_mouse.blast6, naked_mole_rat_ensembl -\u003e lags/raw/mouse/anti/mouse_anti_longevity_naked_mole_rat_ensembl.blast6, gray_whale -\u003e lags/raw/mouse/anti/mouse_anti_longevity_gray_whale.blast6, bowhead_kidney -\u003e lags/raw/mouse/anti/mouse_anti_longevity_bowhead_greenland_kidney.blast6)\nanti_fly_pathes: scala.collection.immutable.Map[String,String] \u003d Map(cow -\u003e lags/raw/fly/anti/fly_anti_longevity_cow.blast6, minke_whale -\u003e lags/raw/fly/anti/fly_anti_longevity_minky_whale.blast6, human -\u003e lags/raw/fly/anti/fly_anti_longevity_human.blast6, naked_mole_rat -\u003e lags/raw/fly/anti/fly_anti_longevity_naked_mole_rat.blast6, bowhead_liver -\u003e lags/raw/fly/anti/fly_anti_longevity_bowhead_alaska_liver.blast6, mouse -\u003e lags/raw/fly/anti/fly_anti_longevity_mouse.blast6, naked_mole_rat_ensembl -\u003e lags/raw/fly/anti/fly_anti_longevity_naked_mole_rat_ensembl.blast6, gray_whale -\u003e lags/raw/fly/anti/fly_anti_longevity_gray_whale.blast6, bowhead_kidney -\u003e lags/raw/fly/anti/fly_anti_longevity_bowhead_greenland_kidney.blast6)\nanti_worm_pathes: scala.collection.immutable.Map[String,String] \u003d Map(cow -\u003e lags/raw/worm/anti/worm_anti_longevity_cow.blast6, minke_whale -\u003e lags/raw/worm/anti/worm_anti_longevity_minky_whale.blast6, human -\u003e lags/raw/worm/anti/worm_anti_longevity_human.blast6, naked_mole_rat -\u003e lags/raw/worm/anti/worm_anti_longevity_naked_mole_rat.blast6, bowhead_liver -\u003e lags/raw/worm/anti/worm_anti_longevity_bowhead_alaska_liver.blast6, mouse -\u003e lags/raw/worm/anti/worm_anti_longevity_mouse.blast6, naked_mole_rat_ensembl -\u003e lags/raw/worm/anti/worm_anti_longevity_naked_mole_rat_ensembl.blast6, gray_whale -\u003e lags/raw/worm/anti/worm_anti_longevity_gray_whale.blast6, bowhead_kidney -\u003e lags/raw/worm/anti/worm_anti_longevity_bowhead_greenland_kidney.blast6)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532039495844_1158281229",
      "id": "20180719-223135_1425933492",
      "dateCreated": "2018-07-19 22:31:35.844",
      "dateStarted": "2018-08-15 20:01:03.814",
      "dateFinished": "2018-08-15 20:01:13.280",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nMaking and deduplicating transcripts aligments\n----------------------------------",
      "user": "anonymous",
      "dateUpdated": "2018-07-25 22:39:00.659",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eMaking and deduplicating transcripts aligments\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532558213714_-1036258034",
      "id": "20180725-223653_831412162",
      "dateCreated": "2018-07-25 22:36:53.714",
      "dateStarted": "2018-07-25 22:39:00.659",
      "dateFinished": "2018-07-25 22:39:00.664",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def reduceByMax(df: DataFrame, key: String, maximize: String)(implicit sparkSession: SparkSession) \u003d {\n  import sparkSession.implicits._\n  val schema \u003d df.schema\n  import org.apache.spark.sql.catalyst.encoders.RowEncoder\n  val encoder \u003d RowEncoder(schema)\n  df.groupByKey(row\u003d\u003erow.getAs[String](key)).reduceGroups {\n    (a, b) \u003d\u003e if(a.getAs[Double](maximize) \u003e b.getAs[Double](maximize)) a else b\n  }.map(_._2)(encoder)\n}\n    ",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:26.893",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "reduceByMax: (df: org.apache.spark.sql.DataFrame, key: String, maximize: String)(implicit sparkSession: org.apache.spark.sql.SparkSession)org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532471580179_-1097625511",
      "id": "20180724-223300_962842267",
      "dateCreated": "2018-07-24 22:33:00.179",
      "dateStarted": "2018-08-15 20:01:08.282",
      "dateFinished": "2018-08-15 20:01:17.152",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def makeAligment(genAgeSpecies: String, sufix: String, species: String, quantsMap: Map[String, DataFrame]) \u003d {\n    val needs_stabilization \u003d Set(\"mouse\", \"human\")\n    val path \u003d  getPathes(genAgeSpecies, sufix)(species)\n    val conv \u003d conversions(genAgeSpecies)\n    val long \u003d longevity(sufix)(genAgeSpecies)    \n    val columns \u003d List(\"Ensembl ID\", \"transcript\", \"identity\", \"aligment_length\", \"mismatches\", \"gaps\", \"start_query\", \"end_query\", \"start_target\", \"end_target\", \"c10\", \"c11\") //last two non valid\n    val search_results \u003d spark.readTSV(az(path), headers\u003dfalse).toDF(columns:_*)\n    val search_results_no_transcript_dup \u003d search_results.reduceByMax(\"transcript\", \"identity\")(spark)\n    val search_results_cleaned \u003d search_results_no_transcript_dup.reduceByMax(\"Ensembl ID\", \"identity\")(spark)\n    val toRename  \u003d List(\"transcript\", \"identity\")\n    val t_name \u003d s\"transcript_${species}\"\n    val renaming \u003d toRename.map(r\u003d\u003e r-\u003e s\"${r}_${species}\").toMap\n    val gCols \u003d List(\"xref\", \"gene_stable_id\", \"protein_stable_id\", \"transcript_stable_id\") ++ toRename //, \"aligment_length\", \"mismatches\", \"gaps\")\n    val stable \u003d if(needs_stabilization.contains(genAgeSpecies)) search_results_cleaned.withColumn(\"transcript_stable_id\", simplify($\"Ensembl ID\")) else search_results_cleaned.withColumnRenamed(\"Ensembl ID\", \"transcript_stable_id\")\n    val g \u003d stable.join(conv, Seq(\"transcript_stable_id\")).select(gCols.head, gCols.tail:_*).rename(renaming).withColumnRenamed(\"xref\", \"Entrez Gene ID\")\n    val gq \u003d g.join(quantsMap(species), Seq(t_name))\n    long.select(\"Entrez Gene ID\", \"Gene Name\").distinct.join(gq, Seq(\"Entrez Gene ID\"))//.persist(StorageLevel.MEMORY_AND_DISK)\n}\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:29.827",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "gene_stable_id": "string",
                      "transcript_stable_id": "string",
                      "protein_stable_id": "string",
                      "xref": "string",
                      "db_name": "string",
                      "info_type": "string",
                      "source_identity": "string",
                      "xref_identity": "string",
                      "linkage_type": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "makeAligment: (genAgeSpecies: String, sufix: String, species: String, quantsMap: Map[String,org.apache.spark.sql.DataFrame])org.apache.spark.sql.DataFrame\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532084331476_1375128276",
      "id": "20180720-105851_2108419397",
      "dateCreated": "2018-07-20 10:58:51.476",
      "dateStarted": "2018-08-15 20:01:13.954",
      "dateFinished": "2018-08-15 20:01:19.630",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def joinDataFrames(dfs: Seq[DataFrame], fields: Seq[String], joinType: String \u003d \"inner\"): DataFrame \u003d {\n  dfs.reduce((a, b)\u003d\u003e a.join(b, fields, joinType))\n}\nval joinFields \u003d Seq(\"Entrez Gene ID\", \"gene_stable_id\", \"protein_stable_id\", \"transcript_stable_id\", \"Gene Name\")\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 19:51:33.329",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "joinDataFrames: (dfs: Seq[org.apache.spark.sql.DataFrame], fields: Seq[String], joinType: String)org.apache.spark.sql.DataFrame\njoinFields: Seq[String] \u003d List(Entrez Gene ID, gene_stable_id, protein_stable_id, transcript_stable_id, Gene Name)\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532109434778_1075606875",
      "id": "20180720-175714_950030530",
      "dateCreated": "2018-07-20 17:57:14.778",
      "dateStarted": "2018-08-15 20:01:17.922",
      "dateFinished": "2018-08-15 20:01:22.774",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val t_now \u003d spark.readTSV(az(\"lags/by_transcripts/transcripts_aligments_anti_longevity_mouse.tsv\"), true)\nz.show(t_now.where($\"Entrez Gene ID\" \u003d\u003d\u003d 17319))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 20:38:49.231",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Entrez Gene ID": "string",
                      "gene_stable_id": "string",
                      "protein_stable_id": "string",
                      "transcript_stable_id": "string",
                      "Gene Name": "string",
                      "transcript_bowhead_liver": "string",
                      "identity_bowhead_liver": "string",
                      "TPM_bowhead_liver_liver": "string",
                      "transcript_bowhead_kidney": "string",
                      "identity_bowhead_kidney": "string",
                      "TPM_bowhead_kidney_kidney": "string",
                      "transcript_cow": "string",
                      "identity_cow": "string",
                      "TPM_cow_liver": "string",
                      "TPM_cow_kidney": "string",
                      "transcript_gray_whale": "string",
                      "identity_gray_whale": "string",
                      "TPM_gray_whale_liver": "string",
                      "TPM_gray_whale_kidney": "string",
                      "transcript_human": "string",
                      "identity_human": "string",
                      "TPM_human_liver": "string",
                      "TPM_human_kidney": "string",
                      "transcript_minke_whale": "string",
                      "identity_minke_whale": "string",
                      "TPM_minke_whale_liver": "string",
                      "TPM_minke_whale_kidney": "string",
                      "transcript_mouse": "string",
                      "identity_mouse": "string",
                      "TPM_mouse_liver": "string",
                      "TPM_mouse_kidney": "string",
                      "transcript_naked_mole_rat": "string",
                      "identity_naked_mole_rat": "string",
                      "TPM_naked_mole_rat_liver": "string",
                      "TPM_naked_mole_rat_kidney": "string",
                      "transcript_naked_mole_rat_ensembl": "string",
                      "identity_naked_mole_rat_ensembl": "string",
                      "TPM_naked_mole_rat_ensembl_liver": "string",
                      "TPM_naked_mole_rat_ensembl_kidney": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "t_now: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\n"
          },
          {
            "type": "TABLE",
            "data": "Entrez Gene ID\tgene_stable_id\tprotein_stable_id\ttranscript_stable_id\tGene Name\ttranscript_bowhead_liver\tidentity_bowhead_liver\tTPM_bowhead_liver_liver\ttranscript_bowhead_kidney\tidentity_bowhead_kidney\tTPM_bowhead_kidney_kidney\ttranscript_cow\tidentity_cow\tTPM_cow_liver\tTPM_cow_kidney\ttranscript_gray_whale\tidentity_gray_whale\tTPM_gray_whale_liver\tTPM_gray_whale_kidney\ttranscript_human\tidentity_human\tTPM_human_liver\tTPM_human_kidney\ttranscript_minke_whale\tidentity_minke_whale\tTPM_minke_whale_liver\tTPM_minke_whale_kidney\ttranscript_mouse\tidentity_mouse\tTPM_mouse_liver\tTPM_mouse_kidney\ttranscript_naked_mole_rat\tidentity_naked_mole_rat\tTPM_naked_mole_rat_liver\tTPM_naked_mole_rat_kidney\ttranscript_naked_mole_rat_ensembl\tidentity_naked_mole_rat_ensembl\tTPM_naked_mole_rat_ensembl_liver\tTPM_naked_mole_rat_ensembl_kidney\n17319\tENSMUSG00000033307\tENSMUSP00000041149\tENSMUST00000038169\tmacrophage migration inhibitory factor\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tc62271_g1_i1\t72.6\t271.637306\t406.484137\tENST00000215754.7|ENSG00000240972.1|OTTHUMG00000150773.2|OTTHUMT00000320009.1|AP000348.6-001|MIF|939|protein_coding|\t74.7\t9.609251\t16.636498\tnull\tnull\tnull\tnull\tENSMUST00000038169.7|ENSMUSG00000033307.7|OTTMUSG00000065092.1|OTTMUST00000158628.1|RP23-333M15.11-001|Mif|544|protein_coding|\t100.0\t241.5132\t634.575036\tnull\tnull\tnull\tnull\tENSHGLT00000027136.1\t74.7\t4.902899\t7.843963\n17319\tENSMUSG00000033307\t-\tENSMUST00000218267\tmacrophage migration inhibitory factor\tnull\tnull\tnull\tnull\tnull\tnull\tENSBTAT00000066051.1\t47.5\t0.739392\t3.881121\tc16256_g1_i1\t46.8\t14.294486\t6.302412\tENST00000334370.8|ENSG00000105429.12|OTTHUMG00000150342.2|OTTHUMT00000317695.1|AC011497.5-001|MEGF8|10966|protein_coding|\t45.7\t0.020809\t0.264352\tXM_007187686.1\t46.0\t3.694338\t0.0\tENSMUST00000218267.1|ENSMUSG00000033307.7|OTTMUSG00000065092.1|OTTMUST00000158629.1|RP23-333M15.11-002|Mif|600|retained_intron|\t100.0\t1.570399\t2.302301\tGEBF01006199.1\t46.4\t11.863401\t3.762961\tnull\tnull\tnull\tnull\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d573",
            "http://e198eb82c686:4040/jobs/job?id\u003d574",
            "http://e198eb82c686:4040/jobs/job?id\u003d575"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1534192523365_1277774665",
      "id": "20180813-203523_939183011",
      "dateCreated": "2018-08-13 20:35:23.365",
      "dateStarted": "2018-08-13 20:38:49.290",
      "dateFinished": "2018-08-13 20:38:50.207",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val now \u003d spark.readTSV(az(\"lags/by_genes/genes_anti_longevity_mouse.tsv\"), true).select($\"Entrez Gene ID\", $\"max(identity_bowhead_liver)\".alias(\"identity_bowhead_liver_new\"),\n  $\"max(identity_gray_whale)\".alias(\"identity_gray_whale_new\"))\nval past \u003d spark.readTSV(az(\"lags/by_genes_old/genes_anti_longevity_mouse.tsv\"), true).select($\"Entrez Gene ID\", $\"max(identity_bowhead_liver)\".alias(\"identity_bowhead_liver_old\"),\n  $\"max(identity_gray_whale)\".alias(\"identity_gray_whale_old\"))\n  val all \u003d now.join(past, \"Entrez Gene ID\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 20:32:38.586",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "now: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, identity_bowhead_liver_new: double ... 1 more field]\npast: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, identity_bowhead_liver_old: double ... 1 more field]\nall: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, identity_bowhead_liver_new: double ... 3 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d560",
            "http://e198eb82c686:4040/jobs/job?id\u003d561",
            "http://e198eb82c686:4040/jobs/job?id\u003d562",
            "http://e198eb82c686:4040/jobs/job?id\u003d563"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1534191626314_-530052596",
      "id": "20180813-202026_445721976",
      "dateCreated": "2018-08-13 20:20:26.314",
      "dateStarted": "2018-08-13 20:32:38.650",
      "dateFinished": "2018-08-13 20:32:39.840",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "z.show(all)",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 20:32:49.582",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Entrez Gene ID": "string",
                      "identity_bowhead_liver_new": "string",
                      "identity_gray_whale_new": "string",
                      "identity_bowhead_liver_old": "string",
                      "identity_gray_whale_old": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Entrez Gene ID\tidentity_bowhead_liver_new\tidentity_gray_whale_new\tidentity_bowhead_liver_old\tidentity_gray_whale_old\n625249\tnull\t82.7\tnull\t82.7\n13860\t48.9\t80.8\t48.9\t80.8\n17319\tnull\t72.6\t46.4\t46.8\n13350\t47.2\t76.0\t47.2\t46.7\n20930\tnull\t75.6\tnull\t75.6\n16905\t87.0\t87.0\t87.0\t48.5\n20416\t85.7\t90.7\t46.8\t90.3\n27223\t88.0\t80.8\t88.0\t80.8\n11651\t45.1\t83.3\t45.1\t83.3\n11607\tnull\t67.8\t47.0\t67.8\n17869\t47.1\t87.0\t45.6\t48.7\n14600\t46.9\t76.3\t46.9\t76.3\n16000\t47.7\t76.9\tnull\t45.0\n12575\tnull\t72.7\tnull\t72.7\n21750\t83.5\t78.3\t83.5\t78.3\n13019\t47.6\t64.8\tnull\t64.8\n18627\t49.8\t51.5\t49.8\t51.5\n16150\tnull\t79.0\tnull\t46.9\n12850\tnull\t71.3\tnull\t71.3\n19127\tnull\t48.0\tnull\t48.0\n24108\tnull\t45.1\tnull\tnull\n56717\t86.5\t89.9\tnull\t45.0\n72508\t76.3\t85.5\t76.3\t85.5\n16337\t46.8\t83.8\tnull\t83.8\n19088\t69.8\t79.0\tnull\t79.0\n105837\tnull\t46.9\tnull\t46.6\n16001\tnull\t87.6\tnull\tnull\n15194\tnull\t45.9\tnull\t45.9\n66143\tnull\tnull\tnull\tnull\n17700\tnull\tnull\tnull\tnull\n14599\tnull\tnull\tnull\tnull\n18736\tnull\tnull\tnull\tnull\n14602\tnull\tnull\tnull\tnull\n18787\tnull\tnull\tnull\tnull\n208691\tnull\tnull\tnull\tnull\n55961\tnull\tnull\tnull\tnull\n193034\tnull\tnull\tnull\tnull\n11548\t89.3\tnull\t89.3\tnull\n384783\tnull\tnull\tnull\tnull\n224129\tnull\tnull\tnull\tnull\n16491\tnull\tnull\tnull\tnull\n16367\tnull\tnull\tnull\tnull\n18491\tnull\tnull\tnull\tnull\n14860\tnull\tnull\tnull\tnull\n14601\tnull\tnull\tnull\t47.0\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d564",
            "http://e198eb82c686:4040/jobs/job?id\u003d565"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1534192362735_182847189",
      "id": "20180813-203242_552400556",
      "dateCreated": "2018-08-13 20:32:42.735",
      "dateStarted": "2018-08-13 20:32:46.015",
      "dateFinished": "2018-08-13 20:32:46.752",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "z.show(past)",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 20:22:48.368",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Entrez Gene ID": "string",
                      "Gene ID": "string",
                      "Gene Symbol": "string",
                      "Organism": "string",
                      "Lifespan Effects": "string",
                      "Methods": "string",
                      "max(Max Lifespan Change)": "string",
                      "avg(Avg Lifespan Change)": "string",
                      "gene_stable_id": "string",
                      "Gene Name": "string",
                      "max(identity_bowhead_liver)": "string",
                      "sum(TPM_bowhead_liver_liver)": "string",
                      "max(identity_bowhead_kidney)": "string",
                      "sum(TPM_bowhead_kidney_kidney)": "string",
                      "max(identity_cow)": "string",
                      "sum(TPM_cow_liver)": "string",
                      "sum(TPM_cow_kidney)": "string",
                      "max(identity_gray_whale)": "string",
                      "sum(TPM_gray_whale_liver)": "string",
                      "sum(TPM_gray_whale_kidney)": "string",
                      "max(identity_human)": "string",
                      "sum(TPM_human_liver)": "string",
                      "sum(TPM_human_kidney)": "string",
                      "max(identity_minke_whale)": "string",
                      "sum(TPM_minke_whale_liver)": "string",
                      "sum(TPM_minke_whale_kidney)": "string",
                      "max(identity_mouse)": "string",
                      "sum(TPM_mouse_liver)": "string",
                      "sum(TPM_mouse_kidney)": "string",
                      "max(identity_naked_mole_rat)": "string",
                      "sum(TPM_naked_mole_rat_liver)": "string",
                      "sum(TPM_naked_mole_rat_kidney)": "string",
                      "max(identity_naked_mole_rat_ensembl)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_liver)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_kidney)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Entrez Gene ID\tGene ID\tGene Symbol\tOrganism\tLifespan Effects\tMethods\tmax(Max Lifespan Change)\tavg(Avg Lifespan Change)\tgene_stable_id\tGene Name\tmax(identity_bowhead_liver)\tsum(TPM_bowhead_liver_liver)\tmax(identity_bowhead_kidney)\tsum(TPM_bowhead_kidney_kidney)\tmax(identity_cow)\tsum(TPM_cow_liver)\tsum(TPM_cow_kidney)\tmax(identity_gray_whale)\tsum(TPM_gray_whale_liver)\tsum(TPM_gray_whale_kidney)\tmax(identity_human)\tsum(TPM_human_liver)\tsum(TPM_human_kidney)\tmax(identity_minke_whale)\tsum(TPM_minke_whale_liver)\tsum(TPM_minke_whale_kidney)\tmax(identity_mouse)\tsum(TPM_mouse_liver)\tsum(TPM_mouse_kidney)\tmax(identity_naked_mole_rat)\tsum(TPM_naked_mole_rat_liver)\tsum(TPM_naked_mole_rat_kidney)\tmax(identity_naked_mole_rat_ensembl)\tsum(TPM_naked_mole_rat_ensembl_liver)\tsum(TPM_naked_mole_rat_ensembl_kidney)\n625249\t324\tGpx4\tMus musculus\tincrease\tKnockout\tnull\t7.0\tENSMUSG00000075706\tGlutathione peroxidase 4\tnull\tnull\t46.8\t9.8E-5\t50.9\t110.570779\t0.216422\t82.7\t528.062006\t539.646787\t50.7\t1.7317010000000002\t1.3173709999999998\t49.5\t19.886822000000002\t7.645913999999999\t100.0\t280.953834\t1221.990525\t49.0\t108.119451\t38.293241\t49.5\t9.032435\t40.706657\n20930\t637\tSurf1\tMus musculus\tincrease\t2368: Dell\u0027agnello et al. (2007) \"Increased longevity and refractoriness to Ca(2+)-dependent neurodegeneration in Surf1 knockout mice.\"  Hum. Mol. Genet. 16(4):431-444 (17210671)\tnull\t20.0\tENSMUSG00000015790\tsurfeit gene 1\tnull\tnull\t48.3\t0.817469\t47.4\t9.856375\t59.053421\t75.6\t76.538093\t83.79469499999999\t48.0\t0.19575\t0.7503340000000001\t47.1\t0.960699\t14.401616\t100.0\t32.531253\t48.12339399999999\t49.4\t71.15754\t16.127233\t47.0\t4.232172\t2.1314699999999998\n13019\t1877\tCtf1\tMus musculus\tincrease\tKnockout\tnull\t18.0\tENSMUSG00000042340\tcardiotrophin 1\tnull\tnull\t45.8\t0.0\t48.8\t10.051775\t14.888583999999998\t64.8\t70.81533\t8.814582\t51.6\t0.036301\t0.262385\t49.0\t0.968745\t3.167579\t100.0\t4.765079\t5.714068\t48.8\t72.676927\t21.355141\t49.4\t9.656027000000002\t3.436178\n11651\t1810\tAkt1\tMus musculus\tincrease\tGenetic reduction\tnull\t11.5\tENSMUSG00000001729\tthymoma viral proto-oncogene 1\t45.1\t0.717338\t81.4\t3.552225\t82.0\t61.586979\t152.932086\t83.3\t68.868705\t79.44529800000001\t83.6\t0.6072919999999999\t1.446606\t79.0\t27.838819\t86.530598\t100.0\t29.191048\t40.07278600000001\t83.1\t366.411696\t90.626763\t83.1\t37.568743\t13.948149\n16905\t415\tLmna\tMus musculus\tdecrease || decrease || increase\tKnockout || Mutation || Mutation\tnull\t48.0\tENSMUSG00000028063\tlamin A\t87.0\t2.69837\t85.0\t3.025744\t87.8\t27.708044\t94.04622\t48.5\t47.653442000000005\t0.117407\t87.3\t1.449861\t2.00002\t85.1\t36.704715\t112.55356400000001\t100.0\t12.37613\t7.6839960000000005\t47.4\t273.97599399999996\t1.944421\t89.1\t32.639212\t68.38512200000001\n13350\t1797\tDgat1\tMus musculus\tincrease\tKnockout\t8\t23.0\tENSMUSG00000022555\tdiacylglycerol O-acyltransferase 1\t47.2\t0.0\tnull\tnull\t70.9\t33.061355999999996\t35.036675\t46.7\t45.86183200000001\t39.697689999999994\t47.2\t0.018088\t0.216451\t47.1\t9.309908\t38.174981\t100.0\t16.736531\t26.091837\t48.2\t86.766827\t34.875679\t73.8\t20.42933\t39.241969000000005\n11607\t811\tAgtr1a\tMus musculus\tincrease\tKnockout\t24\t26.0\tENSMUSG00000049115\tAngiotensin II receptor, type 1a\t47.0\t0.0\t46.4\t1.249951\t47.8\t0.678215\t3.047325\t67.8\t23.766944000000002\t97.869727\t47.6\t0.580897\t3.777879\tnull\tnull\tnull\t100.0\t42.78779\t26.643817000000002\t45.6\t80.08192700000001\t31.350312\t47.8\t4.395829\t1.241633\n13860\t817\tEps8\tMus musculus\tincrease\tDeletion\t9\t37.0\tENSMUSG00000015766\tEpidermal growth factor receptor pathway substrate 8\t48.9\t0.0\t47.7\t0.8864500000000001\t84.0\t38.392202\t71.232413\t80.8\t22.101457000000003\t85.87435099999999\t83.4\t0.207742\t1.3552129999999998\t50.8\t1.077003\t0.7136210000000001\t100.0\t0.632892\t45.34612400000001\t83.3\t523.888184\t52.225421\t83.4\t25.047399000000002\t5.521021\n20416\t601\tShc1\tMus musculus\tincrease || no change\tKnockout || Knockout\tnull\t30.0\tENSMUSG00000042626\tSHC (Src homology 2 domain containing) transforming protein 1\t46.8\t0.073819\tnull\tnull\t85.9\t30.052826\t48.6389\t90.3\t21.586982000000003\t28.140106\t92.5\t0.08572\t0.572925\t85.2\t15.82673\t28.77791\t100.0\t13.668911000000001\t23.229255\t83.8\t87.342945\t49.181756\t83.8\t11.522687\t7.607579\n17319\t1796\tMif\tMus musculus\tincrease\tKnockout\tnull\t16.0\tENSMUSG00000033307\tmacrophage migration inhibitory factor\t46.4\t0.0531277\tnull\tnull\tnull\tnull\tnull\t46.8\t20.076822999999997\t17.093989\t74.7\t9.881906\t17.456999\t46.8\t4.186714\t0.135482\t100.0\t243.08359900000002\t636.8773369999999\t46.4\t11.863401\t3.762961\t74.7\t4.902899\t7.843963\n17869\t1876\tMyc\tMus musculus\tincrease\tMutation\tnull\t21.0\tENSMUSG00000022346\tmyelocytomatosis oncogene\t45.6\t4.08391E-10\tnull\tnull\t85.3\t13.141404\t24.852391\t48.7\t13.891264\t61.028935\t87.6\t6.383216999999999\t1.9821149999999998\tnull\tnull\tnull\t100.0\t0.639001\t1.328144\t47.1\t14.942636\t3.403664\t83.9\t17.269369\t23.443458\n14600\t302\tGhr\tMus musculus\tincrease\tKnockout\tnull\t40.0\tENSMUSG00000055737\tGrowth hormone receptor\t46.9\t9.85986E-11\t45.2\t9.8E-5\t46.2\t3.688503\t2.869975\t76.3\t12.341831\t23.372892\t47.2\t1.433486\t3.528886\tnull\tnull\tnull\t100.0\t218.11753\t397.5554999999999\t47.5\t7.277541\t7.929524\t46.2\t1.639514\t0.606521\n12575\t109\tCdkn1a\tMus musculus\tincrease\tDeletion\tnull\tnull\tENSMUSG00000023067\tCyclin-dependent kinase inhibitor 1A\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t72.7\t10.858854\t14.601308\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t10.360874\t3.026456\tnull\tnull\tnull\tnull\tnull\tnull\n27223\t830\tTrp53bp1\tMus musculus\tincrease\tDeletion in the BRCA1 mutant background\tnull\tnull\tENSMUSG00000043909\tTransformation related protein 53 binding protein 1\t88.0\t0.137577\t81.1\t9.0E-6\t86.9\t47.232879000000004\t66.481635\t80.8\t9.769145\t9.063435\t89.9\t0.274488\t2.500965\t87.7\t0.7349509999999999\t4.567372\t100.0\t1.8745539999999998\t9.498386\t85.9\t214.303567\t43.514366\t85.9\t15.121203000000001\t4.321746\n21750\t671\tTerf2\tMus musculus\tdecrease\tOverexpression\tnull\tnull\tENSMUSG00000031921\ttelomeric repeat binding factor 2\t83.5\t0.0\t48.7\t0.051814\t73.0\t16.708584000000002\t41.252258000000005\t78.3\t7.949317\t18.94538\t47.5\t42.993781\t2.873344\t48.7\t0.251761\t1.459655\t100.0\t4.827671\t9.786572\t49.4\t31.256118999999998\t10.175704\t84.8\t68.823112\t1.127286\n18627\t2162\tPer2\tMus musculus\tincrease\tDeletion\tnull\tnull\tENSMUSG00000055866\tperiod circadian clock 2\t49.8\t4.70967E-4\t48.9\t1.362538\t51.2\t22.16791\t44.758578\t51.5\t6.943576\t12.022559\t80.5\t0.490972\t0.487032\t51.1\t0.0\t3.955174\t100.0\t7.227437\t8.496579\t53.2\t40.80375\t5.286542\t51.4\t0.166161\t0.096006\n16150\t1811\tIkbkb\tMus musculus\tincrease\tKnockout\tnull\t23.0\tENSMUSG00000031537\tinhibitor of kappaB kinase beta\tnull\tnull\tnull\tnull\t78.0\t21.133656\t25.214443\t46.9\t5.372097\t8.637331\t81.0\t0.0\t0.0\t47.0\t0.169248\t6.145885\t100.0\t24.146324999999997\t20.920929\t81.0\t68.034345\t27.835458\t81.0\t22.970902\t13.639195\n12850\t136\tCoq7\tMus musculus\tincrease || increase\tKnockout || Transgenic\t20\t26.5\tENSMUSG00000030652\tdemethyl-Q 7\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t71.3\t5.239896\t15.864949\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t14.9582\t60.123342\tnull\tnull\tnull\tnull\tnull\tnull\n19127\t519\tProp1\tMus musculus\tincrease\tKnockout\tnull\tnull\tENSMUSG00000044542\tProphet of Pit1, paired-like homeodomain transcription factor\tnull\tnull\t46.6\t0.0\t47.5\t4.606453\t2.689914\t48.0\t5.131785\t9.466543\t48.1\t0.075497\t0.438262\t48.3\t1.198674\t5.356954\t100.0\t0.0\t0.0\t47.6\t3.542269\t17.677369\t47.0\t18.127837999999997\t9.281114\n105837\t2144\tMtbp\tMus musculus\tincrease\tDeletion\tnull\t20.0\tENSMUSG00000022369\tMdm2, transformed 3T3 cell double minute p53 binding protein\tnull\tnull\t45.5\t0.007929\t74.4\t1.547181\t3.946156\t46.6\t4.32843\t4.351499\t46.5\t0.024176\t0.34178\t75.8\t1.986305\t0.0\t100.0\t0.70146\t1.7809030000000001\t74.4\t3.26624\t1.115396\t74.4\t0.734583\t0.31357\n14601\t1848\tGhrh\tMus musculus\tincrease\tKnockout\t33\t46.0\tENSMUSG00000027643\tgrowth hormone releasing hormone\tnull\tnull\t45.5\t0.0\t46.2\t3.367016\t8.118664\t47.0\t3.8700460000000003\t69.050972\t48.6\t0.141371\t0.53113\tnull\tnull\tnull\t100.0\t0.0\t0.0\t47.5\t28.527087\t15.936802\t46.2\t4.318917\t0.0\n15194\t820\tHtt\tMus musculus\tincrease\tDeletion of a region\t17\t18.0\tENSMUSG00000029104\tHuntingtin\tnull\tnull\tnull\tnull\t79.4\t14.910599\t19.575022\t45.9\t3.537317\t2.429335\t76.0\t0.7833870000000001\t1.597101\tnull\tnull\tnull\t100.0\t1.9053859999999998\t7.8212969999999995\t47.4\t9.805917\t5.867677\t85.4\t3.235974\t3.975619\n72508\t1737\tRps6kb1\tMus musculus\tincrease\tDeletion\tnull\t19.0\tENSMUSG00000020516\tribosomal protein S6 kinase, polypeptide 1\t76.3\t8.649299000000001\t76.8\t1.2530199999999998\t76.3\t22.281719\t47.330139\t85.5\t3.457244\t8.632832\t95.0\t1.297323\t2.006451\t76.3\t16.554058\t29.226317\t100.0\t7.763918\t11.994765000000001\t77.3\t46.722815\t17.568937\t76.6\t66.628719\t6.823146\n16337\t373\tInsr\tMus musculus\tincrease || increase\tDeletion || Mutations\tnull\t33.3\tENSMUSG00000005534\tInsulin receptor\tnull\tnull\tnull\tnull\t82.4\t24.081953\t25.180266\t83.8\t2.9593109999999996\t9.348446\t84.4\t1.629756\t3.685332\t83.0\t18.671605\t61.499742\t100.0\t18.683011999999998\t15.201818\tnull\tnull\tnull\t70.6\t14.322804\t20.968601\n56717\t1809\tMtor\tMus musculus\tincrease\tGenetic reduction\tnull\t20.0\tENSMUSG00000028991\tmechanistic target of rapamycin (serine/threonine kinase)\tnull\tnull\tnull\tnull\t88.9\t9.210799\t13.653535\t45.0\t2.24138\t3.421451\t87.7\t1.398\t2.443038\t87.0\t3.35628\t11.302388\t100.0\t11.063383\t42.051246000000006\t87.2\t22.685847\t9.617295\t87.3\t5.935651\t3.148008\n19088\t1738\tPrkar2b\tMus musculus\tincrease\tKnockout\tnull\t14.0\tENSMUSG00000002997\tprotein kinase, cAMP dependent regulatory, type II beta\tnull\tnull\tnull\tnull\t79.9\t3.458027\t40.746912\t79.0\t1.702465\t5.493959\t81.0\t0.267117\t0.848308\tnull\tnull\tnull\t100.0\t0.226227\t3.68159\t80.4\t33.438456\t28.026863\t79.4\t9.258867\t9.696726\n16000\t364\tIgf1\tMus musculus\tincrease || increase || decrease\tOverexpression || Mutation || Knockout\t12\t21.5\tENSMUSG00000020053\tInsulin-like growth factor 1\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t45.0\t0.017658\t3.942289\t79.2\t4.286641\t0.005989\t80.4\t1.887809\t0.0\t100.0\t255.39353999999994\t3.83872\t74.6\t5.691021\t382.108202\t74.7\t1.5660269999999998\t134.332741\n18736\t506\tPou1f1\tMus musculus\tincrease\tDeletion\t40\t40.0\tENSMUSG00000004842\tPOU domain, class 1, transcription factor 1\tnull\tnull\tnull\tnull\t78.1\t0.0\t0.0\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t0.053914\t0.0\t76.3\t3.285572\t1.050808\tnull\tnull\tnull\n14602\t303\tGhrhr\tMus musculus\tincrease\tKnockout\tnull\t20.0\tENSMUSG00000004654\tGrowth hormone releasing hormone receptor\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t0.121709\t0.124346\tnull\tnull\tnull\tnull\tnull\tnull\n55961\t825\tSlc13a1\tMus musculus\tincrease\tDeletion\t25\t25.0\tENSMUSG00000029700\tSolute carrier family 13 (sodium/sulfate symporters), member 1\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t0.036629\t124.47195099999999\t76.3\t3.448387\t1.116962\tnull\tnull\tnull\n11548\t1954\tAdra1b\tMus musculus\tdecrease\tOverexpression\tnull\t11.0\tENSMUSG00000050541\tadrenergic receptor, alpha 1b\t89.3\t1.77883\tnull\tnull\t89.6\t0.052057\t4.616478\tnull\tnull\tnull\t84.6\t0.275776\t0.42466\t80.6\t5.451851\t1.366696\t100.0\t17.293763000000002\t0.929218\tnull\tnull\tnull\t87.3\t0.161459\t1.137328\n16367\t377\tIrs1\tMus musculus\tincrease\tKnockout\tnull\t18.0\tENSMUSG00000055980\tinsulin receptor substrate 1\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t75.6\t1.156562\t0.824045\tnull\tnull\tnull\t100.0\t1.133651\t1.566506\tnull\tnull\tnull\t75.9\t7.790611\t2.957055\n24108\t1958\tUbd\tMus musculus\tincrease\tKnockout\t20\t20.0\tENSMUSG00000035186\tubiquitin D\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t2.059626\t1.280494\tnull\tnull\tnull\tnull\tnull\tnull\n66143\t816\tEef1e1\tMus musculus\tdecrease\tOverexpression\tnull\t50.0\tENSMUSG00000001707\tEukaryotic translation elongation factor 1 epsilon 1\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t6.1643419999999995\t14.46892\t45.8\t70.991117\t28.707987\tnull\tnull\tnull\n14599\t301\tGh\tMus musculus\tdecrease\tOverexpression\tnull\tnull\tENSMUSG00000020713\tGrowth hormone\tnull\tnull\tnull\tnull\t47.2\t0.016887\t0.124991\tnull\tnull\tnull\t46.9\t0.017664\t0.02502\tnull\tnull\tnull\t100.0\t0.0\t0.0\tnull\tnull\tnull\t83.2\t30.554707\t22.534986\n17700\t2080\tMstn\tMus musculus\tincrease\tDeletion\t15\t15.0\tENSMUSG00000026100\tmyostatin\tnull\tnull\tnull\tnull\t78.3\t0.0\t0.00739\tnull\tnull\tnull\t79.9\t0.01586\t0.109442\t81.2\t0.034354\t0.0\t100.0\t0.0\t0.0\t79.2\t118.753706\t0.0\t79.2\t30.523122\t0.0\n16001\t365\tIgf1r\tMus musculus\tincrease || increase || increase\tKnockout || Brain knockout || Mutation\tnull\t28.0\tENSMUSG00000005533\tInsulin-like growth factor 1 receptor\tnull\tnull\tnull\tnull\t77.5\t2.210372\t55.053547\tnull\tnull\tnull\t78.3\t0.081049\t2.483194\t78.6\t1.288093\t29.247227\t100.0\t0.286387\t17.047362\tnull\tnull\tnull\t78.0\t2.897309\t0.647917\n18787\t1851\tSerpine1\tMus musculus\tincrease\tDeletion in the Klotho mutant background\tnull\tnull\tENSMUSG00000037411\tserine (or cysteine) peptidase inhibitor, clade E, member 1\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t2.016214\t0.446956\tnull\tnull\tnull\tnull\tnull\tnull\n208691\t1794\tEif5a2\tMus musculus\tdecrease\tOverexpression\tnull\tnull\tENSMUSG00000050192\teukaryotic translation initiation factor 5A2\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t0.080694\t1.303228\tnull\tnull\tnull\tnull\tnull\tnull\n193034\t1926\tTrpv1\tMus musculus\tincrease\tMutation\tnull\t15.9\tENSMUSG00000005952\ttransient receptor potential cation channel, subfamily V, member 1\tnull\tnull\tnull\tnull\t85.4\t0.00783\t0.044187\tnull\tnull\tnull\t86.6\t0.0566\t0.272007\t86.3\t0.0\t0.0\t100.0\t0.0\t0.0\t46.3\t2.050942\t0.321291\t88.0\t0.0\t0.091017\n384783\t378\tIrs2\tMus musculus\tincrease\tKnockout\tnull\t18.0\tENSMUSG00000038894\tinsulin receptor substrate 2\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t74.8\t0.63237\t0.531305\tnull\tnull\tnull\t100.0\t5.041238\t6.084092\tnull\tnull\tnull\t67.8\t24.930362\t9.660659\n224129\t6\tAdcy5\tMus musculus\tincrease\tKnockout\t12\t30.0\tENSMUSG00000022840\tadenylate cyclase 5\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t80.1\t0.075219\t0.407607\tnull\tnull\tnull\t100.0\t0.442225\t1.10946\tnull\tnull\tnull\t79.3\t1.242849\t0.258666\n16491\t822\tKcna3\tMus musculus\tincrease\tDeletion\tnull\t22.0\tENSMUSG00000047959\tPotassium voltage-gated channel, shaker-related subfamily, member 3\tnull\tnull\tnull\tnull\t88.0\t1.446437\t1.238347\tnull\tnull\tnull\t86.2\t0.081767\t0.037775\t91.5\t0.084594\t0.0\t100.0\t0.032325\t0.283839\t70.9\t5.081863\t0.717439\t87.3\t0.033994\t0.0\n18491\t492\tPappa\tMus musculus\tincrease || increase\tDeletion || Knockout\t40\t30.0\tENSMUSG00000028370\tPregnancy-associated plasma protein A\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t78.2\t0.018239\t0.886633\tnull\tnull\tnull\t100.0\t0.015496\t0.720441\tnull\tnull\tnull\tnull\tnull\tnull\n14860\t1798\tGsta4\tMus musculus\tincrease\tKnockout\tnull\t13.0\tENSMUSG00000032348\tglutathione S-transferase, alpha 4\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t100.0\t45.573883\t63.747595\tnull\tnull\tnull\tnull\tnull\tnull\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d553"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1534191759623_1541762691",
      "id": "20180813-202239_546153101",
      "dateCreated": "2018-08-13 20:22:39.623",
      "dateStarted": "2018-08-13 20:22:45.311",
      "dateFinished": "2018-08-13 20:22:45.649",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "(now.count, past.count)",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 20:22:08.231",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "res131: (Long, Long) \u003d (45,45)\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d550",
            "http://e198eb82c686:4040/jobs/job?id\u003d551"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1534191718740_-247250676",
      "id": "20180813-202158_314792300",
      "dateCreated": "2018-08-13 20:21:58.740",
      "dateStarted": "2018-08-13 20:22:08.286",
      "dateFinished": "2018-08-13 20:22:08.825",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nMerging aligments\n------------------",
      "user": "anonymous",
      "dateUpdated": "2018-07-25 22:38:29.569",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eMerging aligments\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532558293163_-106871131",
      "id": "20180725-223813_1643126084",
      "dateCreated": "2018-07-25 22:38:13.163",
      "dateStarted": "2018-07-25 22:38:29.570",
      "dateFinished": "2018-07-25 22:38:29.574",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mice_pro \u003d transcriptomes.map(t \u003d\u003e t-\u003e makeAligment(\"mouse\", \"pro\", t, quantMap))\n//z.show(mice_pro.map{ case (t, d) \u003d\u003e t -\u003e d.count}) // List((bowhead_liver,69), (bowhead_kidney,128), (cow,262), (gray_whale,223), (human,275), (minke_whale,230), (mouse,397), (naked_mole_rat,263), (naked_mole_rat_ensembl,282))",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 20:59:40.163",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mice_pro: Seq[(String, org.apache.spark.sql.DataFrame)] \u003d List((bowhead_liver,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (bowhead_kidney,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (cow,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (gray_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (human,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (minke_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (mouse,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat_ensembl,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]))\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d633",
            "http://e198eb82c686:4040/jobs/job?id\u003d634",
            "http://e198eb82c686:4040/jobs/job?id\u003d635",
            "http://e198eb82c686:4040/jobs/job?id\u003d636",
            "http://e198eb82c686:4040/jobs/job?id\u003d637",
            "http://e198eb82c686:4040/jobs/job?id\u003d638",
            "http://e198eb82c686:4040/jobs/job?id\u003d639",
            "http://e198eb82c686:4040/jobs/job?id\u003d640",
            "http://e198eb82c686:4040/jobs/job?id\u003d641",
            "http://e198eb82c686:4040/jobs/job?id\u003d642",
            "http://e198eb82c686:4040/jobs/job?id\u003d643",
            "http://e198eb82c686:4040/jobs/job?id\u003d644",
            "http://e198eb82c686:4040/jobs/job?id\u003d645",
            "http://e198eb82c686:4040/jobs/job?id\u003d646",
            "http://e198eb82c686:4040/jobs/job?id\u003d647",
            "http://e198eb82c686:4040/jobs/job?id\u003d648",
            "http://e198eb82c686:4040/jobs/job?id\u003d649",
            "http://e198eb82c686:4040/jobs/job?id\u003d650"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532289731390_-496244422",
      "id": "20180722-200211_426844324",
      "dateCreated": "2018-07-22 20:02:11.390",
      "dateStarted": "2018-08-15 20:59:40.961",
      "dateFinished": "2018-08-15 21:06:24.311",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transcript_aligments_mouse_pro_longevity_outer \u003d joinDataFrames(mice_pro.map(_._2), joinFields, \"outer\").sort($\"TPM_gray_whale_liver\".desc)\ntranscript_aligments_mouse_pro_longevity_outer.coalesce(1).writeTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_pro_longevity_mouse.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 20:59:55.128",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "transcript_aligments_mouse_pro_longevity_outer: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\norg.apache.spark.SparkException: Job aborted.\n  at org.apache.spark.sql.execution.datasources.FileFormatWriter$.write(FileFormatWriter.scala:224)\n  at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.run(InsertIntoHadoopFsRelationCommand.scala:154)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult$lzycompute(commands.scala:104)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.sideEffectResult(commands.scala:102)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.doExecute(commands.scala:122)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:131)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$execute$1.apply(SparkPlan.scala:127)\n  at org.apache.spark.sql.execution.SparkPlan$$anonfun$executeQuery$1.apply(SparkPlan.scala:155)\n  at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)\n  at org.apache.spark.sql.execution.SparkPlan.executeQuery(SparkPlan.scala:152)\n  at org.apache.spark.sql.execution.SparkPlan.execute(SparkPlan.scala:127)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd$lzycompute(QueryExecution.scala:80)\n  at org.apache.spark.sql.execution.QueryExecution.toRdd(QueryExecution.scala:80)\n  at org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:654)\n  at org.apache.spark.sql.DataFrameWriter$$anonfun$runCommand$1.apply(DataFrameWriter.scala:654)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:77)\n  at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:654)\n  at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:267)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:225)\n  at org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:642)\n  at group.research.aging.spark.extensions.DataFrameExtensions$DataFrameExtended.writeTSV(DataFrameExtensions.scala:16)\n  ... 76 elided\nCaused by: org.apache.spark.sql.catalyst.errors.package$TreeNodeException: execute, tree:\nExchange rangepartitioning(TPM_gray_whale_liver#25907 DESC NULLS LAST, 200)\n+- *(116) Project [coalesce(Entrez Gene ID#28703, Entrez Gene ID#25688) AS Entrez Gene ID#28743, coalesce(gene_stable_id#28704, gene_stable_id#11) AS gene_stable_id#28744, coalesce(protein_stable_id#28705, protein_stable_id#13) AS protein_stable_id#28745, coalesce(transcript_stable_id#28706, transcript_stable_id#28451) AS transcript_stable_id#28746, coalesce(Gene Name#28707, Gene Name#25690) AS Gene Name#28747, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820, transcript_cow#27218, identity_cow#27219, TPM_cow_liver#25849, TPM_cow_kidney#25878, transcript_gray_whale#27431, identity_gray_whale#27432, TPM_gray_whale_liver#25907, TPM_gray_whale_kidney#25936, transcript_human#27644, identity_human#27645, TPM_human_liver#25965, TPM_human_kidney#25994, transcript_minke_whale#27857, ... 15 more fields]\n   +- SortMergeJoin [Entrez Gene ID#28703, gene_stable_id#28704, protein_stable_id#28705, transcript_stable_id#28706, Gene Name#28707], [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#28451, Gene Name#25690], FullOuter\n      :- *(104) Sort [Entrez Gene ID#28703 ASC NULLS FIRST, gene_stable_id#28704 ASC NULLS FIRST, protein_stable_id#28705 ASC NULLS FIRST, transcript_stable_id#28706 ASC NULLS FIRST, Gene Name#28707 ASC NULLS FIRST], false, 0\n      :  +- Exchange hashpartitioning(Entrez Gene ID#28703, gene_stable_id#28704, protein_stable_id#28705, transcript_stable_id#28706, Gene Name#28707, 200)\n      :     +- *(103) Project [coalesce(Entrez Gene ID#28667, Entrez Gene ID#25688) AS Entrez Gene ID#28703, coalesce(gene_stable_id#28668, gene_stable_id#11) AS gene_stable_id#28704, coalesce(protein_stable_id#28669, protein_stable_id#13) AS protein_stable_id#28705, coalesce(transcript_stable_id#28670, transcript_stable_id#28238) AS transcript_stable_id#28706, coalesce(Gene Name#28671, Gene Name#25690) AS Gene Name#28707, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820, transcript_cow#27218, identity_cow#27219, TPM_cow_liver#25849, TPM_cow_kidney#25878, transcript_gray_whale#27431, identity_gray_whale#27432, TPM_gray_whale_liver#25907, TPM_gray_whale_kidney#25936, transcript_human#27644, identity_human#27645, TPM_human_liver#25965, TPM_human_kidney#25994, transcript_minke_whale#27857, ... 11 more fields]\n      :        +- SortMergeJoin [Entrez Gene ID#28667, gene_stable_id#28668, protein_stable_id#28669, transcript_stable_id#28670, Gene Name#28671], [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#28238, Gene Name#25690], FullOuter\n      :           :- *(91) Sort [Entrez Gene ID#28667 ASC NULLS FIRST, gene_stable_id#28668 ASC NULLS FIRST, protein_stable_id#28669 ASC NULLS FIRST, transcript_stable_id#28670 ASC NULLS FIRST, Gene Name#28671 ASC NULLS FIRST], false, 0\n      :           :  +- Exchange hashpartitioning(Entrez Gene ID#28667, gene_stable_id#28668, protein_stable_id#28669, transcript_stable_id#28670, Gene Name#28671, 200)\n      :           :     +- *(90) Project [coalesce(Entrez Gene ID#28635, Entrez Gene ID#25688) AS Entrez Gene ID#28667, coalesce(gene_stable_id#28636, gene_stable_id#11) AS gene_stable_id#28668, coalesce(protein_stable_id#28637, protein_stable_id#13) AS protein_stable_id#28669, coalesce(transcript_stable_id#28638, transcript_stable_id#28025) AS transcript_stable_id#28670, coalesce(Gene Name#28639, Gene Name#25690) AS Gene Name#28671, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820, transcript_cow#27218, identity_cow#27219, TPM_cow_liver#25849, TPM_cow_kidney#25878, transcript_gray_whale#27431, identity_gray_whale#27432, TPM_gray_whale_liver#25907, TPM_gray_whale_kidney#25936, transcript_human#27644, identity_human#27645, TPM_human_liver#25965, TPM_human_kidney#25994, transcript_minke_whale#27857, ... 7 more fields]\n      :           :        +- SortMergeJoin [Entrez Gene ID#28635, gene_stable_id#28636, protein_stable_id#28637, transcript_stable_id#28638, Gene Name#28639], [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#28025, Gene Name#25690], FullOuter\n      :           :           :- *(76) Sort [Entrez Gene ID#28635 ASC NULLS FIRST, gene_stable_id#28636 ASC NULLS FIRST, protein_stable_id#28637 ASC NULLS FIRST, transcript_stable_id#28638 ASC NULLS FIRST, Gene Name#28639 ASC NULLS FIRST], false, 0\n      :           :           :  +- Exchange hashpartitioning(Entrez Gene ID#28635, gene_stable_id#28636, protein_stable_id#28637, transcript_stable_id#28638, Gene Name#28639, 200)\n      :           :           :     +- *(75) Project [coalesce(Entrez Gene ID#28607, Entrez Gene ID#25688) AS Entrez Gene ID#28635, coalesce(gene_stable_id#28608, gene_stable_id#11) AS gene_stable_id#28636, coalesce(protein_stable_id#28609, protein_stable_id#13) AS protein_stable_id#28637, coalesce(transcript_stable_id#28610, transcript_stable_id#27812) AS transcript_stable_id#28638, coalesce(Gene Name#28611, Gene Name#25690) AS Gene Name#28639, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820, transcript_cow#27218, identity_cow#27219, TPM_cow_liver#25849, TPM_cow_kidney#25878, transcript_gray_whale#27431, identity_gray_whale#27432, TPM_gray_whale_liver#25907, TPM_gray_whale_kidney#25936, transcript_human#27644, identity_human#27645, TPM_human_liver#25965, TPM_human_kidney#25994, transcript_minke_whale#27857, ... 3 more fields]\n      :           :           :        +- SortMergeJoin [Entrez Gene ID#28607, gene_stable_id#28608, protein_stable_id#28609, transcript_stable_id#28610, Gene Name#28611], [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#27812, Gene Name#25690], FullOuter\n      :           :           :           :- *(63) Sort [Entrez Gene ID#28607 ASC NULLS FIRST, gene_stable_id#28608 ASC NULLS FIRST, protein_stable_id#28609 ASC NULLS FIRST, transcript_stable_id#28610 ASC NULLS FIRST, Gene Name#28611 ASC NULLS FIRST], false, 0\n      :           :           :           :  +- Exchange hashpartitioning(Entrez Gene ID#28607, gene_stable_id#28608, protein_stable_id#28609, transcript_stable_id#28610, Gene Name#28611, 200)\n      :           :           :           :     +- *(62) Project [coalesce(Entrez Gene ID#28583, Entrez Gene ID#25688) AS Entrez Gene ID#28607, coalesce(gene_stable_id#28584, gene_stable_id#11) AS gene_stable_id#28608, coalesce(protein_stable_id#28585, protein_stable_id#13) AS protein_stable_id#28609, coalesce(transcript_stable_id#28586, transcript_stable_id#27599) AS transcript_stable_id#28610, coalesce(Gene Name#28587, Gene Name#25690) AS Gene Name#28611, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820, transcript_cow#27218, identity_cow#27219, TPM_cow_liver#25849, TPM_cow_kidney#25878, transcript_gray_whale#27431, identity_gray_whale#27432, TPM_gray_whale_liver#25907, TPM_gray_whale_kidney#25936, transcript_human#27644, identity_human#27645, TPM_human_liver#25965, TPM_human_kidney#25994]\n      :           :           :           :        +- SortMergeJoin [Entrez Gene ID#28583, gene_stable_id#28584, protein_stable_id#28585, transcript_stable_id#28586, Gene Name#28587], [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#27599, Gene Name#25690], FullOuter\n      :           :           :           :           :- *(48) Sort [Entrez Gene ID#28583 ASC NULLS FIRST, gene_stable_id#28584 ASC NULLS FIRST, protein_stable_id#28585 ASC NULLS FIRST, transcript_stable_id#28586 ASC NULLS FIRST, Gene Name#28587 ASC NULLS FIRST], false, 0\n      :           :           :           :           :  +- Exchange hashpartitioning(Entrez Gene ID#28583, gene_stable_id#28584, protein_stable_id#28585, transcript_stable_id#28586, Gene Name#28587, 200)\n      :           :           :           :           :     +- *(47) Project [coalesce(Entrez Gene ID#28563, Entrez Gene ID#25688) AS Entrez Gene ID#28583, coalesce(gene_stable_id#28564, gene_stable_id#11) AS gene_stable_id#28584, coalesce(protein_stable_id#28565, protein_stable_id#13) AS protein_stable_id#28585, coalesce(transcript_stable_id#28566, transcript_stable_id#27386) AS transcript_stable_id#28586, coalesce(Gene Name#28567, Gene Name#25690) AS Gene Name#28587, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820, transcript_cow#27218, identity_cow#27219, TPM_cow_liver#25849, TPM_cow_kidney#25878, transcript_gray_whale#27431, identity_gray_whale#27432, TPM_gray_whale_liver#25907, TPM_gray_whale_kidney#25936]\n      :           :           :           :           :        +- SortMergeJoin [Entrez Gene ID#28563, gene_stable_id#28564, protein_stable_id#28565, transcript_stable_id#28566, Gene Name#28567], [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#27386, Gene Name#25690], FullOuter\n      :           :           :           :           :           :- *(35) Sort [Entrez Gene ID#28563 ASC NULLS FIRST, gene_stable_id#28564 ASC NULLS FIRST, protein_stable_id#28565 ASC NULLS FIRST, transcript_stable_id#28566 ASC NULLS FIRST, Gene Name#28567 ASC NULLS FIRST], false, 0\n      :           :           :           :           :           :  +- Exchange hashpartitioning(Entrez Gene ID#28563, gene_stable_id#28564, protein_stable_id#28565, transcript_stable_id#28566, Gene Name#28567, 200)\n      :           :           :           :           :           :     +- *(34) Project [coalesce(Entrez Gene ID#28547, Entrez Gene ID#25688) AS Entrez Gene ID#28563, coalesce(gene_stable_id#28548, gene_stable_id#11) AS gene_stable_id#28564, coalesce(protein_stable_id#28549, protein_stable_id#13) AS protein_stable_id#28565, coalesce(transcript_stable_id#28550, transcript_stable_id#27173) AS transcript_stable_id#28566, coalesce(Gene Name#28551, Gene Name#25690) AS Gene Name#28567, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820, transcript_cow#27218, identity_cow#27219, TPM_cow_liver#25849, TPM_cow_kidney#25878]\n      :           :           :           :           :           :        +- SortMergeJoin [Entrez Gene ID#28547, gene_stable_id#28548, protein_stable_id#28549, transcript_stable_id#28550, Gene Name#28551], [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#27173, Gene Name#25690], FullOuter\n      :           :           :           :           :           :           :- *(22) Sort [Entrez Gene ID#28547 ASC NULLS FIRST, gene_stable_id#28548 ASC NULLS FIRST, protein_stable_id#28549 ASC NULLS FIRST, transcript_stable_id#28550 ASC NULLS FIRST, Gene Name#28551 ASC NULLS FIRST], false, 0\n      :           :           :           :           :           :           :  +- Exchange hashpartitioning(Entrez Gene ID#28547, gene_stable_id#28548, protein_stable_id#28549, transcript_stable_id#28550, Gene Name#28551, 200)\n      :           :           :           :           :           :           :     +- *(21) Project [coalesce(Entrez Gene ID#25688, Entrez Gene ID#28532) AS Entrez Gene ID#28547, coalesce(gene_stable_id#11, gene_stable_id#27004) AS gene_stable_id#28548, coalesce(protein_stable_id#13, protein_stable_id#27005) AS protein_stable_id#28549, coalesce(transcript_stable_id#26751, transcript_stable_id#26962) AS transcript_stable_id#28550, coalesce(Gene Name#25690, Gene Name#28534) AS Gene Name#28551, transcript_bowhead_liver#26796, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791, transcript_bowhead_kidney#27007, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820]\n      :           :           :           :           :           :           :        +- SortMergeJoin [Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#26751, Gene Name#25690], [Entrez Gene ID#28532, gene_stable_id#27004, protein_stable_id#27005, transcript_stable_id#26962, Gene Name#28534], FullOuter\n      :           :           :           :           :           :           :           :- *(10) Sort [Entrez Gene ID#25688 ASC NULLS FIRST, gene_stable_id#11 ASC NULLS FIRST, protein_stable_id#13 ASC NULLS FIRST, transcript_stable_id#26751 ASC NULLS FIRST, Gene Name#25690 ASC NULLS FIRST], false, 0\n      :           :           :           :           :           :           :           :  +- Exchange hashpartitioning(Entrez Gene ID#25688, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#26751, Gene Name#25690, 200)\n      :           :           :           :           :           :           :           :     +- *(9) Project [Entrez Gene ID#25688, Gene Name#25690, transcript_bowhead_liver#26796, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#26751, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791]\n      :           :           :           :           :           :           :           :        +- *(9) BroadcastHashJoin [Entrez Gene ID#25688], [cast(Entrez Gene ID#26804 as int)], Inner, BuildLeft\n      :           :           :           :           :           :           :           :           :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))\n      :           :           :           :           :           :           :           :           :  +- *(2) HashAggregate(keys\u003d[Entrez Gene ID#25688, Gene Name#25690], functions\u003d[], output\u003d[Entrez Gene ID#25688, Gene Name#25690])\n      :           :           :           :           :           :           :           :           :     +- Exchange hashpartitioning(Entrez Gene ID#25688, Gene Name#25690, 200)\n      :           :           :           :           :           :           :           :           :        +- *(1) HashAggregate(keys\u003d[Entrez Gene ID#25688, Gene Name#25690], functions\u003d[], output\u003d[Entrez Gene ID#25688, Gene Name#25690])\n      :           :           :           :           :           :           :           :           :           +- *(1) Project [Entrez Gene ID#25688, Gene Name#25690]\n      :           :           :           :           :           :           :           :           :              +- *(1) Filter ((((isnotnull(organism#25691) \u0026\u0026 isnotnull(Longevity Influence#25698)) \u0026\u0026 (organism#25691 \u003d Mus musculus)) \u0026\u0026 (Longevity Influence#25698 \u003d pro)) \u0026\u0026 isnotnull(Entrez Gene ID#25688))\n      :           :           :           :           :           :           :           :           :                 +- *(1) FileScan csv [Entrez Gene ID#25688,Gene Name#25690,Organism#25691,Longevity Influence#25698] Batched: false, Format: CSV, Location: InMemoryFileIndex[wasbs://storage@pipelines1.blob.core.windows.net/indexes/genage/genage_models.tsv], PartitionFilters: [], PushedFilters: [IsNotNull(Organism), IsNotNull(Longevity Influence), EqualTo(Organism,Mus musculus), EqualTo(Lon..., ReadSchema: struct\u003cEntrez Gene ID:int,Gene Name:string,Organism:string,Longevity Influence:string\u003e\n      :           :           :           :           :           :           :           :           +- *(9) Project [transcript_bowhead_liver#26796, Entrez Gene ID#26804, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#26751, identity_bowhead_liver#26797, TPM_bowhead_liver_liver#25791]\n      :           :           :           :           :           :           :           :              +- *(9) SortMergeJoin [transcript_bowhead_liver#26796], [transcript_bowhead_liver#25788], Inner\n      :           :           :           :           :           :           :           :                 :- *(6) Sort [transcript_bowhead_liver#26796 ASC NULLS FIRST], false, 0\n      :           :           :           :           :           :           :           :                 :  +- Exchange hashpartitioning(transcript_bowhead_liver#26796, 200)\n      :           :           :           :           :           :           :           :                 :     +- *(5) Project [xref#14 AS Entrez Gene ID#26804, gene_stable_id#11, protein_stable_id#13, transcript_stable_id#26751, transcript#26739 AS transcript_bowhead_liver#26796, identity#26740 AS identity_bowhead_liver#26797]\n      :           :           :           :           :           :           :           :                 :        +- *(5) BroadcastHashJoin [transcript_stable_id#26751], [transcript_stable_id#12], Inner, BuildLeft\n      :           :           :           :           :           :           :           :                 :           :- BroadcastExchange HashedRelationBroadcastMode(List(input[2, string, true]))\n      :           :           :           :           :           :           :           :                 :           :  +- *(4) Project [transcript#26739, identity#26740, UDF(Ensembl ID#26738) AS transcript_stable_id#26751]\n      :           :           :           :           :           :           :           :                 :           :     +- *(4) Filter (isnotnull(UDF(Ensembl ID#26738)) \u0026\u0026 isnotnull(transcript#26739))\n      :           :           :           :           :           :           :           :                 :           :        +- *(4) SerializeFromObject [if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26738, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26739, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26740, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26741, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26742, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26743, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26744, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26745, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26746, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26747, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26748, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26749]\n      :           :           :           :           :           :           :           :                 :           :           +- *(4) MapElements \u003cfunction1\u003e, obj#26737: org.apache.spark.sql.Row\n      :           :           :           :           :           :           :           :                 :           :              +- *(4) DeserializeToObject newInstance(class scala.Tuple2), obj#26736: scala.Tuple2\n      :           :           :           :           :           :           :           :                 :           :                 +- ObjectHashAggregate(keys\u003d[value#26727], functions\u003d[reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@5a5db9c8, Some(createexternalrow(Ensembl ID#26701.toString, transcript#26702.toString, identity#26703, aligment_length#26704, mismatches#26705, gaps#26706, start_query#26707, end_query#26708, start_target#26709, end_target#26710, c10#26711, c11#26712, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26729, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26677, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26678, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26679, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26680, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26681, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26682, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26683, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26684, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26685, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26686, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26687, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26688) AS _2#26730, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26677, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26678, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26679, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26680, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26681, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26682, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26683, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26684, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26685, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26686, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26687, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26688, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26727, ReduceAggregator(org.apache.spark.sql.Row)#26735])\n      :           :           :           :           :           :           :           :                 :           :                    +- Exchange hashpartitioning(value#26727, 200)\n      :           :           :           :           :           :           :           :                 :           :                       +- ObjectHashAggregate(keys\u003d[value#26727], functions\u003d[partial_reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@5a5db9c8, Some(createexternalrow(Ensembl ID#26701.toString, transcript#26702.toString, identity#26703, aligment_length#26704, mismatches#26705, gaps#26706, start_query#26707, end_query#26708, start_target#26709, end_target#26710, c10#26711, c11#26712, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26729, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26677, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26678, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26679, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26680, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26681, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26682, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26683, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26684, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26685, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26686, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26687, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26688) AS _2#26730, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26677, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26678, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26679, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26680, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26681, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26682, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26683, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26684, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26685, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26686, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26687, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26688, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26727, buf#28829])\n      :           :           :           :           :           :           :           :                 :           :                          +- AppendColumnsWithObject \u003cfunction1\u003e, [if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26701, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26702, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26703, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26704, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26705, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26706, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26707, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26708, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26709, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26710, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26711, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26712], [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, input[0, java.lang.String, true], true, false) AS value#26727]\n      :           :           :           :           :           :           :           :                 :           :                             +- MapElements \u003cfunction1\u003e, obj#26700: org.apache.spark.sql.Row\n      :           :           :           :           :           :           :           :                 :           :                                +- DeserializeToObject newInstance(class scala.Tuple2), obj#26699: scala.Tuple2\n      :           :           :           :           :           :           :           :                 :           :                                   +- ObjectHashAggregate(keys\u003d[value#26690], functions\u003d[reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@4565723c, Some(createexternalrow(Ensembl ID#26653.toString, transcript#26654.toString, identity#26655, aligment_length#26656, mismatches#26657, gaps#26658, start_query#26659, end_query#26660, start_target#26661, end_target#26662, c10#26663, c11#26664, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26692, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26665, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26666, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26667, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26668, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26669, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26670, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26671, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26672, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26673, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26674, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26675, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26676) AS _2#26693, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26665, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26666, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26667, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26668, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26669, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26670, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26671, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26672, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26673, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26674, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26675, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26676, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26690, ReduceAggregator(org.apache.spark.sql.Row)#26698])\n      :           :           :           :           :           :           :           :                 :           :                                      +- Exchange hashpartitioning(value#26690, 200)\n      :           :           :           :           :           :           :           :                 :           :                                         +- ObjectHashAggregate(keys\u003d[value#26690], functions\u003d[partial_reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@4565723c, Some(createexternalrow(Ensembl ID#26653.toString, transcript#26654.toString, identity#26655, aligment_length#26656, mismatches#26657, gaps#26658, start_query#26659, end_query#26660, start_target#26661, end_target#26662, c10#26663, c11#26664, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26692, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26665, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26666, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26667, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26668, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26669, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26670, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26671, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26672, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26673, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26674, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26675, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26676) AS _2#26693, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26665, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26666, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26667, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26668, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26669, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26670, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26671, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26672, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26673, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26674, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26675, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26676, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26690, buf#28831])\n      :           :           :           :           :           :           :           :                 :           :                                            +- AppendColumns \u003cfunction1\u003e, createexternalrow(Ensembl ID#26653.toString, transcript#26654.toString, identity#26655, aligment_length#26656, mismatches#26657, gaps#26658, start_query#26659, end_query#26660, start_target#26661, end_target#26662, c10#26663, c11#26664, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true)), [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, input[0, java.lang.String, true], true, false) AS value#26690]\n      :           :           :           :           :           :           :           :                 :           :                                               +- *(3) Project [_c0#26629 AS Ensembl ID#26653, _c1#26630 AS transcript#26654, _c2#26631 AS identity#26655, _c3#26632 AS aligment_length#26656, _c4#26633 AS mismatches#26657, _c5#26634 AS gaps#26658, _c6#26635 AS start_query#26659, _c7#26636 AS end_query#26660, _c8#26637 AS start_target#26661, _c9#26638 AS end_target#26662, _c10#26639 AS c10#26663, _c11#26640 AS c11#26664]\n      :           :           :           :           :           :           :           :                 :           :                                                  +- *(3) FileScan csv [_c0#26629,_c1#26630,_c2#26631,_c3#26632,_c4#26633,_c5#26634,_c6#26635,_c7#26636,_c8#26637,_c9#26638,_c10#26639,_c11#26640] Batched: false, Format: CSV, Location: InMemoryFileIndex[wasbs://storage@pipelines1.blob.core.windows.net/lags/raw/mouse/pro/mouse_pro_l..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct\u003c_c0:string,_c1:string,_c2:double,_c3:int,_c4:int,_c5:int,_c6:int,_c7:int,_c8:int,_c9:int,_...\n      :           :           :           :           :           :           :           :                 :           +- *(5) Project [gene_stable_id#11, transcript_stable_id#12, protein_stable_id#13, xref#14]\n      :           :           :           :           :           :           :           :                 :              +- *(5) Filter (isnotnull(transcript_stable_id#12) \u0026\u0026 isnotnull(xref#14))\n      :           :           :           :           :           :           :           :                 :                 +- *(5) FileScan csv [gene_stable_id#11,transcript_stable_id#12,protein_stable_id#13,xref#14] Batched: false, Format: CSV, Location: InMemoryFileIndex[wasbs://storage@pipelines1.blob.core.windows.net/indexes/conversions/Mus_muscul..., PartitionFilters: [], PushedFilters: [IsNotNull(transcript_stable_id), IsNotNull(xref)], ReadSchema: struct\u003cgene_stable_id:string,transcript_stable_id:string,protein_stable_id:string,xref:string\u003e\n      :           :           :           :           :           :           :           :                 +- *(8) Sort [transcript_bowhead_liver#25788 ASC NULLS FIRST], false, 0\n      :           :           :           :           :           :           :           :                    +- Exchange hashpartitioning(transcript_bowhead_liver#25788, 200)\n      :           :           :           :           :           :           :           :                       +- *(7) Project [Name#25776 AS transcript_bowhead_liver#25788, TPM#25779 AS TPM_bowhead_liver_liver#25791]\n      :           :           :           :           :           :           :           :                          +- *(7) Filter isnotnull(Name#25776)\n      :           :           :           :           :           :           :           :                             +- *(7) FileScan csv [Name#25776,TPM#25779] Batched: false, Format: CSV, Location: InMemoryFileIndex[wasbs://storage@pipelines1.blob.core.windows.net/quant/bowhead/liver/transcript..., PartitionFilters: [], PushedFilters: [IsNotNull(Name)], ReadSchema: struct\u003cName:string,TPM:double\u003e\n      :           :           :           :           :           :           :           +- *(20) Sort [Entrez Gene ID#28532 ASC NULLS FIRST, gene_stable_id#27004 ASC NULLS FIRST, protein_stable_id#27005 ASC NULLS FIRST, transcript_stable_id#26962 ASC NULLS FIRST, Gene Name#28534 ASC NULLS FIRST], false, 0\n      :           :           :           :           :           :           :              +- Exchange hashpartitioning(Entrez Gene ID#28532, gene_stable_id#27004, protein_stable_id#27005, transcript_stable_id#26962, Gene Name#28534, 200)\n      :           :           :           :           :           :           :                 +- *(19) Project [Entrez Gene ID#28532, Gene Name#28534, transcript_bowhead_kidney#27007, gene_stable_id#27004, protein_stable_id#27005, transcript_stable_id#26962, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820]\n      :           :           :           :           :           :           :                    +- *(19) BroadcastHashJoin [Entrez Gene ID#28532], [cast(Entrez Gene ID#27015 as int)], Inner, BuildLeft\n      :           :           :           :           :           :           :                       :- ReusedExchange [Entrez Gene ID#28532, Gene Name#28534], BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint)))\n      :           :           :           :           :           :           :                       +- *(19) Project [transcript_bowhead_kidney#27007, Entrez Gene ID#27015, gene_stable_id#27004, protein_stable_id#27005, transcript_stable_id#26962, identity_bowhead_kidney#27008, TPM_bowhead_kidney_kidney#25820]\n      :           :           :           :           :           :           :                          +- *(19) SortMergeJoin [transcript_bowhead_kidney#27007], [transcript_bowhead_kidney#25817], Inner\n      :           :           :           :           :           :           :                             :- *(16) Sort [transcript_bowhead_kidney#27007 ASC NULLS FIRST], false, 0\n      :           :           :           :           :           :           :                             :  +- Exchange hashpartitioning(transcript_bowhead_kidney#27007, 200)\n      :           :           :           :           :           :           :                             :     +- *(15) Project [xref#14 AS Entrez Gene ID#27015, gene_stable_id#11 AS gene_stable_id#27004, protein_stable_id#13 AS protein_stable_id#27005, transcript_stable_id#26962, transcript#26950 AS transcript_bowhead_kidney#27007, identity#26951 AS identity_bowhead_kidney#27008]\n      :           :           :           :           :           :           :                             :        +- *(15) BroadcastHashJoin [transcript_stable_id#26962], [transcript_stable_id#12], Inner, BuildLeft\n      :           :           :           :           :           :           :                             :           :- BroadcastExchange HashedRelationBroadcastMode(List(input[2, string, true]))\n      :           :           :           :           :           :           :                             :           :  +- *(14) Project [transcript#26950, identity#26951, UDF(Ensembl ID#26949) AS transcript_stable_id#26962]\n      :           :           :           :           :           :           :                             :           :     +- *(14) Filter (isnotnull(UDF(Ensembl ID#26949)) \u0026\u0026 isnotnull(transcript#26950))\n      :           :           :           :           :           :           :                             :           :        +- *(14) SerializeFromObject [if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26949, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26950, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26951, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26952, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26953, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26954, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26955, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26956, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26957, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26958, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26959, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26960]\n      :           :           :           :           :           :           :                             :           :           +- *(14) MapElements \u003cfunction1\u003e, obj#26948: org.apache.spark.sql.Row\n      :           :           :           :           :           :           :                             :           :              +- *(14) DeserializeToObject newInstance(class scala.Tuple2), obj#26947: scala.Tuple2\n      :           :           :           :           :           :           :                             :           :                 +- ObjectHashAggregate(keys\u003d[value#26938], functions\u003d[reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@7f336f11, Some(createexternalrow(Ensembl ID#26912.toString, transcript#26913.toString, identity#26914, aligment_length#26915, mismatches#26916, gaps#26917, start_query#26918, end_query#26919, start_target#26920, end_target#26921, c10#26922, c11#26923, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26940, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26888, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26889, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26890, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26891, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26892, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26893, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26894, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26895, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26896, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26897, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26898, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26899) AS _2#26941, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26888, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26889, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26890, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26891, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26892, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26893, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26894, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26895, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26896, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26897, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26898, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26899, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26938, ReduceAggregator(org.apache.spark.sql.Row)#26946])\n      :           :           :           :           :           :           :                             :           :                    +- Exchange hashpartitioning(value#26938, 200)\n      :           :           :           :           :           :           :                             :           :                       +- ObjectHashAggregate(keys\u003d[value#26938], functions\u003d[partial_reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@7f336f11, Some(createexternalrow(Ensembl ID#26912.toString, transcript#26913.toString, identity#26914, aligment_length#26915, mismatches#26916, gaps#26917, start_query#26918, end_query#26919, start_target#26920, end_target#26921, c10#26922, c11#26923, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26940, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26888, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26889, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26890, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26891, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26892, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26893, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26894, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26895, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26896, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26897, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26898, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26899) AS _2#26941, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26888, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26889, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26890, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26891, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26892, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26893, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26894, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26895, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26896, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26897, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26898, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26899, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26938, buf#28833])\n      :           :           :           :           :           :           :                             :           :                          +- AppendColumnsWithObject \u003cfunction1\u003e, [if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26912, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26913, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26914, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26915, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26916, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26917, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26918, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26919, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26920, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26921, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26922, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26923], [staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, input[0, java.lang.String, true], true, false) AS value#26938]\n      :           :           :           :           :           :           :                             :           :                             +- MapElements \u003cfunction1\u003e, obj#26911: org.apache.spark.sql.Row\n      :           :           :           :           :           :           :                             :           :                                +- DeserializeToObject newInstance(class scala.Tuple2), obj#26910: scala.Tuple2\n      :           :           :           :           :           :           :                             :           :                                   +- ObjectHashAggregate(keys\u003d[value#26901], functions\u003d[reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@48171ac6, Some(createexternalrow(Ensembl ID#26864.toString, transcript#26865.toString, identity#26866, aligment_length#26867, mismatches#26868, gaps#26869, start_query#26870, end_query#26871, start_target#26872, end_target#26873, c10#26874, c11#26875, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26903, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26876, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26877, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26878, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26879, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26880, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26881, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26882, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26883, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26884, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26885, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26886, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26887) AS _2#26904, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26876, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26877, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26878, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26879, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26880, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26881, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26882, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26883, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26884, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26885, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26886, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26887, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26901, ReduceAggregator(org.apache.spark.sql.Row)#26909])\n      :           :           :           :           :           :           :                             :           :                                      +- Exchange hashpartitioning(value#26901, 200)\n      :           :           :           :           :           :           :                             :           :                                         +- ObjectHashAggregate(keys\u003d[value#26901], functions\u003d[partial_reduceaggregator(org.apache.spark.sql.expressions.ReduceAggregator@48171ac6, Some(createexternalrow(Ensembl ID#26864.toString, transcript#26865.toString, identity#26866, aligment_length#26867, mismatches#26868, gaps#26869, start_query#26870, end_query#26871, start_target#26872, end_target#26873, c10#26874, c11#26875, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), Some(interface org.apache.spark.sql.Row), Some(StructType(StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true))), input[0, scala.Tuple2, true]._1 AS value#26903, if ((isnull(input[0, scala.Tuple2, true]._2) || None.equals)) null else named_struct(Ensembl ID, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26876, transcript, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 1, transcript), StringType), true, false) AS transcript#26877, identity, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 2, identity), DoubleType) AS identity#26878, aligment_length, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 3, aligment_length), IntegerType) AS aligment_length#26879, mismatches, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 4, mismatches), IntegerType) AS mismatches#26880, gaps, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 5, gaps), IntegerType) AS gaps#26881, start_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 6, start_query), IntegerType) AS start_query#26882, end_query, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 7, end_query), IntegerType) AS end_query#26883, start_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 8, start_target), IntegerType) AS start_target#26884, end_target, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 9, end_target), IntegerType) AS end_target#26885, c10, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 10, c10), IntegerType) AS c10#26886, c11, if (assertnotnull(input[0, scala.Tuple2, true]._2).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, scala.Tuple2, true]._2), 11, c11), IntegerType) AS c11#26887) AS _2#26904, newInstance(class scala.Tuple2), if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 0, Ensembl ID), StringType), true, false) AS Ensembl ID#26876, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else staticinvoke(class org.apache.spark.unsafe.types.UTF8String, StringType, fromString, validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 1, transcript), StringType), true, false) AS transcript#26877, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 2, identity), DoubleType) AS identity#26878, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 3, aligment_length), IntegerType) AS aligment_length#26879, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 4, mismatches), IntegerType) AS mismatches#26880, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 5, gaps), IntegerType) AS gaps#26881, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 6, start_query), IntegerType) AS start_query#26882, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 7, end_query), IntegerType) AS end_query#26883, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 8, start_target), IntegerType) AS start_target#26884, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 9, end_target), IntegerType) AS end_target#26885, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 10, c10), IntegerType) AS c10#26886, if (assertnotnull(input[0, org.apache.spark.sql.Row, true]).isNullAt) null else validateexternaltype(getexternalrowfield(assertnotnull(input[0, org.apache.spark.sql.Row, true]), 11, c11), IntegerType) AS c11#26887, StructField(Ensembl ID,StringType,true), StructField(transcript,StringType,true), StructField(identity,DoubleType,true), StructField(aligment_length,IntegerType,true), StructField(mismatches,IntegerType,true), StructField(gaps,IntegerType,true), StructField(start_query,IntegerType,true), StructField(end_query,IntegerType,true), StructField(start_target,IntegerType,true), StructField(end_target,IntegerType,true), StructField(c10,IntegerType,true), StructField(c11,IntegerType,true), true, 0, 0)], output\u003d[value#26901, buf#28835])"
          },
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"result-alert alert-warning\" role\u003d\"alert\"\u003e\u003cbutton type\u003d\"button\" class\u003d\"close\" data-dismiss\u003d\"alert\" aria-label\u003d\"Close\"\u003e\u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e\u003c/button\u003e\u003cstrong\u003eOutput is truncated\u003c/strong\u003e to 102400 bytes. Learn more about \u003cstrong\u003eZEPPELIN_INTERPRETER_OUTPUT_LIMIT\u003c/strong\u003e\u003c/div\u003e"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d651",
            "http://e198eb82c686:4040/jobs/job?id\u003d652",
            "http://e198eb82c686:4040/jobs/job?id\u003d653",
            "http://e198eb82c686:4040/jobs/job?id\u003d654",
            "http://e198eb82c686:4040/jobs/job?id\u003d655",
            "http://e198eb82c686:4040/jobs/job?id\u003d656",
            "http://e198eb82c686:4040/jobs/job?id\u003d657",
            "http://e198eb82c686:4040/jobs/job?id\u003d658",
            "http://e198eb82c686:4040/jobs/job?id\u003d659",
            "http://e198eb82c686:4040/jobs/job?id\u003d660",
            "http://e198eb82c686:4040/jobs/job?id\u003d661",
            "http://e198eb82c686:4040/jobs/job?id\u003d662",
            "http://e198eb82c686:4040/jobs/job?id\u003d663",
            "http://e198eb82c686:4040/jobs/job?id\u003d664",
            "http://e198eb82c686:4040/jobs/job?id\u003d665"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532556765091_-1076751217",
      "id": "20180725-221245_224915852",
      "dateCreated": "2018-07-25 22:12:45.091",
      "dateStarted": "2018-08-15 20:59:56.084",
      "dateFinished": "2018-08-15 21:29:47.632",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mice_anti \u003d transcriptomes.map(t \u003d\u003e t-\u003e makeAligment(\"mouse\", \"anti\", t, quantMap))\n//z.show(mice_anti.map{ case (t, d) \u003d\u003e t -\u003e d.count})",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 21:00:01.184",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mice_anti: Seq[(String, org.apache.spark.sql.DataFrame)] \u003d List((bowhead_liver,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (bowhead_kidney,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (cow,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (gray_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (human,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (minke_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (mouse,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat_ensembl,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]))\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d666",
            "http://e198eb82c686:4040/jobs/job?id\u003d667",
            "http://e198eb82c686:4040/jobs/job?id\u003d668",
            "http://e198eb82c686:4040/jobs/job?id\u003d669",
            "http://e198eb82c686:4040/jobs/job?id\u003d670",
            "http://e198eb82c686:4040/jobs/job?id\u003d671",
            "http://e198eb82c686:4040/jobs/job?id\u003d672",
            "http://e198eb82c686:4040/jobs/job?id\u003d673",
            "http://e198eb82c686:4040/jobs/job?id\u003d674",
            "http://e198eb82c686:4040/jobs/job?id\u003d675",
            "http://e198eb82c686:4040/jobs/job?id\u003d676",
            "http://e198eb82c686:4040/jobs/job?id\u003d677",
            "http://e198eb82c686:4040/jobs/job?id\u003d678",
            "http://e198eb82c686:4040/jobs/job?id\u003d679",
            "http://e198eb82c686:4040/jobs/job?id\u003d680",
            "http://e198eb82c686:4040/jobs/job?id\u003d681",
            "http://e198eb82c686:4040/jobs/job?id\u003d682",
            "http://e198eb82c686:4040/jobs/job?id\u003d683"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532556735133_-599398455",
      "id": "20180725-221215_161742972",
      "dateCreated": "2018-07-25 22:12:15.133",
      "dateStarted": "2018-08-15 21:06:24.741",
      "dateFinished": "2018-08-15 21:47:48.534",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transcript_aligments_mouse_anti_longevity_outer \u003d joinDataFrames(mice_anti.map(_._2), joinFields, \"outer\").sort($\"TPM_gray_whale_liver\".desc)\ntranscript_aligments_mouse_anti_longevity_outer.coalesce(1).writeTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_anti_longevity_mouse.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 22:46:59.853",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "transcript_aligments_mouse_anti_longevity_outer: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\njava.util.NoSuchElementException: None.get\n  at scala.None$.get(Option.scala:347)\n  at scala.None$.get(Option.scala:345)\n  at org.apache.spark.sql.execution.datasources.BasicWriteJobStatsTracker$.metrics(BasicWriteStatsTracker.scala:173)\n  at org.apache.spark.sql.execution.command.DataWritingCommand$class.metrics(DataWritingCommand.scala:47)\n  at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.metrics$lzycompute(InsertIntoHadoopFsRelationCommand.scala:46)\n  at org.apache.spark.sql.execution.datasources.InsertIntoHadoopFsRelationCommand.metrics(InsertIntoHadoopFsRelationCommand.scala:46)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.metrics$lzycompute(commands.scala:100)\n  at org.apache.spark.sql.execution.command.DataWritingCommandExec.metrics(commands.scala:100)\n  at org.apache.spark.sql.execution.SparkPlanInfo$.fromSparkPlan(SparkPlanInfo.scala:58)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:75)\n  at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:654)\n  at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:273)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:267)\n  at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:225)\n  at org.apache.spark.sql.DataFrameWriter.csv(DataFrameWriter.scala:642)\n  at group.research.aging.spark.extensions.DataFrameExtensions$DataFrameExtended.writeTSV(DataFrameExtensions.scala:16)\n  ... 76 elided\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532556730637_-1910603931",
      "id": "20180725-221210_1914630945",
      "dateCreated": "2018-07-25 22:12:10.637",
      "dateStarted": "2018-08-15 22:47:00.471",
      "dateFinished": "2018-08-15 22:47:26.160",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val flies_pro \u003d transcriptomes.map(t \u003d\u003e t-\u003e makeAligment(\"fly\", \"pro\", t, quantMap))\n//z.show(flies_pro.map{ case (t, d) \u003d\u003e t -\u003e d.count})",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:17:46.432",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "flies_pro: Seq[(String, org.apache.spark.sql.DataFrame)] \u003d List((bowhead_liver,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (bowhead_kidney,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (cow,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (gray_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (human,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (minke_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (mouse,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat_ensembl,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]))\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d111",
            "http://e198eb82c686:4040/jobs/job?id\u003d112",
            "http://e198eb82c686:4040/jobs/job?id\u003d113",
            "http://e198eb82c686:4040/jobs/job?id\u003d114",
            "http://e198eb82c686:4040/jobs/job?id\u003d115",
            "http://e198eb82c686:4040/jobs/job?id\u003d116",
            "http://e198eb82c686:4040/jobs/job?id\u003d117",
            "http://e198eb82c686:4040/jobs/job?id\u003d118",
            "http://e198eb82c686:4040/jobs/job?id\u003d119",
            "http://e198eb82c686:4040/jobs/job?id\u003d120",
            "http://e198eb82c686:4040/jobs/job?id\u003d121",
            "http://e198eb82c686:4040/jobs/job?id\u003d122",
            "http://e198eb82c686:4040/jobs/job?id\u003d123",
            "http://e198eb82c686:4040/jobs/job?id\u003d124",
            "http://e198eb82c686:4040/jobs/job?id\u003d125",
            "http://e198eb82c686:4040/jobs/job?id\u003d126",
            "http://e198eb82c686:4040/jobs/job?id\u003d127",
            "http://e198eb82c686:4040/jobs/job?id\u003d128"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532109154444_1697088230",
      "id": "20180720-175234_1776430976",
      "dateCreated": "2018-07-20 17:52:34.444",
      "dateStarted": "2018-08-13 17:18:27.981",
      "dateFinished": "2018-08-13 17:19:15.827",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transcript_aligments_flies_pro_longevity_outer \u003d joinDataFrames(flies_pro.map(_._2), joinFields, \"outer\")\ntranscript_aligments_flies_pro_longevity_outer.coalesce(1).writeTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_pro_longevity_fly.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:17:50.985",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "transcript_aligments_flies_pro_longevity_outer: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nres43: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_transcripts/transcripts_aligments_pro_longevity_fly.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d129",
            "http://e198eb82c686:4040/jobs/job?id\u003d131",
            "http://e198eb82c686:4040/jobs/job?id\u003d130",
            "http://e198eb82c686:4040/jobs/job?id\u003d132",
            "http://e198eb82c686:4040/jobs/job?id\u003d133",
            "http://e198eb82c686:4040/jobs/job?id\u003d134",
            "http://e198eb82c686:4040/jobs/job?id\u003d135",
            "http://e198eb82c686:4040/jobs/job?id\u003d136",
            "http://e198eb82c686:4040/jobs/job?id\u003d137",
            "http://e198eb82c686:4040/jobs/job?id\u003d138",
            "http://e198eb82c686:4040/jobs/job?id\u003d139",
            "http://e198eb82c686:4040/jobs/job?id\u003d140",
            "http://e198eb82c686:4040/jobs/job?id\u003d141",
            "http://e198eb82c686:4040/jobs/job?id\u003d142",
            "http://e198eb82c686:4040/jobs/job?id\u003d143",
            "http://e198eb82c686:4040/jobs/job?id\u003d144"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532557305643_-886195301",
      "id": "20180725-222145_1268310612",
      "dateCreated": "2018-07-25 22:21:45.643",
      "dateStarted": "2018-08-13 17:19:11.760",
      "dateFinished": "2018-08-13 17:19:48.165",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val flies_anti \u003d transcriptomes.map(t \u003d\u003e t-\u003e makeAligment(\"fly\", \"anti\", t, quantMap))\n//z.show(flies_anti.map{ case (t, d) \u003d\u003e t -\u003e d.count})",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:17:56.159",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "flies_anti: Seq[(String, org.apache.spark.sql.DataFrame)] \u003d List((bowhead_liver,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (bowhead_kidney,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (cow,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (gray_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (human,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (minke_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (mouse,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat_ensembl,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]))\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d145",
            "http://e198eb82c686:4040/jobs/job?id\u003d146",
            "http://e198eb82c686:4040/jobs/job?id\u003d147",
            "http://e198eb82c686:4040/jobs/job?id\u003d148",
            "http://e198eb82c686:4040/jobs/job?id\u003d149",
            "http://e198eb82c686:4040/jobs/job?id\u003d150",
            "http://e198eb82c686:4040/jobs/job?id\u003d151",
            "http://e198eb82c686:4040/jobs/job?id\u003d152",
            "http://e198eb82c686:4040/jobs/job?id\u003d153",
            "http://e198eb82c686:4040/jobs/job?id\u003d154",
            "http://e198eb82c686:4040/jobs/job?id\u003d155",
            "http://e198eb82c686:4040/jobs/job?id\u003d156",
            "http://e198eb82c686:4040/jobs/job?id\u003d157",
            "http://e198eb82c686:4040/jobs/job?id\u003d158",
            "http://e198eb82c686:4040/jobs/job?id\u003d159",
            "http://e198eb82c686:4040/jobs/job?id\u003d160",
            "http://e198eb82c686:4040/jobs/job?id\u003d161",
            "http://e198eb82c686:4040/jobs/job?id\u003d162"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532557346048_-1281190960",
      "id": "20180725-222226_735767199",
      "dateCreated": "2018-07-25 22:22:26.048",
      "dateStarted": "2018-08-13 17:19:16.396",
      "dateFinished": "2018-08-13 17:19:51.579",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transcript_aligments_flies_anti_longevity_outer \u003d joinDataFrames(flies_anti.map(_._2), joinFields, \"outer\")\ntranscript_aligments_flies_anti_longevity_outer.coalesce(1).writeTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_anti_longevity_fly.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:18:00.617",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "transcript_aligments_flies_anti_longevity_outer: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nres47: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_transcripts/transcripts_aligments_anti_longevity_fly.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d163",
            "http://e198eb82c686:4040/jobs/job?id\u003d164",
            "http://e198eb82c686:4040/jobs/job?id\u003d165",
            "http://e198eb82c686:4040/jobs/job?id\u003d166",
            "http://e198eb82c686:4040/jobs/job?id\u003d168",
            "http://e198eb82c686:4040/jobs/job?id\u003d167",
            "http://e198eb82c686:4040/jobs/job?id\u003d169",
            "http://e198eb82c686:4040/jobs/job?id\u003d170",
            "http://e198eb82c686:4040/jobs/job?id\u003d171",
            "http://e198eb82c686:4040/jobs/job?id\u003d172",
            "http://e198eb82c686:4040/jobs/job?id\u003d173",
            "http://e198eb82c686:4040/jobs/job?id\u003d174",
            "http://e198eb82c686:4040/jobs/job?id\u003d175",
            "http://e198eb82c686:4040/jobs/job?id\u003d176",
            "http://e198eb82c686:4040/jobs/job?id\u003d177",
            "http://e198eb82c686:4040/jobs/job?id\u003d178"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532557413711_1558216786",
      "id": "20180725-222333_700122959",
      "dateCreated": "2018-07-25 22:23:33.711",
      "dateStarted": "2018-08-13 17:19:48.741",
      "dateFinished": "2018-08-13 17:20:25.560",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val worms_pro \u003d transcriptomes.map(t \u003d\u003e t-\u003e makeAligment(\"worm\", \"pro\", t, quantMap))\n//z.show(worms_pro.map{ case (t, d) \u003d\u003e t -\u003e d.count})",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:18:04.482",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "worms_pro: Seq[(String, org.apache.spark.sql.DataFrame)] \u003d List((bowhead_liver,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (bowhead_kidney,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (cow,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (gray_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (human,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (minke_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (mouse,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat_ensembl,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]))\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d179",
            "http://e198eb82c686:4040/jobs/job?id\u003d180",
            "http://e198eb82c686:4040/jobs/job?id\u003d181",
            "http://e198eb82c686:4040/jobs/job?id\u003d182",
            "http://e198eb82c686:4040/jobs/job?id\u003d183",
            "http://e198eb82c686:4040/jobs/job?id\u003d184",
            "http://e198eb82c686:4040/jobs/job?id\u003d185",
            "http://e198eb82c686:4040/jobs/job?id\u003d186",
            "http://e198eb82c686:4040/jobs/job?id\u003d187",
            "http://e198eb82c686:4040/jobs/job?id\u003d188",
            "http://e198eb82c686:4040/jobs/job?id\u003d189",
            "http://e198eb82c686:4040/jobs/job?id\u003d190",
            "http://e198eb82c686:4040/jobs/job?id\u003d191",
            "http://e198eb82c686:4040/jobs/job?id\u003d192",
            "http://e198eb82c686:4040/jobs/job?id\u003d193",
            "http://e198eb82c686:4040/jobs/job?id\u003d194",
            "http://e198eb82c686:4040/jobs/job?id\u003d195",
            "http://e198eb82c686:4040/jobs/job?id\u003d196"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532303064962_398064646",
      "id": "20180722-234424_1305122930",
      "dateCreated": "2018-07-22 23:44:24.962",
      "dateStarted": "2018-08-13 17:19:52.148",
      "dateFinished": "2018-08-13 17:20:29.094",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transcript_aligments_worms_pro_longevity_outer \u003d joinDataFrames(worms_pro.map(_._2), joinFields, \"outer\").sort($\"TPM_gray_whale_liver\".desc)\ntranscript_aligments_worms_pro_longevity_outer.coalesce(1).writeTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_pro_longevity_worm.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:18:09.921",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "transcript_aligments_worms_pro_longevity_outer: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nres51: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_transcripts/transcripts_aligments_pro_longevity_worm.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d197",
            "http://e198eb82c686:4040/jobs/job?id\u003d198",
            "http://e198eb82c686:4040/jobs/job?id\u003d199",
            "http://e198eb82c686:4040/jobs/job?id\u003d200",
            "http://e198eb82c686:4040/jobs/job?id\u003d201",
            "http://e198eb82c686:4040/jobs/job?id\u003d202",
            "http://e198eb82c686:4040/jobs/job?id\u003d203",
            "http://e198eb82c686:4040/jobs/job?id\u003d204",
            "http://e198eb82c686:4040/jobs/job?id\u003d205",
            "http://e198eb82c686:4040/jobs/job?id\u003d206",
            "http://e198eb82c686:4040/jobs/job?id\u003d207",
            "http://e198eb82c686:4040/jobs/job?id\u003d208",
            "http://e198eb82c686:4040/jobs/job?id\u003d209",
            "http://e198eb82c686:4040/jobs/job?id\u003d210",
            "http://e198eb82c686:4040/jobs/job?id\u003d211",
            "http://e198eb82c686:4040/jobs/job?id\u003d212",
            "http://e198eb82c686:4040/jobs/job?id\u003d213"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532087079873_594427736",
      "id": "20180720-114439_177678640",
      "dateCreated": "2018-07-20 11:44:39.873",
      "dateStarted": "2018-08-13 17:20:26.128",
      "dateFinished": "2018-08-13 17:21:07.811",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val worms_anti \u003d transcriptomes.map(t \u003d\u003e t-\u003e makeAligment(\"worm\", \"anti\", t, quantMap))\n//z.show(worms_anti.map{ case (t, d) \u003d\u003e t -\u003e d.count})",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:18:12.453",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "worms_anti: Seq[(String, org.apache.spark.sql.DataFrame)] \u003d List((bowhead_liver,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (bowhead_kidney,[Entrez Gene ID: int, Gene Name: string ... 6 more fields]), (cow,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (gray_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (human,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (minke_whale,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (mouse,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]), (naked_mole_rat_ensembl,[Entrez Gene ID: int, Gene Name: string ... 7 more fields]))\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d214",
            "http://e198eb82c686:4040/jobs/job?id\u003d215",
            "http://e198eb82c686:4040/jobs/job?id\u003d216",
            "http://e198eb82c686:4040/jobs/job?id\u003d217",
            "http://e198eb82c686:4040/jobs/job?id\u003d218",
            "http://e198eb82c686:4040/jobs/job?id\u003d219",
            "http://e198eb82c686:4040/jobs/job?id\u003d220",
            "http://e198eb82c686:4040/jobs/job?id\u003d221",
            "http://e198eb82c686:4040/jobs/job?id\u003d222",
            "http://e198eb82c686:4040/jobs/job?id\u003d223",
            "http://e198eb82c686:4040/jobs/job?id\u003d224",
            "http://e198eb82c686:4040/jobs/job?id\u003d225",
            "http://e198eb82c686:4040/jobs/job?id\u003d226",
            "http://e198eb82c686:4040/jobs/job?id\u003d227",
            "http://e198eb82c686:4040/jobs/job?id\u003d228",
            "http://e198eb82c686:4040/jobs/job?id\u003d229",
            "http://e198eb82c686:4040/jobs/job?id\u003d230",
            "http://e198eb82c686:4040/jobs/job?id\u003d231"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532557528931_-1464720886",
      "id": "20180725-222528_157477044",
      "dateCreated": "2018-07-25 22:25:28.931",
      "dateStarted": "2018-08-13 17:20:29.659",
      "dateFinished": "2018-08-13 17:21:12.473",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val transcript_aligments_worms_anti_longevity_outer \u003d joinDataFrames(worms_anti.map(_._2), joinFields, \"outer\").sort($\"TPM_gray_whale_liver\".desc)\ntranscript_aligments_worms_anti_longevity_outer.coalesce(1).writeTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_anti_longevity_worm.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:18:41.080",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "transcript_aligments_worms_anti_longevity_outer: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nres55: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_transcripts/transcripts_aligments_anti_longevity_worm.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d232",
            "http://e198eb82c686:4040/jobs/job?id\u003d233",
            "http://e198eb82c686:4040/jobs/job?id\u003d234",
            "http://e198eb82c686:4040/jobs/job?id\u003d235",
            "http://e198eb82c686:4040/jobs/job?id\u003d236",
            "http://e198eb82c686:4040/jobs/job?id\u003d237",
            "http://e198eb82c686:4040/jobs/job?id\u003d238",
            "http://e198eb82c686:4040/jobs/job?id\u003d239",
            "http://e198eb82c686:4040/jobs/job?id\u003d240",
            "http://e198eb82c686:4040/jobs/job?id\u003d241",
            "http://e198eb82c686:4040/jobs/job?id\u003d242",
            "http://e198eb82c686:4040/jobs/job?id\u003d243",
            "http://e198eb82c686:4040/jobs/job?id\u003d244",
            "http://e198eb82c686:4040/jobs/job?id\u003d245",
            "http://e198eb82c686:4040/jobs/job?id\u003d246",
            "http://e198eb82c686:4040/jobs/job?id\u003d247",
            "http://e198eb82c686:4040/jobs/job?id\u003d248"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532107738572_-1465932319",
      "id": "20180720-172858_1829873428",
      "dateCreated": "2018-07-20 17:28:58.572",
      "dateStarted": "2018-08-13 17:21:08.378",
      "dateFinished": "2018-08-13 17:21:53.658",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nSummarizing transcript into gene aligments\n------------------------------------------",
      "user": "anonymous",
      "dateUpdated": "2018-07-25 22:40:15.977",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003eSummarizing transcript into gene aligments\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532558383418_-1506063",
      "id": "20180725-223943_576751192",
      "dateCreated": "2018-07-25 22:39:43.418",
      "dateStarted": "2018-07-25 22:40:15.977",
      "dateFinished": "2018-07-25 22:40:15.983",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def byGenes(df: DataFrame, genes: DataFrame)(implicit session: SparkSession) \u003d {\nimport session.implicits._\nval (values, fields) \u003d df.na.fill(0.0)\n  .columns.filterNot(c\u003d\u003ec.contains(\"transcript_\") || c.contains(\"protein_\"))\n  .partition(c\u003d\u003ec.contains(\"identity\") || c.contains(\"TPM\"))\n    val mp \u003d values.map(v\u003d\u003ev -\u003e (if(v.contains(\"identity\")) \"max\" else \"sum\"))\n    val r \u003d df.groupBy(fields.head, fields.tail:_*).agg(mp.head, mp.tail:_*)\n    genes.join(r, \"Entrez Gene ID\").sort($\"sum(TPM_gray_whale_liver)\".desc)\n // .persist(StorageLevel.MEMORY_AND_DISK)\n}",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:18:58.696",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "byGenes: (df: org.apache.spark.sql.DataFrame, genes: org.apache.spark.sql.DataFrame)(implicit session: org.apache.spark.sql.SparkSession)org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532563411591_-1355816064",
      "id": "20180726-000331_538456363",
      "dateCreated": "2018-07-26 00:03:31.591",
      "dateStarted": "2018-08-13 17:21:13.040",
      "dateFinished": "2018-08-13 17:21:54.224",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "def compactGenes(df: DataFrame)(implicit session: SparkSession) \u003d {\nimport session.implicits._\nimport org.apache.spark.sql.functions._\nval essential \u003d List(\"Gene ID\", \"Entrez Gene ID\", \"Gene Symbol\", \"Organism\")\nval conc \u003d  new group.research.aging.spark.extensions.functions.Concatenate(\" || \", false)\ndf.groupBy(essential.head, essential.tail:_*).agg(\n  conc($\"Lifespan Effect\").as(\"Lifespan Effects\"),\n  conc($\"Method\").as(\"Methods\"), max(\"Max Lifespan Change\"), avg(\"Avg Lifespan Change\") )\n .persist(StorageLevel.MEMORY_AND_DISK)\n\n}",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 22:48:15.183",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "compactGenes: (df: org.apache.spark.sql.DataFrame)(implicit session: org.apache.spark.sql.SparkSession)org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532564590598_1219407784",
      "id": "20180726-002310_310353372",
      "dateCreated": "2018-07-26 00:23:10.598",
      "dateStarted": "2018-08-13 17:21:54.220",
      "dateFinished": "2018-08-13 17:21:54.771",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mg \u003d compactGenes(mouse_genes)(spark)\nval fg \u003d compactGenes(fly_genes)(spark)\nval wg \u003d compactGenes(worm_genes)(spark)",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:19:04.106",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Gene ID": "string",
                      "Entrez Gene ID": "string",
                      "Gene Symbol": "string",
                      "Organism": "string",
                      "Lifespan Effects": "string",
                      "Methods": "string",
                      "max(Max Lifespan Change)": "string",
                      "avg(Avg Lifespan Change)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mg: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 6 more fields]\nfg: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 6 more fields]\nwg: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Gene ID: int, Entrez Gene ID: int ... 6 more fields]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532564595724_-962604455",
      "id": "20180726-002315_1533077643",
      "dateCreated": "2018-07-26 00:23:15.724",
      "dateStarted": "2018-08-13 17:21:54.802",
      "dateFinished": "2018-08-13 17:21:55.642",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mouse_pro_genes \u003d byGenes(transcript_aligments_mouse_pro_longevity_outer, mg)(spark)\nmouse_pro_genes.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/\" + \"genes_pro_longevity_mouse.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:19:08.929",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mouse_pro_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nres60: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_genes/genes_pro_longevity_mouse.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d249",
            "http://e198eb82c686:4040/jobs/job?id\u003d250",
            "http://e198eb82c686:4040/jobs/job?id\u003d251",
            "http://e198eb82c686:4040/jobs/job?id\u003d252",
            "http://e198eb82c686:4040/jobs/job?id\u003d253",
            "http://e198eb82c686:4040/jobs/job?id\u003d254",
            "http://e198eb82c686:4040/jobs/job?id\u003d255",
            "http://e198eb82c686:4040/jobs/job?id\u003d256",
            "http://e198eb82c686:4040/jobs/job?id\u003d257",
            "http://e198eb82c686:4040/jobs/job?id\u003d258",
            "http://e198eb82c686:4040/jobs/job?id\u003d259",
            "http://e198eb82c686:4040/jobs/job?id\u003d260",
            "http://e198eb82c686:4040/jobs/job?id\u003d261",
            "http://e198eb82c686:4040/jobs/job?id\u003d262",
            "http://e198eb82c686:4040/jobs/job?id\u003d263",
            "http://e198eb82c686:4040/jobs/job?id\u003d264",
            "http://e198eb82c686:4040/jobs/job?id\u003d265",
            "http://e198eb82c686:4040/jobs/job?id\u003d266",
            "http://e198eb82c686:4040/jobs/job?id\u003d267"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532565542399_1308707240",
      "id": "20180726-003902_494670954",
      "dateCreated": "2018-07-26 00:39:02.400",
      "dateStarted": "2018-08-13 17:21:55.338",
      "dateFinished": "2018-08-13 17:22:48.167",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mouse_anti_genes \u003d byGenes(transcript_aligments_mouse_anti_longevity_outer, mg)(spark)\nmouse_anti_genes.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/\" + \"genes_anti_longevity_mouse.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:19:13.735",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mouse_anti_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nres62: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_genes/genes_anti_longevity_mouse.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d268",
            "http://e198eb82c686:4040/jobs/job?id\u003d269",
            "http://e198eb82c686:4040/jobs/job?id\u003d270",
            "http://e198eb82c686:4040/jobs/job?id\u003d271",
            "http://e198eb82c686:4040/jobs/job?id\u003d272",
            "http://e198eb82c686:4040/jobs/job?id\u003d273",
            "http://e198eb82c686:4040/jobs/job?id\u003d274",
            "http://e198eb82c686:4040/jobs/job?id\u003d275",
            "http://e198eb82c686:4040/jobs/job?id\u003d276",
            "http://e198eb82c686:4040/jobs/job?id\u003d277",
            "http://e198eb82c686:4040/jobs/job?id\u003d278",
            "http://e198eb82c686:4040/jobs/job?id\u003d279",
            "http://e198eb82c686:4040/jobs/job?id\u003d280",
            "http://e198eb82c686:4040/jobs/job?id\u003d281",
            "http://e198eb82c686:4040/jobs/job?id\u003d282",
            "http://e198eb82c686:4040/jobs/job?id\u003d283",
            "http://e198eb82c686:4040/jobs/job?id\u003d284",
            "http://e198eb82c686:4040/jobs/job?id\u003d285",
            "http://e198eb82c686:4040/jobs/job?id\u003d286"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532566226353_-1061346023",
      "id": "20180726-005026_1055734509",
      "dateCreated": "2018-07-26 00:50:26.353",
      "dateStarted": "2018-08-13 17:21:56.201",
      "dateFinished": "2018-08-13 17:23:37.788",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val flies_pro_genes \u003d byGenes(transcript_aligments_flies_pro_longevity_outer, fg)(spark)\nflies_pro_genes.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/\" + \"genes_pro_longevity_fly.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:19:19.267",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "flies_pro_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nres64: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_genes/genes_pro_longevity_fly.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d287",
            "http://e198eb82c686:4040/jobs/job?id\u003d288",
            "http://e198eb82c686:4040/jobs/job?id\u003d289",
            "http://e198eb82c686:4040/jobs/job?id\u003d290",
            "http://e198eb82c686:4040/jobs/job?id\u003d291",
            "http://e198eb82c686:4040/jobs/job?id\u003d292",
            "http://e198eb82c686:4040/jobs/job?id\u003d293",
            "http://e198eb82c686:4040/jobs/job?id\u003d294",
            "http://e198eb82c686:4040/jobs/job?id\u003d295",
            "http://e198eb82c686:4040/jobs/job?id\u003d296",
            "http://e198eb82c686:4040/jobs/job?id\u003d297",
            "http://e198eb82c686:4040/jobs/job?id\u003d298",
            "http://e198eb82c686:4040/jobs/job?id\u003d299",
            "http://e198eb82c686:4040/jobs/job?id\u003d300",
            "http://e198eb82c686:4040/jobs/job?id\u003d301",
            "http://e198eb82c686:4040/jobs/job?id\u003d302",
            "http://e198eb82c686:4040/jobs/job?id\u003d303",
            "http://e198eb82c686:4040/jobs/job?id\u003d304"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532566270561_-246258389",
      "id": "20180726-005110_81583558",
      "dateCreated": "2018-07-26 00:51:10.561",
      "dateStarted": "2018-08-13 17:22:48.729",
      "dateFinished": "2018-08-13 17:24:20.430",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val flies_anti_genes \u003d byGenes(transcript_aligments_flies_anti_longevity_outer, fg)(spark)\nflies_anti_genes.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/\" + \"genes_anti_longevity_fly.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:19:23.958",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "flies_anti_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nres66: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_genes/genes_anti_longevity_fly.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d305",
            "http://e198eb82c686:4040/jobs/job?id\u003d306",
            "http://e198eb82c686:4040/jobs/job?id\u003d307",
            "http://e198eb82c686:4040/jobs/job?id\u003d308",
            "http://e198eb82c686:4040/jobs/job?id\u003d309",
            "http://e198eb82c686:4040/jobs/job?id\u003d310",
            "http://e198eb82c686:4040/jobs/job?id\u003d311",
            "http://e198eb82c686:4040/jobs/job?id\u003d312",
            "http://e198eb82c686:4040/jobs/job?id\u003d313",
            "http://e198eb82c686:4040/jobs/job?id\u003d314",
            "http://e198eb82c686:4040/jobs/job?id\u003d315",
            "http://e198eb82c686:4040/jobs/job?id\u003d316",
            "http://e198eb82c686:4040/jobs/job?id\u003d317",
            "http://e198eb82c686:4040/jobs/job?id\u003d318",
            "http://e198eb82c686:4040/jobs/job?id\u003d319",
            "http://e198eb82c686:4040/jobs/job?id\u003d320",
            "http://e198eb82c686:4040/jobs/job?id\u003d321",
            "http://e198eb82c686:4040/jobs/job?id\u003d322"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532566330344_195410500",
      "id": "20180726-005210_639511826",
      "dateCreated": "2018-07-26 00:52:10.344",
      "dateStarted": "2018-08-13 17:23:38.361",
      "dateFinished": "2018-08-13 17:24:59.184",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val worm_pro_genes \u003d byGenes(transcript_aligments_worms_pro_longevity_outer, wg)(spark)\nworm_pro_genes.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/\" + \"genes_pro_longevity_worm.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:19:27.873",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Entrez Gene ID": "string",
                      "Gene ID": "string",
                      "Gene Symbol": "string",
                      "Organism": "string",
                      "Lifespan Effects": "string",
                      "Methods": "string",
                      "max(Max Lifespan Change)": "string",
                      "avg(Avg Lifespan Change)": "string",
                      "gene_stable_id": "string",
                      "Gene Name": "string",
                      "max(identity_human)": "string",
                      "sum(TPM_minke_whale_kidney)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_kidney)": "string",
                      "max(identity_naked_mole_rat)": "string",
                      "sum(TPM_cow_kidney)": "string",
                      "sum(TPM_mouse_kidney)": "string",
                      "sum(TPM_mouse_liver)": "string",
                      "sum(TPM_naked_mole_rat_liver)": "string",
                      "max(identity_cow)": "string",
                      "sum(TPM_human_kidney)": "string",
                      "sum(TPM_minke_whale_liver)": "string",
                      "sum(TPM_bowhead_kidney_kidney)": "string",
                      "sum(TPM_gray_whale_kidney)": "string",
                      "sum(TPM_gray_whale_liver)": "string",
                      "sum(TPM_cow_liver)": "string",
                      "max(identity_minke_whale)": "string",
                      "sum(TPM_naked_mole_rat_kidney)": "string",
                      "max(identity_bowhead_liver)": "string",
                      "max(identity_naked_mole_rat_ensembl)": "string",
                      "sum(TPM_bowhead_liver_liver)": "string",
                      "max(identity_gray_whale)": "string",
                      "max(identity_mouse)": "string",
                      "sum(TPM_human_liver)": "string",
                      "max(identity_bowhead_kidney)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_liver)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "worm_pro_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nres68: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_genes/genes_pro_longevity_worm.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d323",
            "http://e198eb82c686:4040/jobs/job?id\u003d324",
            "http://e198eb82c686:4040/jobs/job?id\u003d325",
            "http://e198eb82c686:4040/jobs/job?id\u003d326",
            "http://e198eb82c686:4040/jobs/job?id\u003d327",
            "http://e198eb82c686:4040/jobs/job?id\u003d328",
            "http://e198eb82c686:4040/jobs/job?id\u003d329",
            "http://e198eb82c686:4040/jobs/job?id\u003d330",
            "http://e198eb82c686:4040/jobs/job?id\u003d331",
            "http://e198eb82c686:4040/jobs/job?id\u003d332",
            "http://e198eb82c686:4040/jobs/job?id\u003d333",
            "http://e198eb82c686:4040/jobs/job?id\u003d334",
            "http://e198eb82c686:4040/jobs/job?id\u003d335",
            "http://e198eb82c686:4040/jobs/job?id\u003d336",
            "http://e198eb82c686:4040/jobs/job?id\u003d337",
            "http://e198eb82c686:4040/jobs/job?id\u003d338",
            "http://e198eb82c686:4040/jobs/job?id\u003d339",
            "http://e198eb82c686:4040/jobs/job?id\u003d340",
            "http://e198eb82c686:4040/jobs/job?id\u003d341"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532563592749_35152113",
      "id": "20180726-000632_368720132",
      "dateCreated": "2018-07-26 00:06:32.749",
      "dateStarted": "2018-08-13 17:24:20.994",
      "dateFinished": "2018-08-13 17:25:42.987",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val worm_anti_genes \u003d byGenes(transcript_aligments_worms_anti_longevity_outer, wg)(spark)\nworm_anti_genes.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/\" + \"genes_anti_longevity_worm.tab\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:19:32.276",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "worm_anti_genes: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nres70: String \u003d wasbs://storage@pipelines1.blob.core.windows.net/lags/by_genes/genes_anti_longevity_worm.tab\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d342",
            "http://e198eb82c686:4040/jobs/job?id\u003d343",
            "http://e198eb82c686:4040/jobs/job?id\u003d344",
            "http://e198eb82c686:4040/jobs/job?id\u003d345",
            "http://e198eb82c686:4040/jobs/job?id\u003d346",
            "http://e198eb82c686:4040/jobs/job?id\u003d347",
            "http://e198eb82c686:4040/jobs/job?id\u003d348",
            "http://e198eb82c686:4040/jobs/job?id\u003d349",
            "http://e198eb82c686:4040/jobs/job?id\u003d350",
            "http://e198eb82c686:4040/jobs/job?id\u003d351",
            "http://e198eb82c686:4040/jobs/job?id\u003d352",
            "http://e198eb82c686:4040/jobs/job?id\u003d353",
            "http://e198eb82c686:4040/jobs/job?id\u003d354",
            "http://e198eb82c686:4040/jobs/job?id\u003d355",
            "http://e198eb82c686:4040/jobs/job?id\u003d356",
            "http://e198eb82c686:4040/jobs/job?id\u003d357",
            "http://e198eb82c686:4040/jobs/job?id\u003d358",
            "http://e198eb82c686:4040/jobs/job?id\u003d359",
            "http://e198eb82c686:4040/jobs/job?id\u003d360"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1532565453856_-1492593784",
      "id": "20180726-003733_1015827498",
      "dateCreated": "2018-07-26 00:37:33.856",
      "dateStarted": "2018-08-13 17:25:01.246",
      "dateFinished": "2018-08-13 17:26:30.465",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nPrepare list of overexpressed transcripts\n-----------------------------------------",
      "user": "anonymous",
      "dateUpdated": "2018-08-10 10:03:34.493",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003ePrepare list of overexpressed transcripts\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533895360609_-150424810",
      "id": "20180810-100240_608917947",
      "dateCreated": "2018-08-10 10:02:40.610",
      "dateStarted": "2018-08-10 10:03:34.493",
      "dateFinished": "2018-08-10 10:03:36.884",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mice_pro_transcripts \u003d  spark.readTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_pro_longevity_mouse.tsv\"), headers \u003d true)\nval mice_anti_transcripts \u003d  spark.readTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_anti_longevity_mouse.tsv\"), headers \u003d true)\n\n\nval flies_pro_transcripts \u003d  spark.readTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_pro_longevity_fly.tsv\"), headers \u003d true)\nval flies_anti_transcripts \u003d  spark.readTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_anti_longevity_fly.tsv\"), headers \u003d true)\n\n\nval worms_pro_transcripts \u003d  spark.readTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_pro_longevity_worm.tsv\"), headers \u003d true)\nval worms_anti_transcripts \u003d  spark.readTSV(az(\"lags\" + \"/by_transcripts/\" + \"transcripts_aligments_anti_longevity_worm.tsv\"), headers \u003d true)\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:32:19.681",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mice_pro_transcripts: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nmice_anti_transcripts: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nflies_pro_transcripts: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nflies_anti_transcripts: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nworms_pro_transcripts: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\nworms_anti_transcripts: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, gene_stable_id: string ... 37 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d409",
            "http://e198eb82c686:4040/jobs/job?id\u003d410",
            "http://e198eb82c686:4040/jobs/job?id\u003d411",
            "http://e198eb82c686:4040/jobs/job?id\u003d412",
            "http://e198eb82c686:4040/jobs/job?id\u003d413",
            "http://e198eb82c686:4040/jobs/job?id\u003d414",
            "http://e198eb82c686:4040/jobs/job?id\u003d415",
            "http://e198eb82c686:4040/jobs/job?id\u003d416",
            "http://e198eb82c686:4040/jobs/job?id\u003d417",
            "http://e198eb82c686:4040/jobs/job?id\u003d418",
            "http://e198eb82c686:4040/jobs/job?id\u003d419",
            "http://e198eb82c686:4040/jobs/job?id\u003d420"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1533895416506_1697232581",
      "id": "20180810-100336_924246673",
      "dateCreated": "2018-08-10 10:03:36.506",
      "dateStarted": "2018-08-13 17:32:19.736",
      "dateFinished": "2018-08-13 17:32:22.839",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "mice_pro_transcripts.registerTempTable(\"mouse_pro_transcripts\")\nflies_pro_transcripts.registerTempTable(\"fly_pro_transcripts\")\nworms_pro_transcripts.registerTempTable(\"worm_pro_transcripts\")\n\nmice_anti_transcripts.registerTempTable(\"mouse_anti_transcripts\")\nflies_anti_transcripts.registerTempTable(\"fly_anti_transcripts\")\nworms_anti_transcripts.registerTempTable(\"worm_anti_transcripts\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:28:26.521",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533896188893_1554362133",
      "id": "20180810-101628_409734324",
      "dateCreated": "2018-08-10 10:16:28.893",
      "dateStarted": "2018-08-13 17:28:26.576",
      "dateFinished": "2018-08-13 17:28:27.894",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "z.show(transcript_aligments_mouse_pro_longevity_outer.where($\"transcript_stable_id\" like \"%ENSMUST00000108658%\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:42:11.211",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Entrez Gene ID": "string",
                      "gene_stable_id": "string",
                      "protein_stable_id": "string",
                      "transcript_stable_id": "string",
                      "Gene Name": "string",
                      "transcript_bowhead_liver": "string",
                      "identity_bowhead_liver": "string",
                      "TPM_bowhead_liver_liver": "string",
                      "transcript_bowhead_kidney": "string",
                      "identity_bowhead_kidney": "string",
                      "TPM_bowhead_kidney_kidney": "string",
                      "transcript_cow": "string",
                      "identity_cow": "string",
                      "TPM_cow_liver": "string",
                      "TPM_cow_kidney": "string",
                      "transcript_gray_whale": "string",
                      "identity_gray_whale": "string",
                      "TPM_gray_whale_liver": "string",
                      "TPM_gray_whale_kidney": "string",
                      "transcript_human": "string",
                      "identity_human": "string",
                      "TPM_human_liver": "string",
                      "TPM_human_kidney": "string",
                      "transcript_minke_whale": "string",
                      "identity_minke_whale": "string",
                      "TPM_minke_whale_liver": "string",
                      "TPM_minke_whale_kidney": "string",
                      "transcript_mouse": "string",
                      "identity_mouse": "string",
                      "TPM_mouse_liver": "string",
                      "TPM_mouse_kidney": "string",
                      "transcript_naked_mole_rat": "string",
                      "identity_naked_mole_rat": "string",
                      "TPM_naked_mole_rat_liver": "string",
                      "TPM_naked_mole_rat_kidney": "string",
                      "transcript_naked_mole_rat_ensembl": "string",
                      "identity_naked_mole_rat_ensembl": "string",
                      "TPM_naked_mole_rat_ensembl_liver": "string",
                      "TPM_naked_mole_rat_ensembl_kidney": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Entrez Gene ID\tgene_stable_id\tprotein_stable_id\ttranscript_stable_id\tGene Name\ttranscript_bowhead_liver\tidentity_bowhead_liver\tTPM_bowhead_liver_liver\ttranscript_bowhead_kidney\tidentity_bowhead_kidney\tTPM_bowhead_kidney_kidney\ttranscript_cow\tidentity_cow\tTPM_cow_liver\tTPM_cow_kidney\ttranscript_gray_whale\tidentity_gray_whale\tTPM_gray_whale_liver\tTPM_gray_whale_kidney\ttranscript_human\tidentity_human\tTPM_human_liver\tTPM_human_kidney\ttranscript_minke_whale\tidentity_minke_whale\tTPM_minke_whale_liver\tTPM_minke_whale_kidney\ttranscript_mouse\tidentity_mouse\tTPM_mouse_liver\tTPM_mouse_kidney\ttranscript_naked_mole_rat\tidentity_naked_mole_rat\tTPM_naked_mole_rat_liver\tTPM_naked_mole_rat_kidney\ttranscript_naked_mole_rat_ensembl\tidentity_naked_mole_rat_ensembl\tTPM_naked_mole_rat_ensembl_liver\tTPM_naked_mole_rat_ensembl_kidney\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d520",
            "http://e198eb82c686:4040/jobs/job?id\u003d521",
            "http://e198eb82c686:4040/jobs/job?id\u003d522",
            "http://e198eb82c686:4040/jobs/job?id\u003d523",
            "http://e198eb82c686:4040/jobs/job?id\u003d524",
            "http://e198eb82c686:4040/jobs/job?id\u003d525",
            "http://e198eb82c686:4040/jobs/job?id\u003d526",
            "http://e198eb82c686:4040/jobs/job?id\u003d527",
            "http://e198eb82c686:4040/jobs/job?id\u003d528",
            "http://e198eb82c686:4040/jobs/job?id\u003d529",
            "http://e198eb82c686:4040/jobs/job?id\u003d530",
            "http://e198eb82c686:4040/jobs/job?id\u003d531",
            "http://e198eb82c686:4040/jobs/job?id\u003d532",
            "http://e198eb82c686:4040/jobs/job?id\u003d533",
            "http://e198eb82c686:4040/jobs/job?id\u003d534",
            "http://e198eb82c686:4040/jobs/job?id\u003d535"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1534181719436_-991907795",
      "id": "20180813-173519_1294520695",
      "dateCreated": "2018-08-13 17:35:19.436",
      "dateStarted": "2018-08-13 17:42:11.265",
      "dateFinished": "2018-08-13 17:43:13.947",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "z.show(mouse_pro_genes.where($\"Gene Symbol\" like \"Trp53\"))",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:36:00.745",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Entrez Gene ID": "string",
                      "Gene ID": "string",
                      "Gene Symbol": "string",
                      "Organism": "string",
                      "Lifespan Effects": "string",
                      "Methods": "string",
                      "max(Max Lifespan Change)": "string",
                      "avg(Avg Lifespan Change)": "string",
                      "gene_stable_id": "string",
                      "Gene Name": "string",
                      "max(identity_bowhead_liver)": "string",
                      "sum(TPM_bowhead_liver_liver)": "string",
                      "max(identity_bowhead_kidney)": "string",
                      "sum(TPM_bowhead_kidney_kidney)": "string",
                      "max(identity_cow)": "string",
                      "sum(TPM_cow_liver)": "string",
                      "sum(TPM_cow_kidney)": "string",
                      "max(identity_gray_whale)": "string",
                      "sum(TPM_gray_whale_liver)": "string",
                      "sum(TPM_gray_whale_kidney)": "string",
                      "max(identity_human)": "string",
                      "sum(TPM_human_liver)": "string",
                      "sum(TPM_human_kidney)": "string",
                      "max(identity_minke_whale)": "string",
                      "sum(TPM_minke_whale_liver)": "string",
                      "sum(TPM_minke_whale_kidney)": "string",
                      "max(identity_mouse)": "string",
                      "sum(TPM_mouse_liver)": "string",
                      "sum(TPM_mouse_kidney)": "string",
                      "max(identity_naked_mole_rat)": "string",
                      "sum(TPM_naked_mole_rat_liver)": "string",
                      "sum(TPM_naked_mole_rat_kidney)": "string",
                      "max(identity_naked_mole_rat_ensembl)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_liver)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_kidney)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Entrez Gene ID\tGene ID\tGene Symbol\tOrganism\tLifespan Effects\tMethods\tmax(Max Lifespan Change)\tavg(Avg Lifespan Change)\tgene_stable_id\tGene Name\tmax(identity_bowhead_liver)\tsum(TPM_bowhead_liver_liver)\tmax(identity_bowhead_kidney)\tsum(TPM_bowhead_kidney_kidney)\tmax(identity_cow)\tsum(TPM_cow_liver)\tsum(TPM_cow_kidney)\tmax(identity_gray_whale)\tsum(TPM_gray_whale_liver)\tsum(TPM_gray_whale_kidney)\tmax(identity_human)\tsum(TPM_human_liver)\tsum(TPM_human_kidney)\tmax(identity_minke_whale)\tsum(TPM_minke_whale_liver)\tsum(TPM_minke_whale_kidney)\tmax(identity_mouse)\tsum(TPM_mouse_liver)\tsum(TPM_mouse_kidney)\tmax(identity_naked_mole_rat)\tsum(TPM_naked_mole_rat_liver)\tsum(TPM_naked_mole_rat_kidney)\tmax(identity_naked_mole_rat_ensembl)\tsum(TPM_naked_mole_rat_ensembl_liver)\tsum(TPM_naked_mole_rat_ensembl_kidney)\n22059\t682\tTrp53\tMus musculus\tdecrease || decrease || decrease || null || decrease || decrease\tMutation || Deletion || Deletion || Overexpression || Overexpression of the short isoform of p53 (p44) || Mutation\t40\t23.0\tENSMUSG00000059552\tTransformation related protein 53\tnull\tnull\tnull\tnull\tnull\tnull\tnull\t69.0\t9.246574\t9.423694\tnull\tnull\tnull\t69.0\t9.879072\t3.225847\t100.0\t5.465614\t7.564026999999999\t46.7\t10.497254\t2.512575\t67.2\t6.875925\t4.971285\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d426",
            "http://e198eb82c686:4040/jobs/job?id\u003d427",
            "http://e198eb82c686:4040/jobs/job?id\u003d428",
            "http://e198eb82c686:4040/jobs/job?id\u003d429",
            "http://e198eb82c686:4040/jobs/job?id\u003d430",
            "http://e198eb82c686:4040/jobs/job?id\u003d431",
            "http://e198eb82c686:4040/jobs/job?id\u003d432",
            "http://e198eb82c686:4040/jobs/job?id\u003d433",
            "http://e198eb82c686:4040/jobs/job?id\u003d434",
            "http://e198eb82c686:4040/jobs/job?id\u003d435",
            "http://e198eb82c686:4040/jobs/job?id\u003d436",
            "http://e198eb82c686:4040/jobs/job?id\u003d437",
            "http://e198eb82c686:4040/jobs/job?id\u003d438",
            "http://e198eb82c686:4040/jobs/job?id\u003d439",
            "http://e198eb82c686:4040/jobs/job?id\u003d440",
            "http://e198eb82c686:4040/jobs/job?id\u003d441",
            "http://e198eb82c686:4040/jobs/job?id\u003d442",
            "http://e198eb82c686:4040/jobs/job?id\u003d443"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1533895947038_383367199",
      "id": "20180810-101227_68550116",
      "dateCreated": "2018-08-10 10:12:27.038",
      "dateStarted": "2018-08-13 17:35:10.987",
      "dateFinished": "2018-08-13 17:35:59.685",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\nPrepare list of overexpressed gene\n-------------------------",
      "user": "anonymous",
      "dateUpdated": "2018-08-02 14:59:00.540",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {}
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch2\u003ePrepare list of overexpressed gene\u003c/h2\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1532565505702_-106464171",
      "id": "20180726-003825_44374273",
      "dateCreated": "2018-07-26 00:38:25.702",
      "dateStarted": "2018-08-02 14:58:48.969",
      "dateFinished": "2018-08-02 14:58:51.582",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val mice_pro_genes \u003d  spark.readTSV(az(\"lags\" + \"/by_genes/\" + \"genes_pro_longevity_mouse.tsv\"), headers \u003d true)\nval mice_anti_genes \u003d  spark.readTSV(az(\"lags\" + \"/by_genes/\" + \"genes_anti_longevity_mouse.tsv\"), headers \u003d true)\n\n\nval flies_pro_genes \u003d  spark.readTSV(az(\"lags\" + \"/by_genes/\" + \"genes_pro_longevity_fly.tsv\"), headers \u003d true)\nval flies_anti_genes \u003d  spark.readTSV(az(\"lags\" + \"/by_genes/\" + \"genes_anti_longevity_fly.tsv\"), headers \u003d true)\n\n\nval worms_pro_genes \u003d  spark.readTSV(az(\"lags\" + \"/by_genes/\" + \"genes_pro_longevity_worm.tsv\"), headers \u003d true)\nval worms_anti_genes \u003d  spark.readTSV(az(\"lags\" + \"/by_genes/\" + \"genes_anti_longevity_worm.tsv\"), headers \u003d true)\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:35:49.133",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "mice_pro_genes: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nmice_anti_genes: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nflies_pro_genes: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nflies_anti_genes: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nworms_pro_genes: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\nworms_anti_genes: org.apache.spark.sql.DataFrame \u003d [Entrez Gene ID: int, Gene ID: int ... 33 more fields]\n"
          }
        ]
      },
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            "http://e198eb82c686:4040/jobs/job?id\u003d444",
            "http://e198eb82c686:4040/jobs/job?id\u003d445",
            "http://e198eb82c686:4040/jobs/job?id\u003d446",
            "http://e198eb82c686:4040/jobs/job?id\u003d447",
            "http://e198eb82c686:4040/jobs/job?id\u003d448",
            "http://e198eb82c686:4040/jobs/job?id\u003d449",
            "http://e198eb82c686:4040/jobs/job?id\u003d450",
            "http://e198eb82c686:4040/jobs/job?id\u003d451",
            "http://e198eb82c686:4040/jobs/job?id\u003d452",
            "http://e198eb82c686:4040/jobs/job?id\u003d453",
            "http://e198eb82c686:4040/jobs/job?id\u003d454",
            "http://e198eb82c686:4040/jobs/job?id\u003d455"
          ],
          "interpreterSettingId": "spark"
        }
      },
      "apps": [],
      "jobName": "paragraph_1533219431579_1965435175",
      "id": "20180802-141711_719678430",
      "dateCreated": "2018-08-02 14:17:11.579",
      "dateStarted": "2018-08-13 17:35:59.825",
      "dateFinished": "2018-08-13 17:36:02.844",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "mice_pro_genes.registerTempTable(\"mouse_pro_genes\")\nflies_pro_genes.registerTempTable(\"fly_pro_genes\")\nworms_pro_genes.registerTempTable(\"worm_pro_genes\")\n\nmice_anti_genes.registerTempTable(\"mouse_anti_genes\")\nflies_anti_genes.registerTempTable(\"fly_anti_genes\")\nworms_anti_genes.registerTempTable(\"worm_anti_genes\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-10 10:15:52.371",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\nwarning: there was one deprecation warning; re-run with -deprecation for details\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533896130296_977151728",
      "id": "20180810-101530_377670926",
      "dateCreated": "2018-08-10 10:15:30.296",
      "dateStarted": "2018-08-10 10:15:52.429",
      "dateFinished": "2018-08-10 10:15:53.411",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val t \u003d mice_pro_genes.registerTempTable(\"mice_pro_genes\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-04 14:17:12.868",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "warning: there was one deprecation warning; re-run with -deprecation for details\nt: Unit \u003d ()\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533392199408_-36290656",
      "id": "20180804-141639_984427920",
      "dateCreated": "2018-08-04 14:16:39.409",
      "dateStarted": "2018-08-04 14:17:12.926",
      "dateFinished": "2018-08-04 14:17:13.350",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "mouse_pro_genes.registerTempTable(\"mouse_pro_genes\")\nfly_pro_genes.registerTempTable(\"fly_pro_genes\")\nworm_pro_genes.registerTempTable(\"worm_pro_genes\")\n\nmouse_anti_genes.registerTempTable(\"mouse_anti_genes\")\nfly_anti_genes.registerTempTable(\"fly_anti_genes\")\nworm_anti_genes.registerTempTable(\"worm_anti_genes\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-10 10:15:26.661",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533896033356_-1740283210",
      "id": "20180810-101353_1937063679",
      "dateCreated": "2018-08-10 10:13:53.357",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import org.apache.spark.sql.functions.{lower, upper}\n\nval mice_pro_genes_exp  \u003d  mice_pro_genes.where( lower($\"Methods\").contains(\"overexpression\")).sort($\"sum(TPM_gray_whale_liver)\".desc)\nval mice_anti_genes_exp \u003d  mice_anti_genes.where(lower($\"Methods\").contains(\"overexpression\")).sort($\"sum(TPM_gray_whale_liver)\".desc)\n\nval flies_pro_genes_exp  \u003d  flies_pro_genes.where( lower($\"Methods\").contains(\"overexpression\")).sort($\"sum(TPM_gray_whale_liver)\".desc)\nval flies_anti_genes_exp \u003d  flies_anti_genes.where(lower($\"Methods\").contains(\"overexpression\")).sort($\"sum(TPM_gray_whale_liver)\".desc)\n\nval worms_pro_genes_exp  \u003d  worms_pro_genes.where( lower($\"Methods\").contains(\"overexpression\")).sort($\"sum(TPM_gray_whale_liver)\".desc)\nval worms_anti_genes_exp \u003d  worms_anti_genes.where(lower($\"Methods\").contains(\"overexpression\")).sort($\"sum(TPM_gray_whale_liver)\".desc)\n\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:24:43.699",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "import org.apache.spark.sql.functions.{lower, upper}\n\u003cconsole\u003e:45: error: not found: value mice_pro_genes\n       val mice_pro_genes_exp  \u003d  mice_pro_genes.where( lower($\"Methods\").contains(\"overexpression\")).sort($\"sum(TPM_gray_whale_liver)\".desc)\n                                  ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533219429066_-1776390877",
      "id": "20180802-141709_1056720095",
      "dateCreated": "2018-08-02 14:17:09.066",
      "dateStarted": "2018-08-13 17:26:30.833",
      "dateFinished": "2018-08-13 17:26:30.977",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "mice_pro_genes_exp.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/over_expression/\" + \"genes_pro_longevity_mouse_exp.tab\"))\nmice_anti_genes_exp.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/over_expression/\" + \"genes_anti_longevity_mouse_exp.tab\"))\n\nflies_pro_genes_exp.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/over_expression/\" + \"genes_pro_longevity_fly_exp.tab\"))\nflies_anti_genes_exp.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/over_expression/\" + \"genes_anti_longevity_fly_exp.tab\"))\n\nworms_pro_genes_exp.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/over_expression/\" + \"genes_pro_longevity_worm_exp.tab\"))\nworms_anti_genes_exp.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/over_expression/\" + \"genes_anti_longevity_worm_exp.tab\"))\n\n",
      "user": "anonymous",
      "dateUpdated": "2018-08-13 17:24:47.464",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Entrez Gene ID": "string",
                      "Gene ID": "string",
                      "Gene Symbol": "string",
                      "Organism": "string",
                      "Lifespan Effects": "string",
                      "Methods": "string",
                      "max(Max Lifespan Change)": "string",
                      "avg(Avg Lifespan Change)": "string",
                      "gene_stable_id": "string",
                      "Gene Name": "string",
                      "max(identity_bowhead_liver)": "string",
                      "sum(TPM_bowhead_liver_liver)": "string",
                      "max(identity_bowhead_kidney)": "string",
                      "sum(TPM_bowhead_kidney_kidney)": "string",
                      "max(identity_cow)": "string",
                      "sum(TPM_cow_liver)": "string",
                      "sum(TPM_cow_kidney)": "string",
                      "max(identity_gray_whale)": "string",
                      "sum(TPM_gray_whale_liver)": "string",
                      "sum(TPM_gray_whale_kidney)": "string",
                      "max(identity_human)": "string",
                      "sum(TPM_human_liver)": "string",
                      "sum(TPM_human_kidney)": "string",
                      "max(identity_minke_whale)": "string",
                      "sum(TPM_minke_whale_liver)": "string",
                      "sum(TPM_minke_whale_kidney)": "string",
                      "max(identity_mouse)": "string",
                      "sum(TPM_mouse_liver)": "string",
                      "sum(TPM_mouse_kidney)": "string",
                      "max(identity_naked_mole_rat)": "string",
                      "sum(TPM_naked_mole_rat_liver)": "string",
                      "sum(TPM_naked_mole_rat_kidney)": "string",
                      "max(identity_naked_mole_rat_ensembl)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_liver)": "string",
                      "sum(TPM_naked_mole_rat_ensembl_kidney)": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cconsole\u003e:52: error: not found: value mice_pro_genes_exp\n       mice_pro_genes_exp.coalesce(1).writeTSV(az(\"lags\" + \"/by_genes/over_expression/\" + \"genes_pro_longevity_mouse_exp.tab\"))\n       ^\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533222461844_-645951802",
      "id": "20180802-150741_2054149378",
      "dateCreated": "2018-08-02 15:07:41.844",
      "dateStarted": "2018-08-13 17:26:31.036",
      "dateFinished": "2018-08-13 17:26:31.068",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val t_now \u003d spark.readTSV(az(\"lags/by_transcripts_old/transcripts_aligments_anti_longevity_mouse.tsv\"), true)\nz.show(t_now.where($\"Entrez Gene ID\" \u003d\u003d\u003d 17319))",
      "user": "anonymous",
      "dateUpdated": "2018-08-15 22:06:58.755",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533222542094_1140502673",
      "id": "20180802-150902_1784249373",
      "dateCreated": "2018-08-02 15:09:02.094",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "summarize_LAGs",
  "id": "2DJTDQG6B",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "geometa:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}